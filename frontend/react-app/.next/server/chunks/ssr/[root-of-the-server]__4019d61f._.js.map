{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/components/Header.tsx"],"sourcesContent":["export default function Header() {\r\n  return (\r\n    <header className=\"bg-white border-b border-gray-200\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex items-center justify-between h-20\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"w-10 h-10 bg-red-500 rounded-lg flex items-center justify-center\">\r\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-800\">\r\n                  Hate Speech Detector\r\n                </h1>\r\n                <p className=\"text-sm text-gray-600 font-medium\">\r\n                  AI-powered content analysis\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"hidden md:flex items-center gap-2 bg-gray-50 rounded-full px-4 py-2 border border-gray-200\">\r\n              <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\r\n              <span className=\"text-sm font-medium text-gray-700\">Ready to analyze</span>\r\n            </div>\r\n            \r\n            <button className=\"p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-50 rounded-lg transition-all duration-200\">\r\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n} "],"names":[],"mappings":";;;;;AAAe,SAAS;IACtB,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;wCAAqB,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDAC5E,cAAA,8OAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;8CAGzE,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAAmC;;;;;;sDAGjD,8OAAC;4CAAE,WAAU;sDAAoC;;;;;;;;;;;;;;;;;;;;;;;kCAOvD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;wCAAK,WAAU;kDAAoC;;;;;;;;;;;;0CAGtD,8OAAC;gCAAO,WAAU;0CAChB,cAAA,8OAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CACjE,cAAA,8OAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQrF","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/components/TextInput.tsx"],"sourcesContent":["import { ChangeEvent, useState, useEffect, useCallback, useMemo, useRef } from 'react';\r\n\r\nexport interface ValidationRule {\r\n  type: 'minLength' | 'maxLength' | 'required' | 'custom';\r\n  value?: number;\r\n  message: string;\r\n  validator?: (text: string) => boolean;\r\n}\r\n\r\nexport interface TextInputProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  onClear?: () => void;\r\n  onAnalyze?: () => void;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  isAnalyzing?: boolean;\r\n  error?: string | null;\r\n  label?: string;\r\n  maxLength?: number;\r\n  minLength?: number;\r\n  className?: string;\r\n  showCharacterCount?: boolean;\r\n  showClearButton?: boolean;\r\n  showAnalyzeButton?: boolean;\r\n  analyzeButtonText?: string;\r\n  clearButtonText?: string;\r\n  validateOnChange?: boolean;\r\n  validationRules?: ValidationRule[];\r\n  onValidationChange?: (isValid: boolean, errors: string[]) => void;\r\n  confirmClearThreshold?: number; // Characters threshold for showing confirmation dialog\r\n  showClearConfirmation?: boolean;\r\n}\r\n\r\n// Default empty validation rules (stable reference)\r\nconst DEFAULT_VALIDATION_RULES: ValidationRule[] = [];\r\n\r\nexport default function TextInput({\r\n  value,\r\n  onChange,\r\n  onClear,\r\n  onAnalyze,\r\n  placeholder = \"Type or paste your text here...\",\r\n  disabled = false,\r\n  isAnalyzing = false,\r\n  error = null,\r\n  label = \"Enter text to analyze\",\r\n  maxLength = 5000,\r\n  minLength = 5,\r\n  className = \"\",\r\n  showCharacterCount = true,\r\n  showClearButton = true,\r\n  showAnalyzeButton = true,\r\n  analyzeButtonText = \"Analyze Text\",\r\n  clearButtonText = \"Clear\",\r\n  validateOnChange = true,\r\n  validationRules = DEFAULT_VALIDATION_RULES,\r\n  onValidationChange,\r\n  confirmClearThreshold = 50,\r\n  showClearConfirmation = true\r\n}: TextInputProps) {\r\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n  const [isValid, setIsValid] = useState(true);\r\n  const [showConfirmDialog, setShowConfirmDialog] = useState<boolean>(false);\r\n  const dialogRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Combine default rules with custom rules\r\n  const allRules = useMemo(() => {\r\n    const defaultRules: ValidationRule[] = [\r\n      {\r\n        type: 'required',\r\n        message: 'Text is required',\r\n        validator: (text: string) => text.trim().length > 0\r\n      },\r\n      {\r\n        type: 'minLength',\r\n        value: minLength,\r\n        message: `Text must be at least ${minLength} characters long`,\r\n        validator: (text: string) => text.trim().length >= minLength\r\n      },\r\n      {\r\n        type: 'maxLength',\r\n        value: maxLength,\r\n        message: `Text must not exceed ${maxLength} characters`,\r\n        validator: (text: string) => text.length <= maxLength\r\n      }\r\n    ];\r\n\r\n    return [...defaultRules, ...validationRules];\r\n  }, [minLength, maxLength, validationRules]);\r\n\r\n  // Validation function\r\n  const validateText = useCallback((text: string): { isValid: boolean; errors: string[] } => {\r\n    const errors: string[] = [];\r\n    \r\n    for (const rule of allRules) {\r\n      let isRuleValid = false;\r\n      \r\n      switch (rule.type) {\r\n        case 'required':\r\n          isRuleValid = text.trim().length > 0;\r\n          break;\r\n        case 'minLength':\r\n          isRuleValid = text.trim().length === 0 || text.trim().length >= (rule.value || minLength);\r\n          break;\r\n        case 'maxLength':\r\n          isRuleValid = text.length <= (rule.value || maxLength);\r\n          break;\r\n        case 'custom':\r\n          isRuleValid = rule.validator ? rule.validator(text) : true;\r\n          break;\r\n        default:\r\n          isRuleValid = true;\r\n      }\r\n      \r\n      if (!isRuleValid) {\r\n        errors.push(rule.message);\r\n      }\r\n    }\r\n    \r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }, [allRules, minLength, maxLength]);\r\n\r\n  // Effect to validate on value change\r\n  useEffect(() => {\r\n    if (validateOnChange) {\r\n      const { isValid: valid, errors } = validateText(value);\r\n      setIsValid(valid);\r\n      setValidationErrors(errors);\r\n    }\r\n  }, [value, validateOnChange, validateText]);\r\n\r\n  // Effect to notify parent of validation changes\r\n  useEffect(() => {\r\n    if (onValidationChange && validateOnChange) {\r\n      onValidationChange(isValid, validationErrors);\r\n    }\r\n  }, [isValid, validationErrors, onValidationChange, validateOnChange]);\r\n\r\n  const handleTextChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  const handleConfirmClear = useCallback(() => {\r\n    setShowConfirmDialog(false);\r\n    if (onClear) {\r\n      onClear();\r\n    }\r\n  }, [onClear]);\r\n\r\n  const handleCancelClear = useCallback(() => {\r\n    setShowConfirmDialog(false);\r\n  }, []);\r\n\r\n  const handleClearClick = () => {\r\n    // Check if we need to show confirmation dialog\r\n    if (showClearConfirmation && value.length >= confirmClearThreshold) {\r\n      setShowConfirmDialog(true);\r\n    } else {\r\n      // Clear immediately if no confirmation needed\r\n      if (onClear) {\r\n        onClear();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAnalyzeClick = () => {\r\n    if (onAnalyze) {\r\n      onAnalyze();\r\n    }\r\n  };\r\n\r\n  // Effect to handle keyboard events and click outside for confirmation dialog\r\n  useEffect(() => {\r\n    if (showConfirmDialog) {\r\n      const handleKeyDown = (e: KeyboardEvent) => {\r\n        if (e.key === 'Escape') {\r\n          handleCancelClear();\r\n        } else if (e.key === 'Enter') {\r\n          handleConfirmClear();\r\n        }\r\n      };\r\n\r\n      const handleClickOutside = (e: MouseEvent) => {\r\n        if (dialogRef.current && !dialogRef.current.contains(e.target as Node)) {\r\n          handleCancelClear();\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n        document.removeEventListener('mousedown', handleClickOutside);\r\n      };\r\n    }\r\n    // Return undefined for the else case to satisfy TypeScript\r\n    return undefined;\r\n  }, [showConfirmDialog, handleConfirmClear, handleCancelClear]);\r\n\r\n  const isAtLimit = value.length >= maxLength;\r\n  const isNearLimit = value.length >= maxLength * 0.8;\r\n  const characterCountColor = isAtLimit \r\n    ? 'text-red-500 font-semibold' \r\n    : isNearLimit \r\n      ? 'text-amber-500 font-medium' \r\n      : 'text-gray-500';\r\n\r\n  return (\r\n    <div className={`h-full ${className}`}>\r\n      <textarea\r\n        id=\"text-input\"\r\n        value={value}\r\n        onChange={handleTextChange}\r\n        placeholder={placeholder}\r\n        maxLength={maxLength}\r\n        className=\"w-full h-full px-6 py-6 placeholder-gray-400 text-gray-900 focus:outline-none resize-none bg-gray-50 border-0\"\r\n        disabled={disabled || isAnalyzing}\r\n      />\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/components/IssuesPanel.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { AnalysisResponse, FlaggedWord } from '@/types';\r\nimport { useState } from 'react';\r\n\r\ninterface IssuesPanelProps {\r\n  analysisResult: AnalysisResponse | null;\r\n  isAnalyzing: boolean;\r\n  onWordReplace: (originalWord: string, newWord: string) => void;\r\n  onIssueClick?: (issue: FlaggedWord) => void;\r\n  // Text input controls\r\n  text: string;\r\n  onClear: () => void;\r\n  onAnalyze: () => void;\r\n  maxLength: number;\r\n  // Error handling\r\n  error?: string | null;\r\n  validationErrors?: string[];\r\n}\r\n\r\nconst getCategoryColor = (category: string) => {\r\n  switch (category.toLowerCase()) {\r\n    case 'gender_bias':\r\n      return {\r\n        bg: 'bg-gradient-to-r from-pink-100 to-rose-100',\r\n        border: 'border-pink-300',\r\n        text: 'text-pink-800',\r\n        badge: 'bg-pink-500',\r\n        icon: '♀'\r\n      };\r\n    case 'racial_bias':\r\n      return {\r\n        bg: 'bg-gradient-to-r from-orange-100 to-amber-100',\r\n        border: 'border-orange-300',\r\n        text: 'text-orange-800',\r\n        badge: 'bg-orange-500',\r\n        icon: '⚡'\r\n      };\r\n    case 'age_bias':\r\n      return {\r\n        bg: 'bg-gradient-to-r from-purple-100 to-violet-100',\r\n        border: 'border-purple-300',\r\n        text: 'text-purple-800',\r\n        badge: 'bg-purple-500',\r\n        icon: '⏰'\r\n      };\r\n    case 'religious_bias':\r\n      return {\r\n        bg: 'bg-gradient-to-r from-emerald-100 to-teal-100',\r\n        border: 'border-emerald-300',\r\n        text: 'text-emerald-800',\r\n        badge: 'bg-emerald-500',\r\n        icon: '☪'\r\n      };\r\n    case 'disability_bias':\r\n      return {\r\n        bg: 'bg-gradient-to-r from-blue-100 to-indigo-100',\r\n        border: 'border-blue-300',\r\n        text: 'text-blue-800',\r\n        badge: 'bg-blue-500',\r\n        icon: '♿'\r\n      };\r\n    default:\r\n      return {\r\n        bg: 'bg-gradient-to-r from-gray-100 to-slate-100',\r\n        border: 'border-gray-300',\r\n        text: 'text-gray-800',\r\n        badge: 'bg-gray-500',\r\n        icon: '⚠'\r\n      };\r\n  }\r\n};\r\n\r\nconst getConfidenceColor = (confidence: number) => {\r\n  if (confidence >= 0.8) return 'text-red-600 bg-red-100';\r\n  if (confidence >= 0.6) return 'text-amber-600 bg-amber-100';\r\n  return 'text-green-600 bg-green-100';\r\n};\r\n\r\nexport function IssuesPanel({ \r\n  analysisResult, \r\n  isAnalyzing, \r\n  onWordReplace,\r\n  onIssueClick,\r\n  text,\r\n  onClear,\r\n  onAnalyze,\r\n  maxLength,\r\n  error,\r\n  validationErrors = []\r\n}: IssuesPanelProps) {\r\n  const [expandedIssues, setExpandedIssues] = useState<Set<number>>(new Set());\r\n\r\n  const toggleIssueExpansion = (index: number) => {\r\n    const newExpanded = new Set(expandedIssues);\r\n    if (newExpanded.has(index)) {\r\n      newExpanded.delete(index);\r\n    } else {\r\n      newExpanded.add(index);\r\n    }\r\n    setExpandedIssues(newExpanded);\r\n  };\r\n\r\n  const handleWordReplace = (originalWord: string, newWord: string) => {\r\n    onWordReplace(originalWord, newWord);\r\n  };\r\n\r\n  const handleIssueClick = (issue: FlaggedWord) => {\r\n    if (onIssueClick) {\r\n      onIssueClick(issue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full lg:w-96 h-full bg-white border-l border-gray-200\">\r\n      <div className=\"h-full flex flex-col\">\r\n        {/* Header */}\r\n        <div className=\"sticky top-0 bg-gray-50 border-b border-gray-200 p-4\">\r\n          <div className=\"flex items-center justify-center\">\r\n            <h2 className=\"text-xl font-bold text-gray-800\">\r\n              Issues Found\r\n            </h2>\r\n          </div>\r\n\r\n          {analysisResult && (\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center justify-between p-3 bg-white rounded-lg border border-gray-200\">\r\n                <span className=\"text-sm font-medium text-gray-700\">Analysis Confidence</span>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <div className=\"flex-1 bg-gray-200 rounded-full h-2 w-16\">\r\n                    <div \r\n                      className=\"bg-red-500 h-2 rounded-full transition-all duration-500\"\r\n                      style={{ width: `${analysisResult.confidence * 100}%` }}\r\n                    />\r\n                  </div>\r\n                  <span className={`text-xs font-semibold px-2 py-1 rounded-full ${getConfidenceColor(analysisResult.confidence)}`}>\r\n                    {Math.round(analysisResult.confidence * 100)}%\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-2 gap-3\">\r\n                <div className=\"bg-white rounded-lg p-3 border border-gray-200\">\r\n                  <div className=\"text-lg font-bold text-emerald-700\">{analysisResult.flaggedWords.length}</div>\r\n                  <div className=\"text-xs text-emerald-600 font-medium\">Issues Found</div>\r\n                </div>\r\n                <div className=\"bg-white rounded-lg p-3 border border-gray-200\">\r\n                  <div className=\"text-lg font-bold text-red-700\">\r\n                    {new Set(analysisResult.flaggedWords.map(fw => fw.category)).size}\r\n                  </div>\r\n                  <div className=\"text-xs text-red-600 font-medium\">Categories</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"flex-1 overflow-y-auto p-6 space-y-4 custom-scrollbar\">\r\n          {isAnalyzing && (\r\n            <div className=\"flex items-center justify-center py-12\">\r\n              <div className=\"text-center\">\r\n                <div className=\"w-12 h-12 border-4 border-red-200 border-t-red-600 rounded-full animate-spin mx-auto mb-4\"></div>\r\n                <p className=\"text-gray-600 font-medium\">Analyzing text for bias...</p>\r\n                <p className=\"text-sm text-gray-500 mt-1\">This may take a moment</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {!isAnalyzing && (!analysisResult || analysisResult.flaggedWords.length === 0) && (\r\n            <div className=\"flex flex-col items-center justify-center py-12 text-center\">\r\n              <div className=\"w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mb-4\">\r\n                <svg className=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                </svg>\r\n              </div>\r\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\r\n                {analysisResult ? 'No Issues Found!' : 'Ready to Analyze'}\r\n              </h3>\r\n              <p className=\"text-gray-600 text-sm leading-relaxed\">\r\n                {analysisResult \r\n                  ? 'Your text looks great! No bias or problematic language detected.'\r\n                  : 'Enter some text and click \"Analyze Text\" to get started.'\r\n                }\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          {!isAnalyzing && analysisResult && analysisResult.flaggedWords.length > 0 && (\r\n            <div className=\"space-y-4\">\r\n              {analysisResult.flaggedWords.map((issue, index) => {\r\n                const categoryStyle = getCategoryColor(issue.category);\r\n                const isExpanded = expandedIssues.has(index);\r\n                \r\n                return (\r\n                  <div \r\n                    key={index} \r\n                    className={`${categoryStyle.bg} ${categoryStyle.border} border rounded-lg hover:shadow-sm transition-all duration-300 cursor-pointer overflow-hidden`}\r\n                    onClick={() => {\r\n                      toggleIssueExpansion(index);\r\n                      handleIssueClick(issue);\r\n                    }}\r\n                  >\r\n                    <div className=\"p-4\">\r\n                      <div className=\"flex items-start justify-between mb-3\">\r\n                        <div className=\"flex items-center gap-3\">\r\n                          <div className={`${categoryStyle.badge} w-8 h-8 rounded-full flex items-center justify-center text-white font-bold`}>\r\n                            {categoryStyle.icon}\r\n                          </div>\r\n                          <div>\r\n                            <h4 className={`font-bold ${categoryStyle.text} text-sm`}>\r\n                              \"{issue.word}\"\r\n                            </h4>\r\n                            <p className={`text-xs ${categoryStyle.text} opacity-80 capitalize font-medium`}>\r\n                              {issue.category.replace('_', ' ')}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <span className={`text-xs font-bold px-2 py-1 rounded-full ${getConfidenceColor(issue.confidence)}`}>\r\n                            {Math.round(issue.confidence * 100)}%\r\n                          </span>\r\n                          <svg \r\n                            className={`w-5 h-5 ${categoryStyle.text} transition-transform duration-200 ${isExpanded ? 'rotate-180' : ''}`} \r\n                            fill=\"none\" \r\n                            stroke=\"currentColor\" \r\n                            viewBox=\"0 0 24 24\"\r\n                          >\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                          </svg>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {isExpanded && (                          <div className=\"space-y-4 animate-fadeIn\">\r\n                            <div className=\"bg-white/70 rounded-lg p-4\">\r\n                              <h5 className=\"font-semibold text-gray-800 text-sm mb-2 flex items-center gap-2\">\r\n                                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                </svg>\r\n                                Why this is problematic:\r\n                              </h5>\r\n                              <p className=\"text-gray-700 text-sm leading-relaxed\">\r\n                                {issue.explanation}\r\n                              </p>\r\n                            </div>\r\n\r\n                          <div className=\"space-y-2\">\r\n                            <h5 className=\"font-semibold text-gray-800 text-sm flex items-center gap-2\">\r\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\r\n                              </svg>\r\n                              Suggested alternatives:\r\n                            </h5>\r\n                            <div className=\"space-y-2\">\r\n                              {issue.suggestions.map((suggestion, suggestionIndex) => (\r\n                                <button\r\n                                  key={suggestionIndex}\r\n                                  onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    handleWordReplace(issue.word, suggestion.word);\r\n                                  }}\r\n                                  className=\"w-full text-left p-3 bg-white/80 hover:bg-white rounded-lg border border-gray-200 hover:border-gray-300 transition-all duration-200 group\"\r\n                                >\r\n                                  <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex-1\">\r\n                                      <span className=\"font-semibold text-gray-800 text-sm\">\r\n                                        \"{suggestion.word}\"\r\n                                      </span>\r\n                                      <div className=\"flex items-center gap-2 mt-1\">\r\n                                        <span className={`text-xs font-medium px-2 py-1 rounded-full ${getConfidenceColor(suggestion.confidence)}`}>\r\n                                          {Math.round(suggestion.confidence * 100)}% match\r\n                                        </span>\r\n                                      </div>\r\n                                      <p className=\"text-xs text-gray-600 mt-1\">\r\n                                        {suggestion.reason}\r\n                                      </p>\r\n                                    </div>\r\n                                    <svg className=\"w-5 h-5 text-gray-400 group-hover:text-red-600 transition-colors duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                                    </svg>\r\n                                  </div>\r\n                                </button>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Text Input Controls */}\r\n        <div className=\"sticky bottom-0 bg-white border-t border-gray-200 p-6\">\r\n          <div className=\"space-y-4\">\r\n            {/* Validation Errors */}\r\n            {(error || (validationErrors && validationErrors.length > 0)) && (\r\n              <div className=\"space-y-2\">\r\n                {error && (\r\n                  <div className=\"flex items-center gap-2 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n                    <svg className=\"w-4 h-4 text-red-500 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                    <span className=\"text-sm font-medium text-red-700\">{error}</span>\r\n                  </div>\r\n                )}\r\n                {validationErrors && validationErrors.map((validationError, index) => (\r\n                  <div key={index} className=\"flex items-center gap-2 p-3 bg-amber-50 border border-amber-200 rounded-lg\">\r\n                    <svg className=\"w-4 h-4 text-amber-500 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.664-.833-2.464 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n                    </svg>\r\n                    <span className=\"text-sm font-medium text-amber-700\">{validationError}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n\r\n            {/* Character Count */}\r\n            <div className={`text-sm flex items-center gap-1 ${\r\n              text.length >= maxLength \r\n                ? 'text-red-500 font-semibold' \r\n                : text.length >= maxLength * 0.8 \r\n                  ? 'text-amber-500 font-medium' \r\n                  : 'text-gray-500'\r\n            }`}>\r\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n              </svg>\r\n              {text.length} / {maxLength} characters\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"flex flex-col gap-3\">\r\n              <button\r\n                onClick={onClear}\r\n                disabled={!text || isAnalyzing}\r\n                className=\"w-full px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n              >\r\n                Clear Text\r\n              </button>\r\n              \r\n              <button\r\n                onClick={onAnalyze}\r\n                disabled={!text.trim() || isAnalyzing}\r\n                className=\"w-full px-4 py-2 text-sm font-medium text-white bg-red-500 border border-transparent rounded-lg hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n              >\r\n                {isAnalyzing ? (\r\n                  <div className=\"flex items-center justify-center gap-2\">\r\n                    <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\r\n                    Analyzing...\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex items-center justify-center gap-2\">\r\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n                    </svg>\r\n                    Analyze for Hate Speech\r\n                  </div>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1241, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/components/BiasDetectionApp.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useCallback } from 'react';\r\nimport { AnalysisResponse, AnalysisRequest } from '@/types';\r\nimport { analyzeText, convertToFlaggedWords } from '@/lib/api';\r\nimport Header from './Header';\r\nimport TextInput from './TextInput';\r\nimport { IssuesPanel } from './IssuesPanel';\r\n\r\nexport function BiasDetectionApp() {\r\n  const [text, setText] = useState('');\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResponse | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n\r\n  const handleValidationChange = useCallback((isValid: boolean, errors: string[]) => {\r\n    setValidationErrors(errors);\r\n  }, []);\r\n\r\n  const handleAnalyze = useCallback(async () => {\r\n    if (!text.trim()) {\r\n      setError('Please enter some text to analyze');\r\n      return;\r\n    }\r\n\r\n    setIsAnalyzing(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const request: AnalysisRequest = {\r\n        text: text.trim(),\r\n        confidence_threshold: 0.6\r\n      };\r\n\r\n      const result = await analyzeText(request);\r\n      setAnalysisResult(result);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred during analysis');\r\n      setAnalysisResult(null);\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  }, [text]);\r\n\r\n  const handleClearText = useCallback(() => {\r\n    setText('');\r\n    setAnalysisResult(null);\r\n    setError(null);\r\n  }, []);\r\n\r\n  const handleWordReplace = useCallback((originalWord: string, newWord: string) => {\r\n    const newText = text.replace(new RegExp(`\\\\b${originalWord}\\\\b`, 'g'), newWord);\r\n    setText(newText);\r\n    \r\n    // Update analysis result to reflect the change\r\n    if (analysisResult) {\r\n      const updatedClauses = analysisResult.hate_speech_clauses.map(clause => {\r\n        if (clause.clause.includes(originalWord)) {\r\n          return {\r\n            ...clause,\r\n            clause: clause.clause.replace(new RegExp(`\\\\b${originalWord}\\\\b`, 'g'), newWord)\r\n          };\r\n        }\r\n        return clause;\r\n      });\r\n      \r\n      setAnalysisResult({\r\n        ...analysisResult,\r\n        hate_speech_clauses: updatedClauses,\r\n        original_text: newText\r\n      });\r\n    }\r\n  }, [text, analysisResult]);\r\n\r\n  // Convert analysis result to flagged words format for IssuesPanel compatibility\r\n  const flaggedWords = analysisResult ? convertToFlaggedWords(analysisResult) : [];\r\n\r\n  const handleIssueClick = useCallback((issue: { word: string }) => {\r\n    // Find the corresponding clause for the flagged word\r\n    const clause = analysisResult?.hate_speech_clauses.find(c => \r\n      c.clause.includes(issue.word) && c.is_hate_speech\r\n    );\r\n    if (clause) {\r\n      // Could do something with the clause here if needed\r\n      console.log('Selected clause:', clause);\r\n    }\r\n  }, [analysisResult]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\r\n      {/* Fixed Header */}\r\n      <div className=\"fixed top-0 left-0 right-0 z-30 bg-white shadow-sm\">\r\n        <Header />\r\n      </div>\r\n      \r\n      {/* Main Content with Fixed Layout */}\r\n      <div className=\"flex pt-20 h-screen\">\r\n        {/* Left Column - Text Input Area - Scrollable */}\r\n        <div className=\"flex-1 overflow-y-auto bg-gray-50 main-scroll-area pr-96 lg:pr-96\">\r\n          <div className=\"h-full p-6 lg:p-8\">\r\n            <TextInput\r\n              value={text}\r\n              onChange={setText}\r\n              placeholder=\"Type or paste your text here...\"\r\n              maxLength={5000}\r\n              onValidationChange={handleValidationChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right Column - Fixed Issues Panel */}\r\n        <div className=\"fixed top-20 right-0 bottom-0 w-96 hidden lg:block z-20\">            <IssuesPanel\r\n              analysisResult={analysisResult ? {\r\n                ...analysisResult,\r\n                flaggedWords: flaggedWords,\r\n                analysisId: `analysis-${Date.now()}`,\r\n                timestamp: new Date().toISOString(),\r\n                confidence: analysisResult.summary.highest_confidence\r\n              } as any : null}\r\n              isAnalyzing={isAnalyzing}\r\n              onWordReplace={handleWordReplace}\r\n              onIssueClick={handleIssueClick}\r\n              text={text}\r\n              onClear={handleClearText}\r\n              onAnalyze={handleAnalyze}\r\n              maxLength={5000}\r\n              error={error}\r\n              validationErrors={validationErrors}\r\n            />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Mobile Issues Panel */}\r\n      <div className=\"lg:hidden\">\r\n        {(analysisResult || isAnalyzing) && (\r\n          <div className=\"border-t border-gray-200 bg-white\">\r\n            <IssuesPanel\r\n              analysisResult={analysisResult ? {\r\n                ...analysisResult,\r\n                flaggedWords: flaggedWords,\r\n                analysisId: `analysis-${Date.now()}`,\r\n                timestamp: new Date().toISOString(),\r\n                confidence: analysisResult.summary.highest_confidence\r\n              } as any : null}\r\n              isAnalyzing={isAnalyzing}\r\n              onWordReplace={handleWordReplace}\r\n              onIssueClick={handleIssueClick}\r\n              text={text}\r\n              onClear={handleClearText}\r\n              onAnalyze={handleAnalyze}\r\n              maxLength={5000}\r\n              error={error}\r\n              validationErrors={validationErrors}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1464, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/components/LandingPage.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { BiasDetectionApp } from './BiasDetectionApp';\r\n\r\nexport function LandingPage() {\r\n  // Explicitly set to false to ensure landing page shows first\r\n  const [showTool, setShowTool] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleGetStarted = () => {\r\n    setShowTool(true);\r\n  };\r\n\r\n  const handleDemoClick = () => {\r\n    setShowTool(true);\r\n  };\r\n\r\n  const handleWaitlist = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsSubmitting(true);\r\n    // Simulate API call\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    setIsSubmitting(false);\r\n    setEmail('');\r\n    alert('Thank you for joining our waitlist!');\r\n  };\r\n\r\n  // Show the tool if requested\r\n  if (showTool) {\r\n    return <BiasDetectionApp />;\r\n  }\r\n\r\n  // Default: Show landing page\r\n  return (\r\n    <div className=\"min-h-screen bg-slate-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white/80 backdrop-blur-sm border-b border-slate-200 sticky top-0 z-50\">\r\n        <div className=\"max-w-7xl mx-auto px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between h-20\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"w-10 h-10 bg-red-500 rounded-xl flex items-center justify-center transform hover:scale-105 transition-transform\">\r\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-xl font-bold text-slate-900 tracking-tight\">HateSpeech AI</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <nav className=\"hidden md:flex items-center space-x-10\">\r\n              <a href=\"#\" className=\"text-slate-600 hover:text-slate-900 text-sm font-medium tracking-wide transition-colors\">Product</a>\r\n              <a href=\"#\" className=\"text-slate-600 hover:text-slate-900 text-sm font-medium tracking-wide transition-colors\">Resources</a>\r\n              <a href=\"#\" className=\"text-slate-600 hover:text-slate-900 text-sm font-medium tracking-wide transition-colors\">Features</a>\r\n              <a href=\"#\" className=\"text-slate-600 hover:text-slate-900 text-sm font-medium tracking-wide transition-colors\">Pricing</a>\r\n              <a href=\"#\" className=\"text-slate-600 hover:text-slate-900 text-sm font-medium tracking-wide transition-colors\">Contact</a>\r\n            </nav>\r\n\r\n            <div className=\"flex items-center space-x-4\">\r\n              <button className=\"text-sm text-slate-700 hover:text-slate-900 font-medium px-4 py-2 transition-colors\">\r\n                Request Demo\r\n              </button>\r\n              <button \r\n                onClick={handleGetStarted}\r\n                className=\"bg-slate-900 text-white px-6 py-2.5 rounded-xl text-sm font-medium hover:bg-slate-800 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5\"\r\n              >\r\n                Get Started for free\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Hero Section - Two Column Layout */}\r\n      <section className=\"py-20 px-6 lg:px-8 bg-white\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\">\r\n            \r\n            {/* Left Column - Hero Content */}\r\n            <div className=\"space-y-8\">\r\n              <div className=\"space-y-6\">\r\n                <h1 className=\"text-5xl sm:text-6xl font-bold text-slate-900 leading-tight tracking-tight\">\r\n                  More than hate speech detection.<br />\r\n                  Preserve <span className=\"text-red-600\">what's safe</span>.\r\n                </h1>\r\n                \r\n                <p className=\"text-xl text-slate-600 leading-relaxed max-w-lg\">\r\n                  HateSpeech AI researchers use advanced machine learning models to ensure every piece of content is safe for your community.\r\n                </p>\r\n              </div>\r\n\r\n              {/* Stats */}\r\n              <div className=\"flex items-center gap-12\">\r\n                <div>\r\n                  <div className=\"text-4xl font-bold text-red-600\">94%</div>\r\n                  <div className=\"text-sm text-slate-600 font-medium\">Accuracy</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-4xl font-bold text-slate-900\">1M+</div>\r\n                  <div className=\"text-sm text-slate-600 font-medium\">Texts Analyzed</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-4xl font-bold text-slate-900\">50k+</div>\r\n                  <div className=\"text-sm text-slate-600 font-medium\">Communities</div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* CTA Buttons */}\r\n              <div className=\"flex gap-4\">\r\n                <button \r\n                  onClick={handleGetStarted}\r\n                  className=\"bg-red-600 text-white px-8 py-3 rounded-xl text-lg font-semibold hover:bg-red-700 transition-all duration-200 shadow-lg hover:shadow-xl\"\r\n                >\r\n                  Get started for free\r\n                </button>\r\n                <form onSubmit={handleWaitlist} className=\"flex gap-2\">\r\n                  <input\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    placeholder=\"Enter your email\"\r\n                    className=\"px-4 py-3 border border-slate-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent\"\r\n                    required\r\n                  />\r\n                  <button \r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                    className=\"bg-white text-slate-700 px-6 py-3 rounded-xl border border-slate-300 hover:bg-slate-50 transition-colors disabled:opacity-50 font-medium\"\r\n                  >\r\n                    {isSubmitting ? 'Joining...' : 'Join waitlist'}\r\n                  </button>\r\n                </form>\r\n              </div>\r\n\r\n              {/* Feature List */}\r\n              <div className=\"space-y-3 pt-4\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                  </svg>\r\n                  <span className=\"text-slate-700 font-medium\">The world's most accurate hate speech detector</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-3\">\r\n                  <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                  </svg>\r\n                  <span className=\"text-slate-700 font-medium\">Real-time content moderation API</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-3\">\r\n                  <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                  </svg>\r\n                  <span className=\"text-slate-700 font-medium\">Detailed explanations and confidence scores</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-3\">\r\n                  <svg className=\"w-5 h-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                  </svg>\r\n                  <span className=\"text-slate-700 font-medium\">Integrate with your existing workflow</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Right Column - Demo Interface */}\r\n            <div className=\"bg-white rounded-3xl shadow-2xl border border-slate-200 overflow-hidden\">\r\n              {/* Demo Header */}\r\n              <div className=\"bg-slate-50 border-b border-slate-200 px-6 py-4\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\r\n                  <span className=\"text-sm font-medium text-slate-600\">Hate Speech Detection</span>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Demo Content */}\r\n              <div className=\"p-6 space-y-6\">\r\n                <div className=\"space-y-3\">\r\n                  <label className=\"block text-sm font-medium text-slate-700\">\r\n                    Paste your text\r\n                  </label>\r\n                  <textarea\r\n                    className=\"w-full h-32 p-4 border border-slate-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent resize-none bg-slate-50 text-slate-700\"\r\n                    placeholder=\"Enter text to analyze for hate speech...\"\r\n                    value=\"[PLACEHOLDER] This is some sample text that would be analyzed for hate speech. Click the button below to try the real analyzer!\"\r\n                    readOnly\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"text-sm text-slate-600\">\r\n                    Try an example:\r\n                  </div>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    <button className=\"px-3 py-1.5 text-xs bg-slate-100 text-slate-700 rounded-lg hover:bg-slate-200 transition-colors\">\r\n                      Social Media Post\r\n                    </button>\r\n                    <button className=\"px-3 py-1.5 text-xs bg-slate-100 text-slate-700 rounded-lg hover:bg-slate-200 transition-colors\">\r\n                      Forum Comment\r\n                    </button>\r\n                    <button className=\"px-3 py-1.5 text-xs bg-slate-100 text-slate-700 rounded-lg hover:bg-slate-200 transition-colors\">\r\n                      Product Review\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                <button \r\n                  onClick={handleDemoClick}\r\n                  className=\"w-full bg-red-500 text-white py-3 rounded-xl font-semibold hover:bg-red-600 transition-all duration-200 shadow-lg hover:shadow-xl\"\r\n                >\r\n                  Analyze for Hate Speech\r\n                </button>\r\n\r\n                <div className=\"text-center text-xs text-slate-500 border-t border-slate-200 pt-4\">\r\n                  0/5,000 characters\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Footer */}\r\n      <footer className=\"bg-slate-900 text-white py-16 px-6 lg:px-8\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-12\">\r\n            <div>\r\n              <div className=\"flex items-center gap-3 mb-6\">\r\n                <div className=\"w-10 h-10 bg-red-600 rounded-xl flex items-center justify-center\">\r\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                </div>\r\n                <span className=\"text-xl font-bold\">HateSpeech AI</span>\r\n              </div>\r\n              <p className=\"text-slate-400 leading-relaxed text-lg\">\r\n                Advanced AI technology for creating safer, more inclusive online spaces through intelligent content analysis.\r\n              </p>\r\n            </div>\r\n            \r\n            <div>\r\n              <h4 className=\"font-bold mb-6 text-lg\">Product</h4>\r\n              <ul className=\"space-y-3 text-slate-400\">\r\n                <li><a href=\"#\" className=\"hover:text-white transition-colors text-lg\">Features</a></li>\r\n                <li><a href=\"#\" className=\"hover:text-white transition-colors text-lg\">Pricing</a></li>\r\n                <li><a href=\"#\" className=\"hover:text-white transition-colors text-lg\">API</a></li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div>\r\n              <h4 className=\"font-bold mb-6 text-lg\">Resources</h4>\r\n              <ul className=\"space-y-3 text-slate-400\">\r\n                <li><a href=\"#\" className=\"hover:text-white transition-colors text-lg\">Documentation</a></li>\r\n                <li><a href=\"#\" className=\"hover:text-white transition-colors text-lg\">Support</a></li>\r\n                <li><a href=\"#\" className=\"hover:text-white transition-colors text-lg\">Blog</a></li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div>\r\n              <h4 className=\"font-bold mb-6 text-lg\">Company</h4>\r\n              <ul className=\"space-y-3 text-slate-400\">\r\n                <li><a href=\"#\" className=\"hover:text-white transition-colors text-lg\">About</a></li>\r\n                <li><a href=\"#\" className=\"hover:text-white transition-colors text-lg\">Contact</a></li>\r\n                <li><a href=\"#\" className=\"hover:text-white transition-colors text-lg\">Privacy</a></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"border-t border-slate-800 mt-12 pt-8 text-center text-slate-400\">\r\n            <p className=\"text-lg\">&copy; 2024 HateSpeech AI. All rights reserved.</p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}