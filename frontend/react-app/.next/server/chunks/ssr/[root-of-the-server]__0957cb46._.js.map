{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/components/AuthContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { User } from '../lib/auth';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isLoading: boolean;\r\n  login: (user: User) => void;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check for saved user in localStorage\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      try {\r\n        setUser(JSON.parse(savedUser));\r\n      } catch (error) {\r\n        console.error('Error parsing saved user:', error);\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const login = (userData: User) => {\r\n    setUser(userData);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, isLoading, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAYA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uCAAuC;QACvC,MAAM,YAAY,aAAa,OAAO,CAAC;QACvC,IAAI,WAAW;YACb,IAAI;gBACF,QAAQ,KAAK,KAAK,CAAC;YACrB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,aAAa,UAAU,CAAC;YAC1B;QACF;QACA,aAAa;IACf,GAAG,EAAE;IAEL,MAAM,QAAQ,CAAC;QACb,QAAQ;QACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;IAC9C;IAEA,MAAM,SAAS;QACb,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAW;YAAO;QAAO;kBAC3D;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/lib/auth.ts"],"sourcesContent":["const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\r\n\r\nexport interface AuthResponse {\r\n  success: boolean;\r\n  message: string;\r\n  user_id?: number;\r\n  token?: string;\r\n}\r\n\r\nexport interface User {\r\n  id: number;\r\n  email: string;\r\n  name: string;\r\n  token: string;\r\n}\r\n\r\nexport async function signup(email: string, password: string, name: string): Promise<AuthResponse> {\r\n  try {\r\n    const response = await fetch(`${API_URL}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password, name }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Signup failed');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Signup error:', error);\r\n    return {\r\n      success: false,\r\n      message: 'Network error during signup',\r\n    };\r\n  }\r\n}\r\n\r\nexport async function login(email: string, password: string): Promise<AuthResponse> {\r\n  try {\r\n    const response = await fetch(`${API_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Login failed');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    return {\r\n      success: false,\r\n      message: 'Network error during login',\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA,MAAM,UAAU,QAAQ,GAAG,CAAC,mBAAmB,IAAI;AAgB5C,eAAe,OAAO,KAAa,EAAE,QAAgB,EAAE,IAAY;IACxE,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,OAAO,CAAC,EAAE;YAChD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;gBAAU;YAAK;QAC/C;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;AACF;AAEO,eAAe,MAAM,KAAa,EAAE,QAAgB;IACzD,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,MAAM,CAAC,EAAE;YAC/C,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAS;QACzC;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;AACF","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/components/AuthForm.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { signup, login as apiLogin } from '../lib/auth';\r\nimport { useAuth } from './AuthContext';\r\n\r\ninterface AuthFormProps {\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function AuthForm({ onClose }: AuthFormProps) {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const { login } = useAuth();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      if (isLogin) {\r\n        const response = await apiLogin(email, password);\r\n        if (response.success && response.user_id && response.token) {\r\n          login({\r\n            id: response.user_id,\r\n            email,\r\n            name: email.split('@')[0] || 'User', // Simple name extraction\r\n            token: response.token,\r\n          });\r\n          onClose();\r\n        } else {\r\n          setError(response.message || 'Login failed');\r\n        }\r\n      } else {\r\n        const response = await signup(email, password, name);\r\n        if (response.success && response.user_id && response.token) {\r\n          login({\r\n            id: response.user_id,\r\n            email,\r\n            name,\r\n            token: response.token,\r\n          });\r\n          onClose();\r\n        } else {\r\n          setError(response.message || 'Signup failed');\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError('An unexpected error occurred');\r\n      console.error('Auth error:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-50 bg-opacity-95 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-xl shadow-2xl p-8 max-w-md w-full mx-4\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"w-8 h-8 bg-red-500 rounded-lg flex items-center justify-center\">\r\n              <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n              </svg>\r\n            </div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">\r\n              {isLogin ? 'Sign In' : 'Sign Up'}\r\n            </h2>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 text-2xl w-8 h-8 flex items-center justify-center rounded-full hover:bg-gray-100 transition-colors\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {!isLogin && (\r\n            <div>\r\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required={!isLogin}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 placeholder-gray-500 text-gray-900\"\r\n                placeholder=\"Enter your name\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 placeholder-gray-500 text-gray-900\"\r\n              placeholder=\"Enter your email\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 placeholder-gray-500 text-gray-900\"\r\n              placeholder=\"Enter your password\"\r\n            />\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"text-red-600 text-sm bg-red-50 p-3 rounded-md\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            className=\"w-full bg-red-500 text-white py-3 px-4 rounded-md hover:bg-red-600 disabled:opacity-50 disabled:cursor-not-allowed font-medium transition-all duration-200\"\r\n          >\r\n            {isLoading ? (\r\n              <div className=\"flex items-center justify-center gap-2\">\r\n                <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                Loading...\r\n              </div>\r\n            ) : (isLogin ? 'Sign In' : 'Sign Up')}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"mt-6 text-center\">\r\n          <div className=\"relative\">\r\n            <div className=\"absolute inset-0 flex items-center\">\r\n              <div className=\"w-full border-t border-gray-300\"></div>\r\n            </div>\r\n            <div className=\"relative flex justify-center text-sm\">\r\n              <span className=\"px-2 bg-white text-gray-500\">or</span>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={() => setIsLogin(!isLogin)}\r\n            className=\"mt-4 text-red-500 hover:text-red-700 text-sm font-medium\"\r\n          >\r\n            {isLogin ? \"Don't have an account? Sign up\" : \"Already have an account? Sign in\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/types/index.ts"],"sourcesContent":["/**\r\n * Core Types for Hate Speech Detection App\r\n *\r\n * These interfaces define the shape of data flowing through our application.\r\n * TypeScript helps us catch errors early and provides better IDE support.\r\n */\r\n\r\n// Main interface for text analysis requests\r\nexport interface AnalysisRequest {\r\n  text: string;\r\n}\r\n\r\n// Individual rationale token from the model\r\nexport interface RationaleToken {\r\n  token: string;\r\n  is_rationale: boolean;\r\n  confidence: number;\r\n}\r\n\r\n// Individual clause analysis from the backend\r\nexport interface ClauseAnalysis {\r\n  clause: string;\r\n  is_hate_speech: boolean;\r\n  confidence: number;\r\n  hate_speech_probability: number;\r\n  rationale_tokens: RationaleToken[];\r\n  justification: string;\r\n}\r\n\r\n// Response from the backend API\r\nexport interface AnalysisResponse {\r\n  original_text: string;\r\n  total_clauses: number;\r\n  hate_speech_clauses: ClauseAnalysis[];\r\n  summary: {\r\n    total_clauses_analyzed: number;\r\n    hate_speech_clauses_found: number;\r\n    hate_speech_percentage: number;\r\n    confidence_threshold_used: number;\r\n    overall_assessment: string;\r\n    risk_level: string;\r\n  };\r\n}\r\n\r\n// Simplified response for basic analysis\r\nexport interface SimpleAnalysisResponse {\r\n  text: string;\r\n  hate_speech_detected: boolean;\r\n  confidence: number;\r\n  hate_speech_clauses: Array<{\r\n    text: string;\r\n    confidence: number;\r\n    justification: string;\r\n  }>;\r\n}\r\n\r\n// Bias detection types\r\nexport interface BiasSpan {\r\n  text: string;\r\n  category: string;\r\n  explanation: string;\r\n  suggested_revision: string;\r\n  start_index: number;\r\n  end_index: number;\r\n}\r\n\r\nexport interface BiasAnalysisResponse {\r\n  original_text: string;\r\n  bias_spans: BiasSpan[];\r\n  summary: {\r\n    total_bias_instances: number;\r\n    categories_detected: string[];\r\n    overall_assessment: string;\r\n    risk_level: string;\r\n    text_length: number;\r\n    bias_density: number;\r\n  };\r\n}\r\n\r\n// Legacy compatibility for existing UI components\r\nexport interface FlaggedWord {\r\n  word: string;\r\n  startIndex: number;\r\n  endIndex: number;\r\n  category: string;\r\n  confidence?: number;\r\n  suggestions: {\r\n    word: string;\r\n    confidence: number;\r\n    reason: string;\r\n  }[];\r\n  explanation: string;\r\n}\r\n\r\nexport interface AnalysisResult {\r\n  analysisId: string;\r\n  timestamp: string;\r\n  flaggedWords: FlaggedWord[];\r\n  original_text: string;\r\n  bias_spans: BiasSpan[];\r\n  summary: BiasAnalysisResponse[\"summary\"];\r\n}\r\n\r\n// Bias categories with their display colors\r\nexport const BIAS_CATEGORIES = {\r\n  \"Race / Ethnicity\": { color: \"#ff4444\", lightColor: \"#ffebee\" },\r\n  \"Gender / Gender Identity\": { color: \"#ff6b35\", lightColor: \"#fff3e0\" },\r\n  Age: { color: \"#ffa726\", lightColor: \"#fff8e1\" },\r\n  \"Religion / Belief System\": { color: \"#ffcc02\", lightColor: \"#fffde7\" },\r\n  \"Sexual Orientation\": { color: \"#66bb6a\", lightColor: \"#e8f5e8\" },\r\n  \"Socioeconomic Status\": { color: \"#42a5f5\", lightColor: \"#e3f2fd\" },\r\n  \"Nationality / Immigration Status\": {\r\n    color: \"#ab47bc\",\r\n    lightColor: \"#f3e5f5\",\r\n  },\r\n  \"Disability (Visible & Invisible)\": {\r\n    color: \"#ef5350\",\r\n    lightColor: \"#ffebee\",\r\n  },\r\n  \"Education Level\": { color: \"#26c6da\", lightColor: \"#e0f2f1\" },\r\n  \"Political Ideology\": { color: \"#ff7043\", lightColor: \"#fbe9e7\" },\r\n  \"Physical Appearance\": {\r\n    color: \"#8d6e63\",\r\n    lightColor: \"#efebe9\",\r\n  },\r\n} as const;\r\n\r\nexport type BiasCategory = keyof typeof BIAS_CATEGORIES;\r\n\r\n// UI State management types\r\nexport interface AppState {\r\n  inputText: string;\r\n  analysisResult: AnalysisResponse | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  interactedClauses: Set<string>;\r\n}\r\n\r\n// For managing the text segments in our UI\r\nexport interface TextSegment {\r\n  text: string;\r\n  isFlagged: boolean;\r\n  clauseAnalysis?: ClauseAnalysis;\r\n  key: string;\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED,4CAA4C;;;;AAiGrC,MAAM,kBAAkB;IAC7B,oBAAoB;QAAE,OAAO;QAAW,YAAY;IAAU;IAC9D,4BAA4B;QAAE,OAAO;QAAW,YAAY;IAAU;IACtE,KAAK;QAAE,OAAO;QAAW,YAAY;IAAU;IAC/C,4BAA4B;QAAE,OAAO;QAAW,YAAY;IAAU;IACtE,sBAAsB;QAAE,OAAO;QAAW,YAAY;IAAU;IAChE,wBAAwB;QAAE,OAAO;QAAW,YAAY;IAAU;IAClE,oCAAoC;QAClC,OAAO;QACP,YAAY;IACd;IACA,oCAAoC;QAClC,OAAO;QACP,YAAY;IACd;IACA,mBAAmB;QAAE,OAAO;QAAW,YAAY;IAAU;IAC7D,sBAAsB;QAAE,OAAO;QAAW,YAAY;IAAU;IAChE,uBAAuB;QACrB,OAAO;QACP,YAAY;IACd;AACF","debugId":null}},
    {"offset": {"line": 531, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/lib/api.ts"],"sourcesContent":["import {\r\n  AnalysisRequest,\r\n  BiasAnalysisResponse,\r\n  FlaggedWord,\r\n  BiasSpan,\r\n  BIAS_CATEGORIES,\r\n} from \"@/types\";\r\n\r\n// Base URL for the backend API\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8000\";\r\n\r\n/**\r\n * Analyzes text for bias using the backend API\r\n * @param request - The analysis request containing text\r\n * @returns Promise<BiasAnalysisResponse> - The bias analysis results\r\n */\r\nexport async function analyzeText(\r\n  request: AnalysisRequest\r\n): Promise<BiasAnalysisResponse> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/analyze`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        text: request.text,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(\r\n        errorData.detail || `HTTP error! status: ${response.status}`\r\n      );\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error analyzing text:\", error);\r\n    throw error instanceof Error ? error : new Error(\"Failed to analyze text\");\r\n  }\r\n}\r\n\r\n/**\r\n * Converts bias spans to flagged words format for backward compatibility\r\n * @param biasSpans - The bias spans from the backend\r\n * @param originalText - The original text that was analyzed\r\n * @returns FlaggedWord[] - Array of flagged words for UI display\r\n */\r\nexport function convertBiasSpansToFlaggedWords(\r\n  biasSpans: BiasSpan[],\r\n  originalText: string\r\n): FlaggedWord[] {\r\n  const flaggedWords: FlaggedWord[] = [];\r\n\r\n  biasSpans.forEach((span) => {\r\n    // Find the position of this span in the original text\r\n    const startIndex = span.start_index;\r\n    const endIndex = span.end_index;\r\n\r\n    // Validate indices\r\n    if (\r\n      startIndex >= 0 &&\r\n      endIndex <= originalText.length &&\r\n      startIndex < endIndex\r\n    ) {\r\n      flaggedWords.push({\r\n        word: span.text,\r\n        startIndex,\r\n        endIndex,\r\n        category: span.category,\r\n        confidence: 1.0, // LLM doesn't provide confidence, so we assume high confidence\r\n        suggestions: [\r\n          {\r\n            word: span.suggested_revision,\r\n            confidence: 1.0,\r\n            reason: span.explanation,\r\n          },\r\n        ],\r\n        explanation: span.explanation,\r\n      });\r\n    }\r\n  });\r\n\r\n  return flaggedWords;\r\n}\r\n\r\n/**\r\n * Converts analysis results to flagged words format for backward compatibility\r\n * @param analysisResult - The analysis response from the backend\r\n * @returns FlaggedWord[] - Array of flagged words\r\n */\r\nexport function convertToFlaggedWords(\r\n  analysisResult: BiasAnalysisResponse\r\n): FlaggedWord[] {\r\n  return convertBiasSpansToFlaggedWords(\r\n    analysisResult.bias_spans,\r\n    analysisResult.original_text\r\n  );\r\n}\r\n\r\n/**\r\n * Health check for the API\r\n * @returns Promise<boolean> - True if API is healthy\r\n */\r\nexport async function checkApiHealth(): Promise<boolean> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/`);\r\n    const data = await response.json();\r\n    return response.ok && data.analyzer_loaded;\r\n  } catch (error) {\r\n    console.error(\"API health check failed:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Simple analysis endpoint for basic use cases\r\n * @param text - The text to analyze\r\n * @returns Promise<unknown> - Simplified analysis results\r\n */\r\nexport async function analyzeSimple(text: string): Promise<unknown> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/analyze-simple`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ text }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(\r\n        errorData.detail || `HTTP error! status: ${response.status}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error in simple analysis:\", error);\r\n    throw error instanceof Error ? error : new Error(\"Failed to analyze text\");\r\n  }\r\n}\r\n\r\n/**\r\n * Save analysis result to the database\r\n * @param text - The analyzed text\r\n * @param result - The analysis result\r\n * @param title - Optional title for the analysis\r\n * @returns Promise<boolean> - Success status\r\n */\r\nexport async function saveAnalysis(\r\n  text: string,\r\n  result: any,\r\n  title?: string\r\n): Promise<boolean> {\r\n  try {\r\n    console.log(\"saveAnalysis called with:\", {\r\n      text: text.slice(0, 50) + \"...\",\r\n      title,\r\n      hasResult: !!result,\r\n    });\r\n    const headers = createAuthHeaders();\r\n    console.log(\"Auth headers:\", headers);\r\n\r\n    const response = await fetch(`${API_BASE_URL}/save-analysis`, {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify({ text, result, title }),\r\n    });\r\n\r\n    console.log(\"Response status:\", response.status);\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      console.error(\"Save analysis error:\", errorData);\r\n      throw new Error(\r\n        errorData.detail || `HTTP error! status: ${response.status}`\r\n      );\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(\"Save analysis response:\", data);\r\n    return data.success;\r\n  } catch (error) {\r\n    console.error(\"Error saving analysis:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Get saved analyses for the authenticated user\r\n * @returns Promise<SavedAnalysis[]> - Array of saved analyses\r\n */\r\nexport async function getSavedAnalyses(): Promise<SavedAnalysis[]> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/saved-analyses`, {\r\n      method: \"GET\",\r\n      headers: createAuthHeaders(),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(\r\n        errorData.detail || `HTTP error! status: ${response.status}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error getting saved analyses:\", error);\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * Delete a saved analysis\r\n * @param analysisId - The ID of the analysis to delete\r\n * @returns Promise<boolean> - Success status\r\n */\r\nexport async function deleteAnalysis(analysisId: number): Promise<boolean> {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/delete-analysis/${analysisId}`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: createAuthHeaders(),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(\r\n        errorData.detail || `HTTP error! status: ${response.status}`\r\n      );\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.success;\r\n  } catch (error) {\r\n    console.error(\"Error deleting analysis:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Auth interfaces\r\ninterface AuthRequest {\r\n  email: string;\r\n  password: string;\r\n  name?: string;\r\n}\r\n\r\ninterface AuthResponse {\r\n  success: boolean;\r\n  message: string;\r\n  user_id?: number;\r\n  token?: string;\r\n}\r\n\r\ninterface SavedAnalysis {\r\n  id: number;\r\n  user_id: number;\r\n  text: string;\r\n  result: any;\r\n  title?: string;\r\n  created_at: string;\r\n}\r\n\r\n/**\r\n * Get auth token from localStorage\r\n */\r\nfunction getAuthToken(): string | null {\r\n  if (typeof window !== \"undefined\") {\r\n    // First try to get token from direct storage\r\n    const token = localStorage.getItem(\"auth_token\");\r\n    if (token) return token;\r\n\r\n    // Fallback to getting token from user object\r\n    const userStr = localStorage.getItem(\"user\");\r\n    if (userStr) {\r\n      try {\r\n        const user = JSON.parse(userStr);\r\n        return user.token || null;\r\n      } catch (error) {\r\n        console.error(\"Error parsing user data:\", error);\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Create auth headers\r\n */\r\nfunction createAuthHeaders(): HeadersInit {\r\n  const token = getAuthToken();\r\n  const headers: HeadersInit = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  if (token) {\r\n    headers[\"Authorization\"] = `Bearer ${token}`;\r\n  }\r\n\r\n  return headers;\r\n}\r\n\r\n/**\r\n * Get the display color for a bias category\r\n * @param category - The bias category\r\n * @returns Object with color and lightColor properties\r\n */\r\nexport function getBiasCategoryColor(category: string): {\r\n  color: string;\r\n  lightColor: string;\r\n} {\r\n  const categoryColors =\r\n    BIAS_CATEGORIES[category as keyof typeof BIAS_CATEGORIES];\r\n  return categoryColors || { color: \"#757575\", lightColor: \"#f5f5f5\" }; // Default gray\r\n}\r\n\r\n/**\r\n * Get all bias categories with their colors\r\n * @returns Array of bias categories with their display information\r\n */\r\nexport function getAllBiasCategories(): Array<{\r\n  name: string;\r\n  color: string;\r\n  lightColor: string;\r\n}> {\r\n  return Object.entries(BIAS_CATEGORIES).map(([name, colors]) => ({\r\n    name,\r\n    ...colors,\r\n  }));\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 734, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/components/TextInput.tsx"],"sourcesContent":["import {\r\n  ChangeEvent,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useMemo,\r\n  useRef,\r\n} from \"react\";\r\nimport type { MouseEvent } from \"react\";\r\nimport { getBiasCategoryColor } from \"@/lib/api\";\r\nimport { BiasAnalysisResponse } from \"@/types\";\r\n\r\nexport interface FlaggedWord {\r\n  word: string;\r\n  startIndex: number;\r\n  endIndex: number;\r\n  category: string;\r\n  explanation?: string;\r\n  suggestions?: Array<{\r\n    word: string;\r\n    confidence: number;\r\n    reason: string;\r\n  }>;\r\n}\r\n\r\nexport interface ValidationRule {\r\n  type: \"minLength\" | \"maxLength\" | \"required\" | \"custom\";\r\n  value?: number;\r\n  message: string;\r\n  validator?: (text: string) => boolean;\r\n}\r\n\r\nexport interface TextInputProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  onClear?: () => void;\r\n  onAnalyze?: () => void;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  isAnalyzing?: boolean;\r\n  error?: string | null;\r\n  label?: string;\r\n  maxLength?: number;\r\n  minLength?: number;\r\n  className?: string;\r\n  showCharacterCount?: boolean;\r\n  showClearButton?: boolean;\r\n  showAnalyzeButton?: boolean;\r\n  analyzeButtonText?: string;\r\n  clearButtonText?: string;\r\n  validateOnChange?: boolean;\r\n  validationRules?: ValidationRule[];\r\n  onValidationChange?: (isValid: boolean, errors: string[]) => void;\r\n  confirmClearThreshold?: number;\r\n  showClearConfirmation?: boolean;\r\n  flaggedWords?: FlaggedWord[];\r\n  onClearHighlights?: () => void;\r\n  // New props for analysis display\r\n  analysisText?: string;\r\n  showAnalysisOutput?: boolean;\r\n  analysisResults?: BiasAnalysisResponse | null;\r\n}\r\n\r\n// Default empty validation rules (stable reference)\r\nconst DEFAULT_VALIDATION_RULES: ValidationRule[] = [];\r\n\r\n// Enhanced text segment interface with direct word index tracking\r\ninterface TextSegment {\r\n  text: string;\r\n  categories: string[];\r\n  explanations: string[];\r\n  originalWordIndices: number[]; // Direct references to flagged word indices\r\n}\r\n\r\nfunction createTextSegments(\r\n  text: string,\r\n  flaggedWords: FlaggedWord[]\r\n): TextSegment[] {\r\n  if (!flaggedWords || flaggedWords.length === 0) {\r\n    return [\r\n      {\r\n        text,\r\n        categories: [] as string[],\r\n        explanations: [] as string[],\r\n        originalWordIndices: [] as number[],\r\n      },\r\n    ];\r\n  }\r\n\r\n  // Create arrays to track categories, explanations, and word indices at each character position\r\n  const charCategories: string[][] = Array(text.length)\r\n    .fill(null)\r\n    .map(() => []);\r\n  const charExplanations: string[][] = Array(text.length)\r\n    .fill(null)\r\n    .map(() => []);\r\n  const charWordIndices: number[][] = Array(text.length)\r\n    .fill(null)\r\n    .map(() => []);\r\n\r\n  // Helper function to find text in the original text when indices are invalid\r\n  const findTextInOriginal = (searchText: string): { start: number; end: number } | null => {\r\n    if (!searchText || !searchText.trim()) return null;\r\n    \r\n    // Clean the search text\r\n    const cleanSearchText = searchText.trim();\r\n    \r\n    // Try exact match first (case-sensitive)\r\n    let index = text.indexOf(cleanSearchText);\r\n    if (index !== -1) {\r\n      return { start: index, end: index + cleanSearchText.length };\r\n    }\r\n    \r\n    // Try case-insensitive match\r\n    index = text.toLowerCase().indexOf(cleanSearchText.toLowerCase());\r\n    if (index !== -1) {\r\n      return { start: index, end: index + cleanSearchText.length };\r\n    }\r\n    \r\n    // Try word-based matching for partial matches\r\n    const words = cleanSearchText.split(/\\s+/);\r\n    if (words.length > 1) {\r\n      const firstWord = words[0];\r\n      const lastWord = words[words.length - 1];\r\n      \r\n      const firstIndex = text.toLowerCase().indexOf(firstWord.toLowerCase());\r\n      const lastIndex = text.toLowerCase().lastIndexOf(lastWord.toLowerCase());\r\n      \r\n      if (firstIndex !== -1 && lastIndex !== -1 && lastIndex >= firstIndex) {\r\n        return { \r\n          start: firstIndex, \r\n          end: lastIndex + lastWord.length \r\n        };\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  // Mark categories, explanations, and word indices for each character position\r\n  flaggedWords.forEach((flagged, wordIndex) => {\r\n    let start = flagged.startIndex;\r\n    let end = flagged.endIndex;\r\n    \r\n    // Validate and fix indices\r\n    const isValidIndices = (\r\n      typeof start === 'number' && \r\n      typeof end === 'number' && \r\n      start >= 0 && \r\n      end > start && \r\n      start < text.length &&\r\n      end <= text.length\r\n    );\r\n    \r\n    if (!isValidIndices) {\r\n      console.warn(`Invalid indices for flagged word \"${flagged.word}\": start=${start}, end=${end}, text.length=${text.length}`);\r\n      \r\n      // Try to find the text in the original\r\n      const found = findTextInOriginal(flagged.word);\r\n      if (found) {\r\n        start = found.start;\r\n        end = found.end;\r\n        console.log(`Recovered indices for \"${flagged.word}\": ${start}-${end}`);\r\n      } else {\r\n        console.warn(`Could not find \"${flagged.word}\" in text, skipping highlighting`);\r\n        return; // Skip this span if we can't locate it\r\n      }\r\n    }\r\n    \r\n    // Double-check bounds after potential recovery\r\n    start = Math.max(0, Math.min(start, text.length - 1));\r\n    end = Math.max(start + 1, Math.min(end, text.length));\r\n    \r\n    // Ensure we have at least one character to highlight\r\n    if (start >= end) {\r\n      end = Math.min(start + 1, text.length);\r\n    }\r\n\r\n    for (let i = start; i < end; i++) {\r\n      const categoryArray = charCategories[i];\r\n      const explanationArray = charExplanations[i];\r\n      const wordIndexArray = charWordIndices[i];\r\n\r\n      if (categoryArray && !categoryArray.includes(flagged.category)) {\r\n        categoryArray.push(flagged.category);\r\n        if (flagged.explanation && explanationArray) {\r\n          explanationArray.push(flagged.explanation);\r\n        }\r\n        if (wordIndexArray) {\r\n          wordIndexArray.push(wordIndex);\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  // Group consecutive characters with same category sets and word indices\r\n  const segments: TextSegment[] = [];\r\n\r\n  let currentStart = 0;\r\n  let currentCategories = charCategories[0] || [];\r\n  let currentExplanations = charExplanations[0] || [];\r\n  let currentWordIndices = charWordIndices[0] || [];\r\n\r\n  for (let i = 1; i <= text.length; i++) {\r\n    const nextCategories = i < text.length ? charCategories[i] || [] : [];\r\n    const nextExplanations = i < text.length ? charExplanations[i] || [] : [];\r\n    const nextWordIndices = i < text.length ? charWordIndices[i] || [] : [];\r\n\r\n    // Check if categories or word indices changed\r\n    const categoriesChanged =\r\n      currentCategories.length !== nextCategories.length ||\r\n      !currentCategories.every((cat) => nextCategories.includes(cat));\r\n\r\n    const wordIndicesChanged =\r\n      currentWordIndices.length !== nextWordIndices.length ||\r\n      !currentWordIndices.every((idx) => nextWordIndices.includes(idx));\r\n\r\n    if (categoriesChanged || wordIndicesChanged || i === text.length) {\r\n      segments.push({\r\n        text: text.slice(currentStart, i),\r\n        categories: [...currentCategories],\r\n        explanations: [...currentExplanations],\r\n        originalWordIndices: [...currentWordIndices],\r\n      });\r\n\r\n      currentStart = i;\r\n      currentCategories = nextCategories;\r\n      currentExplanations = nextExplanations;\r\n      currentWordIndices = nextWordIndices;\r\n    }\r\n  }\r\n\r\n  return segments;\r\n}\r\n\r\n// Generate gradient CSS for multiple categories\r\nfunction generateGradientStyle(categories: string[]): React.CSSProperties {\r\n  if (categories.length === 0) return {};\r\n\r\n  if (categories.length === 1 && categories[0]) {\r\n    const colors = getBiasCategoryColor(categories[0]);\r\n    return {\r\n      backgroundColor: colors.lightColor,\r\n      borderBottom: `2px solid ${colors.color}`,\r\n      color: colors.color,\r\n      fontWeight: \"600\",\r\n    };\r\n  }\r\n\r\n  // Create gradient for multiple categories\r\n  const colorStops = categories\r\n    .map((category, index) => {\r\n      const colors = getBiasCategoryColor(category);\r\n      const position1 = (index / categories.length) * 100;\r\n      const position2 = ((index + 1) / categories.length) * 100;\r\n      return `${colors.lightColor} ${position1}%, ${colors.lightColor} ${position2}%`;\r\n    })\r\n    .join(\", \");\r\n\r\n  return {\r\n    background: `linear-gradient(to right, ${colorStops})`,\r\n    borderBottom: `3px solid transparent`,\r\n    borderImage: `linear-gradient(to right, ${categories\r\n      .map((cat) => getBiasCategoryColor(cat).color)\r\n      .join(\", \")}) 1`,\r\n    borderImageSlice: 1,\r\n    color: \"#333\",\r\n    fontWeight: \"600\",\r\n  };\r\n}\r\n\r\n// Smart tooltip positioning component\r\nconst SmartTooltip: React.FC<{\r\n  children: React.ReactNode;\r\n  categories: string[];\r\n  explanations: string[];\r\n}> = ({ children, categories, explanations }) => {\r\n  const [position, setPosition] = useState<\"top\" | \"bottom\">(\"top\");\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const tooltipRef = useRef<HTMLDivElement>(null);\r\n  const triggerRef = useRef<HTMLSpanElement>(null);\r\n\r\n  const updatePosition = useCallback(() => {\r\n    if (!triggerRef.current || !tooltipRef.current) return;\r\n\r\n    const triggerRect = triggerRef.current.getBoundingClientRect();\r\n    const viewportHeight = window.innerHeight;\r\n\r\n    // Calculate space available above and below\r\n    const spaceAbove = triggerRect.top;\r\n    const spaceBelow = viewportHeight - triggerRect.bottom;\r\n    const tooltipHeight = 80; // simplified content means smaller height\r\n\r\n    // Prefer top, but switch to bottom if not enough space above\r\n    if (spaceAbove >= tooltipHeight + 20) {\r\n      setPosition(\"top\");\r\n    } else if (spaceBelow >= tooltipHeight + 20) {\r\n      setPosition(\"bottom\");\r\n    } else {\r\n      // If neither position has enough space, choose the one with more space\r\n      setPosition(spaceAbove > spaceBelow ? \"top\" : \"bottom\");\r\n    }\r\n  }, []);\r\n\r\n  const handleMouseEnter = useCallback(() => {\r\n    setIsVisible(true);\r\n    // Update position after tooltip becomes visible\r\n    setTimeout(updatePosition, 0);\r\n  }, [updatePosition]);\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    setIsVisible(false);\r\n  }, []);\r\n\r\n  // Position classes and styles\r\n  const positionClass =\r\n    position === \"top\" ? \"bottom-full mb-2\" : \"top-full mt-2\";\r\n\r\n  const arrowClass =\r\n    position === \"top\"\r\n      ? \"absolute top-full left-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"\r\n      : \"absolute bottom-full left-1/2 w-0 h-0 border-l-4 border-r-4 border-b-4 border-transparent border-b-gray-900\";\r\n\r\n  // Simplified tooltip content\r\n  const getTooltipContent = () => {\r\n    if (categories.length === 1) {\r\n      return categories[0];\r\n    } else if (categories.length > 1) {\r\n      return `Multiple biases (${categories.length})`;\r\n    }\r\n    return \"Bias detected\";\r\n  };\r\n\r\n  return (\r\n    <span\r\n      ref={triggerRef}\r\n      className=\"relative cursor-help transition-all duration-200 hover:shadow-md\"\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      style={{\r\n        ...generateGradientStyle(categories),\r\n        borderRadius: \"3px\",\r\n        padding: \"2px 3px\",\r\n        margin: \"0 1px\",\r\n      }}\r\n    >\r\n      {children}\r\n\r\n      {/* Simplified smart positioned tooltip */}\r\n      <div\r\n        ref={tooltipRef}\r\n        className={`absolute left-1/2 ${positionClass} bg-gray-900 text-white text-sm px-3 py-2 rounded-md shadow-lg transition-opacity duration-200 z-[10000] pointer-events-none ${\r\n          isVisible ? \"opacity-100\" : \"opacity-0\"\r\n        }`}\r\n        style={{\r\n          transform: \"translateX(-50%)\",\r\n          minWidth: \"auto\",\r\n          maxWidth: \"none\",\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n      >\r\n        <div className=\"font-medium text-center\">{getTooltipContent()}</div>\r\n\r\n        {/* Dynamic arrow */}\r\n        <div\r\n          className={arrowClass}\r\n          style={{\r\n            transform: \"translateX(-50%)\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </span>\r\n  );\r\n};\r\n\r\n// Loading Spinner Component\r\nconst LoadingSpinner: React.FC<{ size?: number }> = ({ size = 24 }) => {\r\n  return (\r\n    <div className=\"flex items-center justify-center\">\r\n      <svg\r\n        className=\"animate-spin\"\r\n        width={size}\r\n        height={size}\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <circle\r\n          cx=\"12\"\r\n          cy=\"12\"\r\n          r=\"10\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"4\"\r\n          strokeLinecap=\"round\"\r\n          strokeDasharray=\"31.416\"\r\n          strokeDashoffset=\"31.416\"\r\n          className=\"opacity-25\"\r\n        />\r\n        <path\r\n          fill=\"currentColor\"\r\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Analysis Output Component (Read-only display with highlighting)\r\nconst AnalysisOutput: React.FC<{\r\n  text: string;\r\n  flaggedWords: FlaggedWord[];\r\n  isAnalyzing: boolean;\r\n  onWordClick?: (word: FlaggedWord) => void;\r\n  analysisResults?: BiasAnalysisResponse | null;\r\n  onToggleReasoning?: (wordIndex: number) => void;\r\n}> = ({\r\n  text,\r\n  flaggedWords,\r\n  isAnalyzing,\r\n  onWordClick,\r\n  analysisResults,\r\n  onToggleReasoning,\r\n}) => {\r\n  const renderContent = useCallback(() => {\r\n    if (isAnalyzing) {\r\n      return (\r\n        <div className=\"flex flex-col items-center justify-center h-32 space-y-4\">\r\n          <LoadingSpinner size={32} />\r\n          <div className=\"text-gray-500 text-center\">\r\n            <div className=\"font-medium\">Analyzing for bias...</div>\r\n            <div className=\"text-sm text-gray-400 mt-1\">\r\n              This may take a few moments\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!text) {\r\n      return (\r\n        <div className=\"text-gray-400 italic\">\r\n          Analysis results will appear here after you click \"Analyze for Bias\"\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!flaggedWords || flaggedWords.length === 0) {\r\n      return (\r\n        <div className=\"text-gray-900\">\r\n          <div className=\"text-green-600 font-medium mb-2\">\r\n            ✓ No bias detected\r\n          </div>\r\n          <div>{text}</div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const segments = createTextSegments(text, flaggedWords);\r\n\r\n    return (\r\n      <div className=\"text-gray-900\">\r\n        <div className=\"leading-relaxed\">\r\n          {segments.map((segment, index) => {\r\n            const segmentKey = `${index}-${segment.text.slice(\r\n              0,\r\n              10\r\n            )}-${segment.categories.join(\"-\")}`;\r\n\r\n            if (\r\n              segment.categories.length > 0 &&\r\n              segment.originalWordIndices.length > 0\r\n            ) {\r\n              // Use the first word index for click handling (after backend deduplication, there should typically be only one)\r\n              const primaryWordIndex = segment.originalWordIndices[0];\r\n\r\n              const handleClick = () => {\r\n                if (onToggleReasoning && primaryWordIndex !== undefined) {\r\n                  onToggleReasoning(primaryWordIndex);\r\n                }\r\n              };\r\n\r\n              return (\r\n                <SmartTooltip\r\n                  key={segmentKey}\r\n                  categories={segment.categories}\r\n                  explanations={segment.explanations}\r\n                >\r\n                  <span\r\n                    className=\"cursor-pointer hover:opacity-80 transition-opacity\"\r\n                    onClick={handleClick}\r\n                    style={{\r\n                      ...generateGradientStyle(segment.categories),\r\n                      borderRadius: \"3px\",\r\n                      padding: \"2px 3px\",\r\n                      margin: \"0 1px\",\r\n                    }}\r\n                  >\r\n                    {segment.text}\r\n                  </span>\r\n                </SmartTooltip>\r\n              );\r\n            } else {\r\n              return <span key={segmentKey}>{segment.text}</span>;\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }, [\r\n    text,\r\n    flaggedWords,\r\n    isAnalyzing,\r\n    onWordClick,\r\n    analysisResults,\r\n    onToggleReasoning,\r\n  ]);\r\n\r\n  const getBiasCountDisplay = () => {\r\n    if (!flaggedWords || flaggedWords.length === 0) return null;\r\n\r\n    const categoryCount =\r\n      analysisResults?.summary?.categories_detected?.length || 0;\r\n    return (\r\n      <div className=\"text-sm text-orange-600 font-medium\">\r\n        ⚠️ {flaggedWords.length} bias issue\r\n        {flaggedWords.length !== 1 ? \"s\" : \"\"} detected\r\n        {categoryCount > 0 &&\r\n          ` (${categoryCount} ${\r\n            categoryCount === 1 ? \"category\" : \"categories\"\r\n          })`}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-full p-6 bg-white overflow-y-auto\">\r\n      <div className=\"mb-4 flex items-center justify-between\">\r\n        <h3 className=\"text-lg font-semibold text-gray-800\">\r\n          Analysis Results\r\n        </h3>\r\n        {getBiasCountDisplay()}\r\n      </div>\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Reasoning Panel Component\r\nconst ReasoningPanel: React.FC<{\r\n  selectedWord: FlaggedWord | null;\r\n  flaggedWords: FlaggedWord[];\r\n  onWordSelect: (word: FlaggedWord) => void;\r\n  expandedItems: Set<number>;\r\n  onToggleExpanded: (index: number) => void;\r\n  isAnalyzing?: boolean;\r\n}> = ({\r\n  selectedWord,\r\n  flaggedWords,\r\n  onWordSelect,\r\n  expandedItems,\r\n  onToggleExpanded,\r\n  isAnalyzing = false,\r\n}) => {\r\n  return (\r\n    <div className=\"w-full h-full p-6 bg-white border-l border-gray-200 overflow-y-auto\">\r\n      <div className=\"mb-4\">\r\n        <h3 className=\"text-lg font-semibold text-gray-800\">\r\n          Reasoning & Suggestions\r\n        </h3>\r\n      </div>\r\n\r\n      {isAnalyzing ? (\r\n        <div className=\"flex flex-col items-center justify-center h-32 space-y-4\">\r\n          <LoadingSpinner size={28} />\r\n          <div className=\"text-gray-500 text-center\">\r\n            <div className=\"font-medium\">Preparing analysis...</div>\r\n            <div className=\"text-sm text-gray-400 mt-1\">\r\n              Detailed explanations will appear here\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : flaggedWords.length === 0 ? (\r\n        <div className=\"text-gray-400 italic\">\r\n          Bias explanations and suggested revisions will appear here\r\n        </div>\r\n      ) : (\r\n        <div className=\"space-y-3\">\r\n          <div className=\"text-sm text-gray-600 mb-3\">\r\n            Click on highlighted text or boxes to expand details:\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            {flaggedWords.map((word, index) => {\r\n              const colors = getBiasCategoryColor(word.category);\r\n              const isExpanded = expandedItems.has(index);\r\n\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={`w-full text-left p-3 rounded-lg border transition-all cursor-pointer ${\r\n                    isExpanded\r\n                      ? \"border-blue-300 bg-blue-50\"\r\n                      : \"border-gray-200 hover:border-gray-300 hover:bg-gray-50\"\r\n                  }`}\r\n                  onClick={() => onToggleExpanded(index)}\r\n                >\r\n                  {/* Header - always visible */}\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <div\r\n                        className=\"w-3 h-3 rounded-full\"\r\n                        style={{ backgroundColor: colors.color }}\r\n                      />\r\n                      <span className=\"text-sm font-medium text-gray-900\">\r\n                        \"{word.word}\"\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <div className=\"text-xs text-gray-600\">\r\n                        {word.category}\r\n                      </div>\r\n                      <svg\r\n                        className={`w-4 h-4 text-gray-400 transition-transform ${\r\n                          isExpanded ? \"rotate-180\" : \"\"\r\n                        }`}\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        viewBox=\"0 0 24 24\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth={2}\r\n                          d=\"M19 9l-7 7-7-7\"\r\n                        />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Expanded details */}\r\n                  {isExpanded && (\r\n                    <div className=\"mt-3 pt-3 border-t border-gray-200 space-y-3\">\r\n                      {/* Category badge */}\r\n                      <div>\r\n                        <div className=\"text-xs font-medium text-gray-700 mb-1\">\r\n                          Bias Category:\r\n                        </div>\r\n                        <div\r\n                          className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium\"\r\n                          style={{\r\n                            backgroundColor: colors.lightColor,\r\n                            color: colors.color,\r\n                          }}\r\n                        >\r\n                          {word.category}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Explanation */}\r\n                      {word.explanation && (\r\n                        <div>\r\n                          <div className=\"text-xs font-medium text-gray-700 mb-1\">\r\n                            Why this is problematic:\r\n                          </div>\r\n                          <div className=\"text-xs text-gray-600 leading-relaxed bg-gray-100 p-2 rounded\">\r\n                            {word.explanation}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Suggestions */}\r\n                      {word.suggestions && word.suggestions.length > 0 && (\r\n                        <div>\r\n                          <div className=\"text-xs font-medium text-gray-700 mb-1\">\r\n                            Suggested revisions:\r\n                          </div>\r\n                          <div className=\"space-y-1\">\r\n                            {word.suggestions.map((suggestion, sugIndex) => (\r\n                              <div\r\n                                key={sugIndex}\r\n                                className=\"bg-green-50 border border-green-200 p-2 rounded\"\r\n                              >\r\n                                <div className=\"text-xs font-medium text-green-800\">\r\n                                  \"{suggestion.word}\"\r\n                                </div>\r\n                                {suggestion.reason && (\r\n                                  <div className=\"text-xs text-green-600 mt-1\">\r\n                                    {suggestion.reason}\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Resize Handle Component\r\nconst ResizeHandle: React.FC<{\r\n  onMouseDown: (e: MouseEvent<HTMLDivElement>) => void;\r\n}> = ({ onMouseDown }) => {\r\n  return (\r\n    <div\r\n      className=\"w-1 bg-gray-300 hover:bg-blue-500 cursor-col-resize transition-colors relative group\"\r\n      onMouseDown={onMouseDown}\r\n    >\r\n      <div className=\"absolute inset-y-0 -left-1 -right-1\" />\r\n      <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-1 h-8 bg-gray-400 group-hover:bg-blue-600 rounded-full opacity-0 group-hover:opacity-100 transition-opacity\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function TextInput({\r\n  value,\r\n  onChange,\r\n  onClear,\r\n  onAnalyze,\r\n  placeholder = \"Type or paste your text here...\",\r\n  disabled = false,\r\n  isAnalyzing = false,\r\n  error = null,\r\n  label = \"Enter text to analyze\",\r\n  maxLength = 5000,\r\n  minLength = 5,\r\n  className = \"\",\r\n  showCharacterCount = true,\r\n  showClearButton = true,\r\n  showAnalyzeButton = true,\r\n  analyzeButtonText = \"Analyze for Bias\",\r\n  clearButtonText = \"Clear\",\r\n  validateOnChange = true,\r\n  validationRules = DEFAULT_VALIDATION_RULES,\r\n  onValidationChange,\r\n  confirmClearThreshold = 50,\r\n  showClearConfirmation = true,\r\n  flaggedWords = [],\r\n  onClearHighlights,\r\n  analysisText = \"\",\r\n  showAnalysisOutput = false,\r\n  analysisResults = null,\r\n}: TextInputProps) {\r\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n  const [isValid, setIsValid] = useState(true);\r\n  const [showConfirmDialog, setShowConfirmDialog] = useState<boolean>(false);\r\n  const [selectedWord, setSelectedWord] = useState<FlaggedWord | null>(null);\r\n\r\n  // Shared state for expanded reasoning items\r\n  const [expandedItems, setExpandedItems] = useState<Set<number>>(new Set());\r\n\r\n  // Panel width states for resizing\r\n  const [inputWidth, setInputWidth] = useState(50); // Left panel width\r\n  const [rightPanelWidth, setRightPanelWidth] = useState(50); // Right container width\r\n  const [analysisHeight, setAnalysisHeight] = useState(50); // Top right panel height\r\n  const [reasoningHeight, setReasoningHeight] = useState(50); // Bottom right panel height\r\n\r\n  const [isResizing, setIsResizing] = useState(false);\r\n  const [resizeType, setResizeType] = useState<\r\n    \"horizontal\" | \"vertical\" | null\r\n  >(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const rightContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const dialogRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Auto-select first word when flagged words change\r\n  useEffect(() => {\r\n    if (flaggedWords.length > 0 && !selectedWord) {\r\n      setSelectedWord(flaggedWords[0] || null);\r\n    } else if (flaggedWords.length === 0) {\r\n      setSelectedWord(null);\r\n      setExpandedItems(new Set()); // Clear expanded items when no flagged words\r\n    }\r\n  }, [flaggedWords, selectedWord]);\r\n\r\n  // Function to toggle expanded state of reasoning items\r\n  const toggleExpandedItem = useCallback((index: number) => {\r\n    setExpandedItems((prev) => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(index)) {\r\n        newSet.delete(index);\r\n      } else {\r\n        newSet.add(index);\r\n      }\r\n      return newSet;\r\n    });\r\n  }, []);\r\n\r\n  // Resize handling\r\n  const handleMouseDown = useCallback(\r\n    (type: \"horizontal\" | \"vertical\") => (e: MouseEvent<HTMLDivElement>) => {\r\n      e.preventDefault();\r\n      setIsResizing(true);\r\n      setResizeType(type);\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleMouseMove = useCallback(\r\n    (e: globalThis.MouseEvent) => {\r\n      if (!isResizing || !resizeType) return;\r\n\r\n      if (resizeType === \"horizontal\" && containerRef.current) {\r\n        const containerRect = containerRef.current.getBoundingClientRect();\r\n        const containerWidth = containerRect.width;\r\n        const mouseX = e.clientX - containerRect.left;\r\n        const percentage = (mouseX / containerWidth) * 100;\r\n\r\n        const newInputWidth = Math.max(20, Math.min(80, percentage));\r\n        const newRightPanelWidth = 100 - newInputWidth;\r\n\r\n        setInputWidth(newInputWidth);\r\n        setRightPanelWidth(newRightPanelWidth);\r\n      } else if (resizeType === \"vertical\" && rightContainerRef.current) {\r\n        const containerRect = rightContainerRef.current.getBoundingClientRect();\r\n        const containerHeight = containerRect.height;\r\n        const mouseY = e.clientY - containerRect.top;\r\n        const percentage = (mouseY / containerHeight) * 100;\r\n\r\n        const newAnalysisHeight = Math.max(20, Math.min(80, percentage));\r\n        const newReasoningHeight = 100 - newAnalysisHeight;\r\n\r\n        setAnalysisHeight(newAnalysisHeight);\r\n        setReasoningHeight(newReasoningHeight);\r\n      }\r\n    },\r\n    [isResizing, resizeType]\r\n  );\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    setIsResizing(false);\r\n    setResizeType(null);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isResizing) {\r\n      const handleMove = (e: Event) => {\r\n        if (e instanceof globalThis.MouseEvent) {\r\n          handleMouseMove(e);\r\n        }\r\n      };\r\n      const handleUp = () => {\r\n        handleMouseUp();\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", handleMove);\r\n      document.addEventListener(\"mouseup\", handleUp);\r\n      return () => {\r\n        document.removeEventListener(\"mousemove\", handleMove);\r\n        document.removeEventListener(\"mouseup\", handleUp);\r\n      };\r\n    }\r\n  }, [isResizing, handleMouseMove, handleMouseUp]);\r\n\r\n  // Combine default rules with custom rules\r\n  const allRules = useMemo(() => {\r\n    const defaultRules: ValidationRule[] = [\r\n      {\r\n        type: \"required\",\r\n        message: \"Text is required\",\r\n        validator: (text: string) => text.trim().length > 0,\r\n      },\r\n      {\r\n        type: \"minLength\",\r\n        value: minLength,\r\n        message: `Text must be at least ${minLength} characters long`,\r\n        validator: (text: string) => text.trim().length >= minLength,\r\n      },\r\n      {\r\n        type: \"maxLength\",\r\n        value: maxLength,\r\n        message: `Text must not exceed ${maxLength} characters`,\r\n        validator: (text: string) => text.length <= maxLength,\r\n      },\r\n    ];\r\n\r\n    return [...defaultRules, ...validationRules];\r\n  }, [minLength, maxLength, validationRules]);\r\n\r\n  const validateText = useCallback(\r\n    (text: string): { isValid: boolean; errors: string[] } => {\r\n      const errors: string[] = [];\r\n\r\n      for (const rule of allRules) {\r\n        let isRuleValid = false;\r\n\r\n        switch (rule.type) {\r\n          case \"required\":\r\n            isRuleValid = text.trim().length > 0;\r\n            break;\r\n          case \"minLength\":\r\n            isRuleValid =\r\n              text.trim().length === 0 ||\r\n              text.trim().length >= (rule.value || minLength);\r\n            break;\r\n          case \"maxLength\":\r\n            isRuleValid = text.length <= (rule.value || maxLength);\r\n            break;\r\n          case \"custom\":\r\n            isRuleValid = rule.validator ? rule.validator(text) : true;\r\n            break;\r\n          default:\r\n            isRuleValid = true;\r\n        }\r\n\r\n        if (!isRuleValid) {\r\n          errors.push(rule.message);\r\n        }\r\n      }\r\n\r\n      return {\r\n        isValid: errors.length === 0,\r\n        errors,\r\n      };\r\n    },\r\n    [allRules, minLength, maxLength]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (validateOnChange) {\r\n      const { isValid: valid, errors } = validateText(value);\r\n      setIsValid(valid);\r\n      setValidationErrors(errors);\r\n    }\r\n  }, [value, validateOnChange, validateText]);\r\n\r\n  useEffect(() => {\r\n    if (onValidationChange && validateOnChange) {\r\n      onValidationChange(isValid, validationErrors);\r\n    }\r\n  }, [isValid, validationErrors, onValidationChange, validateOnChange]);\r\n\r\n  const handleTextChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  const handleConfirmClear = useCallback(() => {\r\n    setShowConfirmDialog(false);\r\n    if (onClear) {\r\n      onClear();\r\n    }\r\n  }, [onClear]);\r\n\r\n  const handleCancelClear = useCallback(() => {\r\n    setShowConfirmDialog(false);\r\n  }, []);\r\n\r\n  const handleClearClick = () => {\r\n    if (showClearConfirmation && value.length >= confirmClearThreshold) {\r\n      setShowConfirmDialog(true);\r\n    } else {\r\n      if (onClear) {\r\n        onClear();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAnalyzeClick = () => {\r\n    if (onAnalyze) {\r\n      onAnalyze();\r\n    }\r\n  };\r\n\r\n  const handleWordClick = useCallback((word: FlaggedWord) => {\r\n    setSelectedWord(word);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (showConfirmDialog) {\r\n      const handleKeyDown = (e: globalThis.KeyboardEvent) => {\r\n        if (e.key === \"Escape\") {\r\n          handleCancelClear();\r\n        } else if (e.key === \"Enter\") {\r\n          handleConfirmClear();\r\n        }\r\n      };\r\n\r\n      const handleClickOutside = (e: globalThis.MouseEvent) => {\r\n        if (\r\n          dialogRef.current &&\r\n          !dialogRef.current.contains(e.target as Node)\r\n        ) {\r\n          handleCancelClear();\r\n        }\r\n      };\r\n\r\n      document.addEventListener(\"keydown\", handleKeyDown);\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n      return () => {\r\n        document.removeEventListener(\"keydown\", handleKeyDown);\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n    }\r\n    return undefined;\r\n  }, [showConfirmDialog, handleConfirmClear, handleCancelClear]);\r\n\r\n  const isAtLimit = value.length >= maxLength;\r\n  const isNearLimit = value.length >= maxLength * 0.8;\r\n  const characterCountColor = isAtLimit\r\n    ? \"text-red-500 font-semibold\"\r\n    : isNearLimit\r\n    ? \"text-amber-500 font-medium\"\r\n    : \"text-gray-500\";\r\n\r\n  return (\r\n    <div className={`h-full ${className}`}>\r\n      <div\r\n        ref={containerRef}\r\n        className=\"flex h-full\"\r\n        style={{ userSelect: isResizing ? \"none\" : \"auto\" }}\r\n      >\r\n        {/* Input Panel - Left Side */}\r\n        <div style={{ width: `${inputWidth}%` }} className=\"flex flex-col\">\r\n          <div className=\"flex-1 relative\">\r\n            <div className=\"absolute inset-0 bg-gray-50 z-0\"></div>\r\n\r\n            <textarea\r\n              ref={textareaRef}\r\n              id=\"text-input\"\r\n              value={value}\r\n              onChange={handleTextChange}\r\n              placeholder={placeholder}\r\n              maxLength={maxLength}\r\n              className=\"w-full h-full px-6 py-6 placeholder-gray-400 text-gray-900 focus:outline-none resize-none border-0 relative z-10 bg-transparent\"\r\n              disabled={disabled || isAnalyzing}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"border-t border-gray-200 px-6 py-4 bg-white\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                {showClearButton && (\r\n                  <button\r\n                    onClick={handleClearClick}\r\n                    disabled={!value || disabled || isAnalyzing}\r\n                    className=\"px-4 py-2 text-sm font-medium text-gray-600 bg-gray-100 rounded-md hover:bg-gray-200 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                  >\r\n                    {clearButtonText}\r\n                  </button>\r\n                )}\r\n\r\n                {showAnalyzeButton && (\r\n                  <button\r\n                    onClick={handleAnalyzeClick}\r\n                    disabled={!value.trim() || disabled || isAnalyzing}\r\n                    className=\"px-6 py-2 text-sm font-medium text-white bg-red-500 rounded-md hover:bg-red-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                  >\r\n                    {isAnalyzing ? \"Analyzing...\" : analyzeButtonText}\r\n                  </button>\r\n                )}\r\n              </div>\r\n\r\n              {showCharacterCount && (\r\n                <div className={`text-sm ${characterCountColor}`}>\r\n                  {value.length} / {maxLength} characters\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {validationErrors.length > 0 && (\r\n              <div className=\"mt-2\">\r\n                {validationErrors.map((error, index) => (\r\n                  <p key={index} className=\"text-sm text-red-600\">\r\n                    {error}\r\n                  </p>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Horizontal Resize Handle */}\r\n        {showAnalysisOutput && (\r\n          <div\r\n            className=\"w-1 bg-gray-300 hover:bg-blue-500 cursor-col-resize transition-colors relative group\"\r\n            onMouseDown={handleMouseDown(\"horizontal\")}\r\n          >\r\n            <div className=\"absolute inset-y-0 -left-1 -right-1\" />\r\n            <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-1 h-8 bg-gray-400 group-hover:bg-blue-600 rounded-full opacity-0 group-hover:opacity-100 transition-opacity\" />\r\n          </div>\r\n        )}\r\n\r\n        {/* Right Panel Container - Stacked Vertically */}\r\n        {showAnalysisOutput && (\r\n          <div\r\n            style={{ width: `${rightPanelWidth}%` }}\r\n            className=\"flex flex-col\"\r\n          >\r\n            <div ref={rightContainerRef} className=\"flex flex-col h-full\">\r\n              {/* Analysis Output Panel - Top */}\r\n              <div style={{ height: `${analysisHeight}%` }} className=\"min-h-0\">\r\n                <AnalysisOutput\r\n                  text={analysisText}\r\n                  flaggedWords={flaggedWords}\r\n                  isAnalyzing={isAnalyzing}\r\n                  onWordClick={handleWordClick}\r\n                  analysisResults={analysisResults}\r\n                  onToggleReasoning={toggleExpandedItem}\r\n                />\r\n              </div>\r\n\r\n              {/* Vertical Resize Handle */}\r\n              {flaggedWords.length > 0 && (\r\n                <div\r\n                  className=\"h-1 bg-gray-300 hover:bg-blue-500 cursor-row-resize transition-colors relative group\"\r\n                  onMouseDown={handleMouseDown(\"vertical\")}\r\n                >\r\n                  <div className=\"absolute inset-x-0 -top-1 -bottom-1\" />\r\n                  <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-8 h-1 bg-gray-400 group-hover:bg-blue-600 rounded-full opacity-0 group-hover:opacity-100 transition-opacity\" />\r\n                </div>\r\n              )}\r\n\r\n              {/* Reasoning Panel - Bottom */}\r\n              {flaggedWords.length > 0 && (\r\n                <div\r\n                  style={{ height: `${reasoningHeight}%` }}\r\n                  className=\"min-h-0\"\r\n                >\r\n                  <ReasoningPanel\r\n                    selectedWord={selectedWord}\r\n                    flaggedWords={flaggedWords}\r\n                    onWordSelect={setSelectedWord}\r\n                    expandedItems={expandedItems}\r\n                    onToggleExpanded={toggleExpandedItem}\r\n                    isAnalyzing={isAnalyzing}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Clear confirmation dialog */}\r\n      {showConfirmDialog && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div\r\n            ref={dialogRef}\r\n            className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\"\r\n          >\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n              Confirm Clear\r\n            </h3>\r\n            <p className=\"text-gray-600 mb-6\">\r\n              Are you sure you want to clear all text? This action cannot be\r\n              undone.\r\n            </p>\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <button\r\n                onClick={handleCancelClear}\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleConfirmClear}\r\n                className=\"px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700\"\r\n              >\r\n                Clear Text\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2134, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/components/BiasDetectionApp.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { BiasAnalysisResponse, BiasSpan, AnalysisRequest } from \"@/types\";\r\nimport { analyzeText } from \"@/lib/api\";\r\nimport TextInput, { FlaggedWord } from \"@/components/TextInput\";\r\nimport { IssuesPanel } from \"@/components/IssuesPanel\";\r\nimport { useAuth } from \"@/components/AuthContext\";\r\n\r\ninterface BiasDetectionAppProps {\r\n  initialText?: string;\r\n  onBack?: () => void;\r\n}\r\n\r\nconst BiasDetectionApp: React.FC<BiasDetectionAppProps> = ({\r\n  initialText = \"\",\r\n  onBack,\r\n}) => {\r\n  const { user } = useAuth();\r\n  const [inputText, setInputText] = useState(initialText);\r\n  const [analysisText, setAnalysisText] = useState(\"\");\r\n  const [analysisResults, setAnalysisResults] =\r\n    useState<BiasAnalysisResponse | null>(null);\r\n  const [flaggedWords, setFlaggedWords] = useState<FlaggedWord[]>([]);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [showAnalysisOutput, setShowAnalysisOutput] = useState(false);\r\n\r\n  // Update input text when initialText prop changes\r\n  useEffect(() => {\r\n    setInputText(initialText);\r\n  }, [initialText]);\r\n\r\n  // Convert BiasSpan to FlaggedWord format\r\n  const convertToFlaggedWords = useCallback(\r\n    (biasSpans: BiasSpan[]): FlaggedWord[] => {\r\n      return biasSpans.map((span) => ({\r\n        word: span.text,\r\n        startIndex: span.start_index,\r\n        endIndex: span.end_index,\r\n        category: span.category,\r\n        explanation: span.explanation,\r\n        confidence: 1.0,\r\n        suggestions: [\r\n          {\r\n            word: span.suggested_revision || span.text,\r\n            confidence: 1.0,\r\n            reason: span.explanation,\r\n          },\r\n        ],\r\n      }));\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleAnalyze = useCallback(async () => {\r\n    if (!inputText.trim()) {\r\n      setError(\"Please enter some text to analyze\");\r\n      return;\r\n    }\r\n\r\n    setIsAnalyzing(true);\r\n    setError(null);\r\n    setShowAnalysisOutput(true);\r\n\r\n    try {\r\n      const request: AnalysisRequest = {\r\n        text: inputText.trim(),\r\n      };\r\n\r\n      const response = await analyzeText(request);\r\n      setAnalysisResults(response);\r\n      setAnalysisText(inputText); // Set the text that was analyzed\r\n\r\n      if (response.bias_spans && response.bias_spans.length > 0) {\r\n        const flagged = convertToFlaggedWords(response.bias_spans);\r\n        setFlaggedWords(flagged);\r\n      } else {\r\n        setFlaggedWords([]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Analysis error:\", err);\r\n      setError(\r\n        err instanceof Error ? err.message : \"An error occurred during analysis\"\r\n      );\r\n      setAnalysisResults(null);\r\n      setFlaggedWords([]);\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  }, [inputText, convertToFlaggedWords]);\r\n\r\n  const handleClear = useCallback(() => {\r\n    setInputText(\"\");\r\n    setAnalysisText(\"\");\r\n    setAnalysisResults(null);\r\n    setFlaggedWords([]);\r\n    setError(null);\r\n    setShowAnalysisOutput(false);\r\n  }, []);\r\n\r\n  const handleClearHighlights = useCallback(() => {\r\n    setFlaggedWords([]);\r\n    setAnalysisResults(null);\r\n  }, []);\r\n\r\n  const handleInputChange = useCallback((newText: string) => {\r\n    setInputText(newText);\r\n    setError(null);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\r\n        <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n          {/* Header */}\r\n          <div className=\"bg-gradient-to-r from-red-500 to-pink-500 px-6 py-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-white\">BiasGuard</h1>\r\n                <p className=\"text-red-100 mt-1\">\r\n                  Detect and understand potential bias in your text\r\n                </p>\r\n              </div>\r\n              {onBack && (\r\n                <button\r\n                  onClick={onBack}\r\n                  className=\"text-white hover:text-red-100 transition-colors\"\r\n                >\r\n                  <svg\r\n                    className=\"w-6 h-6\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Error Message */}\r\n          {error && (\r\n            <div className=\"bg-red-50 border-l-4 border-red-400 p-4 m-4\">\r\n              <div className=\"flex\">\r\n                <div className=\"flex-shrink-0\">\r\n                  <svg\r\n                    className=\"h-5 w-5 text-red-400\"\r\n                    viewBox=\"0 0 20 20\"\r\n                    fill=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\r\n                      clipRule=\"evenodd\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"ml-3\">\r\n                  <p className=\"text-sm text-red-700\">{error}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Main Content */}\r\n          <div className=\"flex flex-col lg:flex-row\">\r\n            {/* Text Input Section */}\r\n            <div className=\"lg:w-full\">\r\n              <div className=\"h-96 lg:h-[600px]\">\r\n                <TextInput\r\n                  value={inputText}\r\n                  onChange={handleInputChange}\r\n                  onClear={handleClear}\r\n                  onAnalyze={handleAnalyze}\r\n                  placeholder=\"Enter or paste your text here to analyze for potential bias...\"\r\n                  isAnalyzing={isAnalyzing}\r\n                  error={error}\r\n                  maxLength={5000}\r\n                  showCharacterCount={true}\r\n                  showClearButton={true}\r\n                  showAnalyzeButton={true}\r\n                  analyzeButtonText=\"Analyze for Bias\"\r\n                  clearButtonText=\"Clear All\"\r\n                  flaggedWords={flaggedWords}\r\n                  onClearHighlights={handleClearHighlights}\r\n                  analysisText={analysisText}\r\n                  showAnalysisOutput={showAnalysisOutput}\r\n                  analysisResults={analysisResults}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BiasDetectionApp;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2430, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/components/Dashboard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport BiasDetectionApp from \"./BiasDetectionApp\";\r\nimport {\r\n  getSavedAnalyses,\r\n  deleteAnalysis as deleteAnalysisAPI,\r\n} from \"@/lib/api\";\r\n\r\ninterface SavedAnalysis {\r\n  id: number;\r\n  user_id: number;\r\n  text: string;\r\n  result: unknown;\r\n  title?: string;\r\n  created_at: string;\r\n}\r\n\r\nexport default function Dashboard() {\r\n  const { user, logout } = useAuth();\r\n  const [savedAnalyses, setSavedAnalyses] = useState<SavedAnalysis[]>([]);\r\n  const [showAnalyzer, setShowAnalyzer] = useState(false);\r\n  const [initialText, setInitialText] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    // Load saved analyses from backend\r\n    loadSavedAnalyses();\r\n  }, [user?.id]);\r\n\r\n  const loadSavedAnalyses = async () => {\r\n    try {\r\n      const analyses = await getSavedAnalyses();\r\n      setSavedAnalyses(analyses);\r\n    } catch (error) {\r\n      console.error(\"Error loading saved analyses:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteAnalysis = async (id: number) => {\r\n    try {\r\n      const success = await deleteAnalysisAPI(id);\r\n      if (success) {\r\n        setSavedAnalyses((prev) =>\r\n          prev.filter((analysis) => analysis.id !== id)\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting analysis:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAnalysisClick = (analysis: SavedAnalysis) => {\r\n    setInitialText(analysis.text);\r\n    setShowAnalyzer(true);\r\n  };\r\n\r\n  if (showAnalyzer) {\r\n    return (\r\n      <BiasDetectionApp\r\n        initialText={initialText}\r\n        onBack={() => {\r\n          setShowAnalyzer(false);\r\n          setInitialText(\"\");\r\n          loadSavedAnalyses(); // Refresh analyses when coming back\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white border-b border-gray-200\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between h-20\">\r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"w-10 h-10 bg-red-500 rounded-lg flex items-center justify-center\">\r\n                  <svg\r\n                    className=\"w-6 h-6 text-white\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div>\r\n                  <h1 className=\"text-2xl font-bold text-gray-800\">HateZero</h1>\r\n                  <p className=\"text-sm text-gray-600 font-medium\">\r\n                    AI-powered content analysis\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <button\r\n                  onClick={() => (window.location.href = \"/\")}\r\n                  className=\"text-gray-700 hover:text-gray-900 font-medium px-4 py-2 transition-colors\"\r\n                >\r\n                  Dashboard\r\n                </button>\r\n                <button\r\n                  onClick={logout}\r\n                  className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors\"\r\n                >\r\n                  Sign Out\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Dashboard</h1>\r\n          <p className=\"text-gray-600\">Manage your bias detection analyses</p>\r\n        </div>\r\n\r\n        {/* Action Button */}\r\n        <div className=\"mb-8\">\r\n          <button\r\n            onClick={() => setShowAnalyzer(true)}\r\n            className=\"bg-red-500 text-white px-6 py-3 rounded-lg hover:bg-red-600 transition-colors font-medium shadow-lg\"\r\n          >\r\n            New Analysis\r\n          </button>\r\n        </div>\r\n\r\n        {/* Saved Analyses */}\r\n        <div className=\"bg-white rounded-lg shadow\">\r\n          <div className=\"px-6 py-4 border-b border-gray-200\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">\r\n              Saved Analyses\r\n            </h2>\r\n          </div>\r\n\r\n          {savedAnalyses.length === 0 ? (\r\n            <div className=\"px-6 py-12 text-center\">\r\n              <svg\r\n                className=\"w-12 h-12 text-gray-400 mx-auto mb-4\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\r\n                />\r\n              </svg>\r\n              <p className=\"text-gray-500 mb-4\">No analyses saved yet</p>\r\n              <button\r\n                onClick={() => setShowAnalyzer(true)}\r\n                className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors\"\r\n              >\r\n                Create Your First Analysis\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"divide-y divide-gray-200\">\r\n              {savedAnalyses.map((analysis) => (\r\n                <div\r\n                  key={analysis.id}\r\n                  className=\"px-6 py-4 hover:bg-gray-50 cursor-pointer transition-colors\"\r\n                  onClick={() => handleAnalysisClick(analysis)}\r\n                >\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex-1\">\r\n                      <h3 className=\"text-lg font-medium text-gray-900 mb-1\">\r\n                        {analysis.title || `Analysis ${analysis.id}`}\r\n                      </h3>\r\n                      <p className=\"text-gray-600 text-sm mb-2 line-clamp-2\">\r\n                        {analysis.text.length > 100\r\n                          ? `${analysis.text.substring(0, 100)}...`\r\n                          : analysis.text}\r\n                      </p>\r\n                      <div className=\"flex items-center gap-4 text-sm text-gray-500\">\r\n                        <span>\r\n                          {new Date(analysis.created_at).toLocaleDateString()}\r\n                        </span>\r\n                        <span>\r\n                          {new Date(analysis.created_at).toLocaleTimeString()}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2 ml-4\">\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          deleteAnalysis(analysis.id);\r\n                        }}\r\n                        className=\"text-red-600 hover:text-red-800 font-medium text-sm\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2841, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/components/LandingPage.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { useAuth, AuthProvider } from './AuthContext';\r\nimport AuthForm from './AuthForm';\r\nimport Dashboard from './Dashboard';\r\n\r\nfunction MainContent() {\r\n  const { user, isLoading } = useAuth();\r\n  const [showAuthForm, setShowAuthForm] = useState(false);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-lg text-gray-600\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If user is logged in, show dashboard\r\n  if (user) {\r\n    return <Dashboard />;\r\n  }\r\n\r\n  // Show landing page for non-authenticated users\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white border-b border-gray-200\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between h-20\">\r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"w-10 h-10 bg-red-500 rounded-lg flex items-center justify-center\">\r\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n                  </svg>\r\n                </div>\r\n                <div>\r\n                  <h1 className=\"text-2xl font-bold text-gray-800\">\r\n                    HateZero\r\n                  </h1>\r\n                  <p className=\"text-sm text-gray-600 font-medium\">\r\n                    AI-powered content analysis\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                <button \r\n                  onClick={() => setShowAuthForm(true)}\r\n                  className=\"text-gray-700 hover:text-gray-900 font-medium px-4 py-2 transition-colors\"\r\n                >\r\n                  Sign In\r\n                </button>\r\n                <button \r\n                  onClick={() => setShowAuthForm(true)}\r\n                  className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors font-medium\"\r\n                >\r\n                  Sign Up\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Hero Section */}\r\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-6xl mx-auto\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\r\n            {/* Left side - Text content */}\r\n            <div className=\"text-left\">\r\n              <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-900 mb-6\">\r\n                Detect Bias and Hate Speech in Text\r\n              </h1>\r\n              <p className=\"text-xl text-gray-600 mb-8\">\r\n                Use advanced AI to analyze text for hate speech, bias, and harmful content. \r\n                Perfect for content moderation and research.\r\n              </p>\r\n\r\n              {/* Stats Section */}\r\n              <div className=\"grid grid-cols-2 gap-6 mb-8\">\r\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\r\n                  <div className=\"text-3xl font-bold text-red-500 mb-1\">95%</div>\r\n                  <div className=\"text-sm text-gray-600 font-medium\">Accuracy Rate</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\r\n                  <div className=\"text-3xl font-bold text-red-500 mb-1\">&lt;4s</div>\r\n                  <div className=\"text-sm text-gray-600 font-medium\">Processing Time</div>\r\n                </div>\r\n              </div>\r\n\r\n              <button \r\n                onClick={() => setShowAuthForm(true)}\r\n                className=\"bg-red-500 text-white px-8 py-3 rounded-lg text-lg font-semibold hover:bg-red-600 transition-colors shadow-lg\"\r\n              >\r\n                Start Analyzing Text\r\n              </button>\r\n            </div>\r\n            \r\n            {/* Right side - Text input and analyze */}\r\n            <div className=\"bg-white rounded-xl shadow-xl p-6\">\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <div className=\"w-6 h-6 bg-red-500 rounded-lg flex items-center justify-center\">\r\n                  <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n                  </svg>\r\n                </div>\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">Try it out</h3>\r\n              </div>\r\n              <textarea\r\n                placeholder=\"Type or paste your text here to analyze for bias and hate speech...\"\r\n                className=\"w-full h-64 p-4 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-red-500 focus:border-red-500 outline-none placeholder-gray-500 text-gray-900 transition-all duration-200\"\r\n                maxLength={500}\r\n              />\r\n              <div className=\"mt-4 flex justify-end\">\r\n                <button\r\n                  onClick={() => setShowAuthForm(true)}\r\n                  className=\"bg-red-500 text-white px-6 py-2 rounded-lg hover:bg-red-600 transition-all duration-200 font-medium\"\r\n                >\r\n                  Analyze Text\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Auth Modal */}\r\n      {showAuthForm && (\r\n        <AuthForm onClose={() => setShowAuthForm(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function LandingPage() {\r\n  return (\r\n    <AuthProvider>\r\n      <MainContent />\r\n    </AuthProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}