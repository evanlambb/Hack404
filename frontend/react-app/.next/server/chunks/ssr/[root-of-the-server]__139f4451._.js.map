{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/Header.tsx"],"sourcesContent":["interface HeaderProps {\n  title?: string;\n  className?: string;\n}\n\nexport default function Header() {\n  return (\n    <header className=\"bg-gradient-to-r from-white via-blue-50 to-indigo-50 shadow-lg border-b border-blue-100/50 backdrop-blur-sm\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-20\">\n          <div className=\"flex items-center gap-4\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center shadow-lg\">\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-800\">\n                  Bias Detection Tool\n                </h1>\n                <p className=\"text-sm text-gray-600 font-medium\">\n                  Analyze and improve text inclusivity\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-4\">\n            <div className=\"hidden md:flex items-center gap-2 bg-white/60 backdrop-blur-sm rounded-full px-4 py-2 shadow-sm border border-blue-200/50\">\n              <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n              <span className=\"text-sm font-medium text-gray-700\">Ready to analyze</span>\n            </div>\n            \n            <button className=\"p-2 text-gray-600 hover:text-gray-800 hover:bg-white/60 rounded-xl transition-all duration-200\">\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n} "],"names":[],"mappings":";;;;;AAKe,SAAS;IACtB,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;wCAAqB,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDAC5E,cAAA,8OAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;8CAGzE,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAAmC;;;;;;sDAGjD,8OAAC;4CAAE,WAAU;sDAAoC;;;;;;;;;;;;;;;;;;;;;;;kCAOvD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;wCAAK,WAAU;kDAAoC;;;;;;;;;;;;0CAGtD,8OAAC;gCAAO,WAAU;0CAChB,cAAA,8OAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CACjE,cAAA,8OAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQrF","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/TextInput.tsx"],"sourcesContent":["import { ChangeEvent, useState, useEffect, useCallback, useMemo, useRef } from 'react';\n\nexport interface ValidationRule {\n  type: 'minLength' | 'maxLength' | 'required' | 'custom';\n  value?: number;\n  message: string;\n  validator?: (text: string) => boolean;\n}\n\nexport interface TextInputProps {\n  value: string;\n  onChange: (value: string) => void;\n  onClear?: () => void;\n  onAnalyze?: () => void;\n  placeholder?: string;\n  disabled?: boolean;\n  isAnalyzing?: boolean;\n  error?: string | null;\n  label?: string;\n  maxLength?: number;\n  minLength?: number;\n  className?: string;\n  showCharacterCount?: boolean;\n  showClearButton?: boolean;\n  showAnalyzeButton?: boolean;\n  analyzeButtonText?: string;\n  clearButtonText?: string;\n  validateOnChange?: boolean;\n  validationRules?: ValidationRule[];\n  onValidationChange?: (isValid: boolean, errors: string[]) => void;\n  confirmClearThreshold?: number; // Characters threshold for showing confirmation dialog\n  showClearConfirmation?: boolean;\n}\n\n// Default empty validation rules (stable reference)\nconst DEFAULT_VALIDATION_RULES: ValidationRule[] = [];\n\nexport default function TextInput({\n  value,\n  onChange,\n  onClear,\n  onAnalyze,\n  placeholder = \"Type or paste your text here...\",\n  disabled = false,\n  isAnalyzing = false,\n  error = null,\n  label = \"Enter text to analyze\",\n  maxLength = 5000,\n  minLength = 5,\n  className = \"\",\n  showCharacterCount = true,\n  showClearButton = true,\n  showAnalyzeButton = true,\n  analyzeButtonText = \"Analyze Text\",\n  clearButtonText = \"Clear\",\n  validateOnChange = true,\n  validationRules = DEFAULT_VALIDATION_RULES,\n  onValidationChange,\n  confirmClearThreshold = 50,\n  showClearConfirmation = true\n}: TextInputProps) {\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\n  const [isValid, setIsValid] = useState(true);\n  const [showConfirmDialog, setShowConfirmDialog] = useState<boolean>(false);\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  // Combine default rules with custom rules\n  const allRules = useMemo(() => {\n    const defaultRules: ValidationRule[] = [\n      {\n        type: 'required',\n        message: 'Text is required',\n        validator: (text: string) => text.trim().length > 0\n      },\n      {\n        type: 'minLength',\n        value: minLength,\n        message: `Text must be at least ${minLength} characters long`,\n        validator: (text: string) => text.trim().length >= minLength\n      },\n      {\n        type: 'maxLength',\n        value: maxLength,\n        message: `Text must not exceed ${maxLength} characters`,\n        validator: (text: string) => text.length <= maxLength\n      }\n    ];\n\n    return [...defaultRules, ...validationRules];\n  }, [minLength, maxLength, validationRules]);\n\n  // Validation function\n  const validateText = useCallback((text: string): { isValid: boolean; errors: string[] } => {\n    const errors: string[] = [];\n    \n    for (const rule of allRules) {\n      let isRuleValid = false;\n      \n      switch (rule.type) {\n        case 'required':\n          isRuleValid = text.trim().length > 0;\n          break;\n        case 'minLength':\n          isRuleValid = text.trim().length === 0 || text.trim().length >= (rule.value || minLength);\n          break;\n        case 'maxLength':\n          isRuleValid = text.length <= (rule.value || maxLength);\n          break;\n        case 'custom':\n          isRuleValid = rule.validator ? rule.validator(text) : true;\n          break;\n        default:\n          isRuleValid = true;\n      }\n      \n      if (!isRuleValid) {\n        errors.push(rule.message);\n      }\n    }\n    \n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }, [allRules, minLength, maxLength]);\n\n  // Effect to validate on value change\n  useEffect(() => {\n    if (validateOnChange) {\n      const { isValid: valid, errors } = validateText(value);\n      setIsValid(valid);\n      setValidationErrors(errors);\n    }\n  }, [value, validateOnChange, validateText]);\n\n  // Effect to notify parent of validation changes\n  useEffect(() => {\n    if (onValidationChange && validateOnChange) {\n      onValidationChange(isValid, validationErrors);\n    }\n  }, [isValid, validationErrors, onValidationChange, validateOnChange]);\n\n  const handleTextChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    onChange(e.target.value);\n  };\n\n  const handleConfirmClear = useCallback(() => {\n    setShowConfirmDialog(false);\n    if (onClear) {\n      onClear();\n    }\n  }, [onClear]);\n\n  const handleCancelClear = useCallback(() => {\n    setShowConfirmDialog(false);\n  }, []);\n\n  const handleClearClick = () => {\n    // Check if we need to show confirmation dialog\n    if (showClearConfirmation && value.length >= confirmClearThreshold) {\n      setShowConfirmDialog(true);\n    } else {\n      // Clear immediately if no confirmation needed\n      if (onClear) {\n        onClear();\n      }\n    }\n  };\n\n  const handleAnalyzeClick = () => {\n    if (onAnalyze) {\n      onAnalyze();\n    }\n  };\n\n  // Effect to handle keyboard events and click outside for confirmation dialog\n  useEffect(() => {\n    if (showConfirmDialog) {\n      const handleKeyDown = (e: KeyboardEvent) => {\n        if (e.key === 'Escape') {\n          handleCancelClear();\n        } else if (e.key === 'Enter') {\n          handleConfirmClear();\n        }\n      };\n\n      const handleClickOutside = (e: MouseEvent) => {\n        if (dialogRef.current && !dialogRef.current.contains(e.target as Node)) {\n          handleCancelClear();\n        }\n      };\n\n      document.addEventListener('keydown', handleKeyDown);\n      document.addEventListener('mousedown', handleClickOutside);\n\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n    // Return undefined for the else case to satisfy TypeScript\n    return undefined;\n  }, [showConfirmDialog, handleConfirmClear, handleCancelClear]);\n\n  const isAtLimit = value.length >= maxLength;\n  const isNearLimit = value.length >= maxLength * 0.8;\n  const characterCountColor = isAtLimit \n    ? 'text-red-500 font-semibold' \n    : isNearLimit \n      ? 'text-amber-500 font-medium' \n      : 'text-gray-500';\n\n  return (\n    <div className={`bg-white/90 backdrop-blur-sm rounded-xl shadow-lg border border-white/40 p-6 ${className}`}>\n      <div className=\"space-y-4\">\n        <div>\n          <label \n            htmlFor=\"text-input\" \n            className=\"block text-sm font-semibold text-gray-700 mb-3\"\n          >\n            {label}\n          </label>\n          <textarea\n            id=\"text-input\"\n            value={value}\n            onChange={handleTextChange}\n            placeholder={placeholder}\n            maxLength={maxLength}\n            className=\"w-full h-40 px-4 py-3 border-2 border-gray-200 rounded-xl shadow-sm placeholder-gray-400 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-200 bg-white/50\"\n            disabled={disabled || isAnalyzing}\n          />\n        </div>\n\n        {/* Controls */}\n        <div className=\"flex flex-col sm:flex-row gap-4 sm:justify-between sm:items-center\">\n          {showCharacterCount && (\n            <div className={`text-sm ${characterCountColor} flex items-center gap-1`}>\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n              </svg>\n              {value.length} / {maxLength} characters\n            </div>\n          )}\n          <div className=\"flex gap-3\">\n            {showClearButton && (\n              <button\n                onClick={handleClearClick}\n                disabled={!value || isAnalyzing}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white/80 border border-gray-300 rounded-xl shadow-sm hover:bg-gray-50 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n              >\n                {clearButtonText}\n              </button>\n            )}\n            {showAnalyzeButton && (\n              <button\n                onClick={handleAnalyzeClick}\n                disabled={!value.trim() || isAnalyzing || !isValid}\n                className=\"px-6 py-2 text-sm font-medium text-white bg-gradient-to-r from-blue-500 to-indigo-600 border border-transparent rounded-xl shadow-lg hover:from-blue-600 hover:to-indigo-700 hover:shadow-xl focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 transform hover:scale-105\"\n              >\n                {isAnalyzing ? (\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\n                    Analyzing...\n                  </div>\n                ) : (\n                  <div className=\"flex items-center gap-2\">\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                    </svg>\n                    {analyzeButtonText}\n                  </div>\n                )}\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* External Error Display */}\n        {error && (\n          <div className=\"rounded-xl bg-gradient-to-r from-red-50 to-pink-50 p-4 border border-red-200/50\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">\n                  Error\n                </h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  {error}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Validation Errors Display */}\n        {validationErrors.length > 0 && validateOnChange && (\n          <div className=\"rounded-xl bg-gradient-to-r from-amber-50 to-orange-50 p-4 border border-amber-200/50\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0\">\n                <svg className=\"h-5 w-5 text-amber-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-amber-800\">\n                  Validation {validationErrors.length === 1 ? 'Error' : 'Errors'}\n                </h3>\n                <div className=\"mt-2\">\n                  {validationErrors.map((validationError, index) => (\n                    <div key={index} className=\"text-sm text-amber-700\">\n                      • {validationError}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Confirmation Dialog */}\n      {showConfirmDialog && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\n          <div ref={dialogRef} className=\"bg-white rounded-2xl p-6 max-w-md w-full mx-4 shadow-2xl border border-white/20\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <div className=\"w-10 h-10 bg-amber-100 rounded-full flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-amber-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                Confirm Clear Text\n              </h3>\n            </div>\n            <p className=\"text-gray-600 mb-6\">\n              You have {value.length} characters of text. Are you sure you want to clear all your text? This action cannot be undone.\n            </p>\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={handleCancelClear}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-xl shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleConfirmClear}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-gradient-to-r from-red-500 to-pink-600 border border-transparent rounded-xl shadow-lg hover:from-red-600 hover:to-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-all duration-200\"\n              >\n                Clear Text\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAAA;;;AAkCA,oDAAoD;AACpD,MAAM,2BAA6C,EAAE;AAEtC,SAAS,UAAU,EAChC,KAAK,EACL,QAAQ,EACR,OAAO,EACP,SAAS,EACT,cAAc,iCAAiC,EAC/C,WAAW,KAAK,EAChB,cAAc,KAAK,EACnB,QAAQ,IAAI,EACZ,QAAQ,uBAAuB,EAC/B,YAAY,IAAI,EAChB,YAAY,CAAC,EACb,YAAY,EAAE,EACd,qBAAqB,IAAI,EACzB,kBAAkB,IAAI,EACtB,oBAAoB,IAAI,EACxB,oBAAoB,cAAc,EAClC,kBAAkB,OAAO,EACzB,mBAAmB,IAAI,EACvB,kBAAkB,wBAAwB,EAC1C,kBAAkB,EAClB,wBAAwB,EAAE,EAC1B,wBAAwB,IAAI,EACb;IACf,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACrE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IACpE,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAEzC,0CAA0C;IAC1C,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACvB,MAAM,eAAiC;YACrC;gBACE,MAAM;gBACN,SAAS;gBACT,WAAW,CAAC,OAAiB,KAAK,IAAI,GAAG,MAAM,GAAG;YACpD;YACA;gBACE,MAAM;gBACN,OAAO;gBACP,SAAS,CAAC,sBAAsB,EAAE,UAAU,gBAAgB,CAAC;gBAC7D,WAAW,CAAC,OAAiB,KAAK,IAAI,GAAG,MAAM,IAAI;YACrD;YACA;gBACE,MAAM;gBACN,OAAO;gBACP,SAAS,CAAC,qBAAqB,EAAE,UAAU,WAAW,CAAC;gBACvD,WAAW,CAAC,OAAiB,KAAK,MAAM,IAAI;YAC9C;SACD;QAED,OAAO;eAAI;eAAiB;SAAgB;IAC9C,GAAG;QAAC;QAAW;QAAW;KAAgB;IAE1C,sBAAsB;IACtB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAChC,MAAM,SAAmB,EAAE;QAE3B,KAAK,MAAM,QAAQ,SAAU;YAC3B,IAAI,cAAc;YAElB,OAAQ,KAAK,IAAI;gBACf,KAAK;oBACH,cAAc,KAAK,IAAI,GAAG,MAAM,GAAG;oBACnC;gBACF,KAAK;oBACH,cAAc,KAAK,IAAI,GAAG,MAAM,KAAK,KAAK,KAAK,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,KAAK,IAAI,SAAS;oBACxF;gBACF,KAAK;oBACH,cAAc,KAAK,MAAM,IAAI,CAAC,KAAK,KAAK,IAAI,SAAS;oBACrD;gBACF,KAAK;oBACH,cAAc,KAAK,SAAS,GAAG,KAAK,SAAS,CAAC,QAAQ;oBACtD;gBACF;oBACE,cAAc;YAClB;YAEA,IAAI,CAAC,aAAa;gBAChB,OAAO,IAAI,CAAC,KAAK,OAAO;YAC1B;QACF;QAEA,OAAO;YACL,SAAS,OAAO,MAAM,KAAK;YAC3B;QACF;IACF,GAAG;QAAC;QAAU;QAAW;KAAU;IAEnC,qCAAqC;IACrC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,kBAAkB;YACpB,MAAM,EAAE,SAAS,KAAK,EAAE,MAAM,EAAE,GAAG,aAAa;YAChD,WAAW;YACX,oBAAoB;QACtB;IACF,GAAG;QAAC;QAAO;QAAkB;KAAa;IAE1C,gDAAgD;IAChD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,sBAAsB,kBAAkB;YAC1C,mBAAmB,SAAS;QAC9B;IACF,GAAG;QAAC;QAAS;QAAkB;QAAoB;KAAiB;IAEpE,MAAM,mBAAmB,CAAC;QACxB,SAAS,EAAE,MAAM,CAAC,KAAK;IACzB;IAEA,MAAM,qBAAqB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACrC,qBAAqB;QACrB,IAAI,SAAS;YACX;QACF;IACF,GAAG;QAAC;KAAQ;IAEZ,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACpC,qBAAqB;IACvB,GAAG,EAAE;IAEL,MAAM,mBAAmB;QACvB,+CAA+C;QAC/C,IAAI,yBAAyB,MAAM,MAAM,IAAI,uBAAuB;YAClE,qBAAqB;QACvB,OAAO;YACL,8CAA8C;YAC9C,IAAI,SAAS;gBACX;YACF;QACF;IACF;IAEA,MAAM,qBAAqB;QACzB,IAAI,WAAW;YACb;QACF;IACF;IAEA,6EAA6E;IAC7E,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,mBAAmB;YACrB,MAAM,gBAAgB,CAAC;gBACrB,IAAI,EAAE,GAAG,KAAK,UAAU;oBACtB;gBACF,OAAO,IAAI,EAAE,GAAG,KAAK,SAAS;oBAC5B;gBACF;YACF;YAEA,MAAM,qBAAqB,CAAC;gBAC1B,IAAI,UAAU,OAAO,IAAI,CAAC,UAAU,OAAO,CAAC,QAAQ,CAAC,EAAE,MAAM,GAAW;oBACtE;gBACF;YACF;YAEA,SAAS,gBAAgB,CAAC,WAAW;YACrC,SAAS,gBAAgB,CAAC,aAAa;YAEvC,OAAO;gBACL,SAAS,mBAAmB,CAAC,WAAW;gBACxC,SAAS,mBAAmB,CAAC,aAAa;YAC5C;QACF;QACA,2DAA2D;QAC3D,OAAO;IACT,GAAG;QAAC;QAAmB;QAAoB;KAAkB;IAE7D,MAAM,YAAY,MAAM,MAAM,IAAI;IAClC,MAAM,cAAc,MAAM,MAAM,IAAI,YAAY;IAChD,MAAM,sBAAsB,YACxB,+BACA,cACE,+BACA;IAEN,qBACE,8OAAC;QAAI,WAAW,CAAC,6EAA6E,EAAE,WAAW;;0BACzG,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCACC,SAAQ;gCACR,WAAU;0CAET;;;;;;0CAEH,8OAAC;gCACC,IAAG;gCACH,OAAO;gCACP,UAAU;gCACV,aAAa;gCACb,WAAW;gCACX,WAAU;gCACV,UAAU,YAAY;;;;;;;;;;;;kCAK1B,8OAAC;wBAAI,WAAU;;4BACZ,oCACC,8OAAC;gCAAI,WAAW,CAAC,QAAQ,EAAE,oBAAoB,wBAAwB,CAAC;;kDACtE,8OAAC;wCAAI,WAAU;wCAAU,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDACjE,cAAA,8OAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;oCAEtE,MAAM,MAAM;oCAAC;oCAAI;oCAAU;;;;;;;0CAGhC,8OAAC;gCAAI,WAAU;;oCACZ,iCACC,8OAAC;wCACC,SAAS;wCACT,UAAU,CAAC,SAAS;wCACpB,WAAU;kDAET;;;;;;oCAGJ,mCACC,8OAAC;wCACC,SAAS;wCACT,UAAU,CAAC,MAAM,IAAI,MAAM,eAAe,CAAC;wCAC3C,WAAU;kDAET,4BACC,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;;;;;;gDAAkF;;;;;;iEAInG,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;oDAAU,MAAK;oDAAO,QAAO;oDAAe,SAAQ;8DACjE,cAAA,8OAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAG,GAAE;;;;;;;;;;;gDAEtE;;;;;;;;;;;;;;;;;;;;;;;;oBASZ,uBACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;wCAAuB,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDAC9E,cAAA,8OAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;8CAGzE,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAAmC;;;;;;sDAGjD,8OAAC;4CAAI,WAAU;sDACZ;;;;;;;;;;;;;;;;;;;;;;;oBAQV,iBAAiB,MAAM,GAAG,KAAK,kCAC9B,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;wCAAyB,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDAChF,cAAA,8OAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;8CAGzE,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;;gDAAqC;gDACrC,iBAAiB,MAAM,KAAK,IAAI,UAAU;;;;;;;sDAExD,8OAAC;4CAAI,WAAU;sDACZ,iBAAiB,GAAG,CAAC,CAAC,iBAAiB,sBACtC,8OAAC;oDAAgB,WAAU;;wDAAyB;wDAC/C;;mDADK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAYvB,mCACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,KAAK;oBAAW,WAAU;;sCAC7B,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;wCAAyB,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDAChF,cAAA,8OAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;8CAGzE,8OAAC;oCAAG,WAAU;8CAAsC;;;;;;;;;;;;sCAItD,8OAAC;4BAAE,WAAU;;gCAAqB;gCACtB,MAAM,MAAM;gCAAC;;;;;;;sCAEzB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;8CAGD,8OAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf","debugId":null}},
    {"offset": {"line": 761, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/IssuesPanel.tsx"],"sourcesContent":["'use client';\n\nimport { AnalysisResponse, FlaggedWord } from '@/types';\nimport { useState } from 'react';\n\ninterface IssuesPanelProps {\n  analysisResult: AnalysisResponse | null;\n  isAnalyzing: boolean;\n  onWordReplace: (originalWord: string, newWord: string) => void;\n  onIssueClick?: (issue: FlaggedWord) => void;\n}\n\nconst getCategoryColor = (category: string) => {\n  switch (category.toLowerCase()) {\n    case 'gender_bias':\n      return {\n        bg: 'bg-gradient-to-r from-pink-100 to-rose-100',\n        border: 'border-pink-300',\n        text: 'text-pink-800',\n        badge: 'bg-pink-500',\n        icon: '♀'\n      };\n    case 'racial_bias':\n      return {\n        bg: 'bg-gradient-to-r from-orange-100 to-amber-100',\n        border: 'border-orange-300',\n        text: 'text-orange-800',\n        badge: 'bg-orange-500',\n        icon: '⚡'\n      };\n    case 'age_bias':\n      return {\n        bg: 'bg-gradient-to-r from-purple-100 to-violet-100',\n        border: 'border-purple-300',\n        text: 'text-purple-800',\n        badge: 'bg-purple-500',\n        icon: '⏰'\n      };\n    case 'religious_bias':\n      return {\n        bg: 'bg-gradient-to-r from-emerald-100 to-teal-100',\n        border: 'border-emerald-300',\n        text: 'text-emerald-800',\n        badge: 'bg-emerald-500',\n        icon: '☪'\n      };\n    case 'disability_bias':\n      return {\n        bg: 'bg-gradient-to-r from-blue-100 to-indigo-100',\n        border: 'border-blue-300',\n        text: 'text-blue-800',\n        badge: 'bg-blue-500',\n        icon: '♿'\n      };\n    default:\n      return {\n        bg: 'bg-gradient-to-r from-gray-100 to-slate-100',\n        border: 'border-gray-300',\n        text: 'text-gray-800',\n        badge: 'bg-gray-500',\n        icon: '⚠'\n      };\n  }\n};\n\nconst getConfidenceColor = (confidence: number) => {\n  if (confidence >= 0.8) return 'text-red-600 bg-red-100';\n  if (confidence >= 0.6) return 'text-amber-600 bg-amber-100';\n  return 'text-green-600 bg-green-100';\n};\n\nexport function IssuesPanel({ \n  analysisResult, \n  isAnalyzing, \n  onWordReplace,\n  onIssueClick \n}: IssuesPanelProps) {\n  const [expandedIssues, setExpandedIssues] = useState<Set<number>>(new Set());\n\n  const toggleIssueExpansion = (index: number) => {\n    const newExpanded = new Set(expandedIssues);\n    if (newExpanded.has(index)) {\n      newExpanded.delete(index);\n    } else {\n      newExpanded.add(index);\n    }\n    setExpandedIssues(newExpanded);\n  };\n\n  const handleWordReplace = (originalWord: string, newWord: string) => {\n    onWordReplace(originalWord, newWord);\n  };\n\n  const handleIssueClick = (issue: FlaggedWord) => {\n    if (onIssueClick) {\n      onIssueClick(issue);\n    }\n  };\n\n  return (\n    <div className=\"w-full lg:w-96 h-full bg-gradient-to-b from-white via-slate-50/50 to-gray-100/30 border-l-2 border-gradient-to-b from-blue-200 to-indigo-300 shadow-2xl backdrop-blur-sm\">\n      <div className=\"h-full flex flex-col\">\n        {/* Header */}\n        <div className=\"sticky top-0 bg-gradient-to-r from-white via-blue-50/80 to-indigo-50/60 backdrop-blur-sm border-b-2 border-blue-100/50 p-6 shadow-lg\">\n          <div className=\"flex items-center gap-3 mb-4\">\n            <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center shadow-lg\">\n              <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </div>\n            <h2 className=\"text-xl font-bold text-gray-800\">\n              Issues Found\n            </h2>\n          </div>\n\n          {analysisResult && (\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between p-3 bg-white/60 rounded-xl border border-blue-200/50 shadow-sm\">\n                <span className=\"text-sm font-medium text-gray-700\">Analysis Confidence</span>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"flex-1 bg-gray-200 rounded-full h-2 w-16\">\n                    <div \n                      className=\"bg-gradient-to-r from-blue-500 to-indigo-600 h-2 rounded-full transition-all duration-500\"\n                      style={{ width: `${analysisResult.confidence * 100}%` }}\n                    />\n                  </div>\n                  <span className={`text-xs font-semibold px-2 py-1 rounded-full ${getConfidenceColor(analysisResult.confidence)}`}>\n                    {Math.round(analysisResult.confidence * 100)}%\n                  </span>\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-3\">\n                <div className=\"bg-white/60 rounded-xl p-3 border border-emerald-200/50 shadow-sm\">\n                  <div className=\"text-lg font-bold text-emerald-700\">{analysisResult.flaggedWords.length}</div>\n                  <div className=\"text-xs text-emerald-600 font-medium\">Issues Found</div>\n                </div>\n                <div className=\"bg-white/60 rounded-xl p-3 border border-blue-200/50 shadow-sm\">\n                  <div className=\"text-lg font-bold text-blue-700\">\n                    {new Set(analysisResult.flaggedWords.map(fw => fw.category)).size}\n                  </div>\n                  <div className=\"text-xs text-blue-600 font-medium\">Categories</div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Content */}\n        <div className=\"flex-1 overflow-y-auto p-6 space-y-4 custom-scrollbar\">\n          {isAnalyzing && (\n            <div className=\"flex items-center justify-center py-12\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin mx-auto mb-4\"></div>\n                <p className=\"text-gray-600 font-medium\">Analyzing text for bias...</p>\n                <p className=\"text-sm text-gray-500 mt-1\">This may take a moment</p>\n              </div>\n            </div>\n          )}\n\n          {!isAnalyzing && (!analysisResult || analysisResult.flaggedWords.length === 0) && (\n            <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n              <div className=\"w-20 h-20 bg-gradient-to-r from-green-100 to-emerald-100 rounded-full flex items-center justify-center mb-4 shadow-lg\">\n                <svg className=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\n                {analysisResult ? 'No Issues Found!' : 'Ready to Analyze'}\n              </h3>\n              <p className=\"text-gray-600 text-sm leading-relaxed\">\n                {analysisResult \n                  ? 'Your text looks great! No bias or problematic language detected.'\n                  : 'Enter some text and click \"Analyze Text\" to get started.'\n                }\n              </p>\n            </div>\n          )}\n\n          {!isAnalyzing && analysisResult && analysisResult.flaggedWords.length > 0 && (\n            <div className=\"space-y-4\">\n              {analysisResult.flaggedWords.map((issue, index) => {\n                const categoryStyle = getCategoryColor(issue.category);\n                const isExpanded = expandedIssues.has(index);\n                \n                return (\n                  <div \n                    key={index} \n                    className={`${categoryStyle.bg} ${categoryStyle.border} border-2 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 cursor-pointer overflow-hidden`}\n                    onClick={() => {\n                      toggleIssueExpansion(index);\n                      handleIssueClick(issue);\n                    }}\n                  >\n                    <div className=\"p-4\">\n                      <div className=\"flex items-start justify-between mb-3\">\n                        <div className=\"flex items-center gap-3\">\n                          <div className={`${categoryStyle.badge} w-8 h-8 rounded-full flex items-center justify-center text-white font-bold shadow-md`}>\n                            {categoryStyle.icon}\n                          </div>\n                          <div>\n                            <h4 className={`font-bold ${categoryStyle.text} text-sm`}>\n                              \"{issue.word}\"\n                            </h4>\n                            <p className={`text-xs ${categoryStyle.text} opacity-80 capitalize font-medium`}>\n                              {issue.category.replace('_', ' ')}\n                            </p>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <span className={`text-xs font-bold px-2 py-1 rounded-full ${getConfidenceColor(issue.confidence)}`}>\n                            {Math.round(issue.confidence * 100)}%\n                          </span>\n                          <svg \n                            className={`w-5 h-5 ${categoryStyle.text} transition-transform duration-200 ${isExpanded ? 'rotate-180' : ''}`} \n                            fill=\"none\" \n                            stroke=\"currentColor\" \n                            viewBox=\"0 0 24 24\"\n                          >\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                          </svg>\n                        </div>\n                      </div>\n\n                      {isExpanded && (\n                        <div className=\"space-y-4 animate-fadeIn\">\n                          <div className=\"bg-white/70 rounded-xl p-4 shadow-sm\">\n                            <h5 className=\"font-semibold text-gray-800 text-sm mb-2 flex items-center gap-2\">\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                              </svg>\n                              Why this is problematic:\n                            </h5>\n                            <p className=\"text-gray-700 text-sm leading-relaxed\">\n                              {issue.explanation}\n                            </p>\n                          </div>\n\n                          <div className=\"space-y-2\">\n                            <h5 className=\"font-semibold text-gray-800 text-sm flex items-center gap-2\">\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                              </svg>\n                              Suggested alternatives:\n                            </h5>\n                            <div className=\"space-y-2\">\n                              {issue.suggestions.map((suggestion, suggestionIndex) => (\n                                <button\n                                  key={suggestionIndex}\n                                  onClick={(e) => {\n                                    e.stopPropagation();\n                                    handleWordReplace(issue.word, suggestion.word);\n                                  }}\n                                  className=\"w-full text-left p-3 bg-white/80 hover:bg-white rounded-xl border border-gray-200/50 hover:border-gray-300 transition-all duration-200 group shadow-sm hover:shadow-md\"\n                                >\n                                  <div className=\"flex items-center justify-between\">\n                                    <div className=\"flex-1\">\n                                      <span className=\"font-semibold text-gray-800 text-sm\">\n                                        \"{suggestion.word}\"\n                                      </span>\n                                      <div className=\"flex items-center gap-2 mt-1\">\n                                        <span className={`text-xs font-medium px-2 py-1 rounded-full ${getConfidenceColor(suggestion.confidence)}`}>\n                                          {Math.round(suggestion.confidence * 100)}% match\n                                        </span>\n                                      </div>\n                                      <p className=\"text-xs text-gray-600 mt-1\">\n                                        {suggestion.reason}\n                                      </p>\n                                    </div>\n                                    <svg className=\"w-5 h-5 text-gray-400 group-hover:text-blue-600 transition-colors duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                                    </svg>\n                                  </div>\n                                </button>\n                              ))}\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1457, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/BiasDetectionApp.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from 'react';\nimport { AnalysisResponse, AnalysisRequest, ClauseAnalysis } from '@/types';\nimport { analyzeText, convertToFlaggedWords } from '@/lib/api';\nimport Header from './Header';\nimport TextInput from './TextInput';\nimport { IssuesPanel } from './IssuesPanel';\n\nexport function BiasDetectionApp() {\n  const [text, setText] = useState('');\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResponse | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [highlightedClause, setHighlightedClause] = useState<ClauseAnalysis | null>(null);\n\n  const handleAnalyze = useCallback(async () => {\n    if (!text.trim()) {\n      setError('Please enter some text to analyze');\n      return;\n    }\n\n    setIsAnalyzing(true);\n    setError(null);\n    setHighlightedClause(null);\n\n    try {\n      const request: AnalysisRequest = {\n        text: text.trim(),\n        confidence_threshold: 0.6\n      };\n\n      const result = await analyzeText(request);\n      setAnalysisResult(result);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred during analysis');\n      setAnalysisResult(null);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  }, [text]);\n\n  const handleClearText = useCallback(() => {\n    setText('');\n    setAnalysisResult(null);\n    setError(null);\n    setHighlightedClause(null);\n  }, []);\n\n  const handleClauseClick = useCallback((clause: ClauseAnalysis) => {\n    setHighlightedClause(clause);\n  }, []);\n\n  const handleRemoveClause = useCallback((clause: ClauseAnalysis) => {\n    const newText = text.replace(clause.clause, '[content removed]');\n    setText(newText);\n    \n    // Update analysis result to remove the clause\n    if (analysisResult) {\n      const updatedClauses = analysisResult.hate_speech_clauses.filter(\n        c => c.clause !== clause.clause\n      );\n      setAnalysisResult({\n        ...analysisResult,\n        hate_speech_clauses: updatedClauses,\n        original_text: newText,\n        summary: {\n          ...analysisResult.summary,\n          total_hate_speech_clauses: updatedClauses.length\n        }\n      });\n    }\n  }, [text, analysisResult]);\n\n  // Create highlighted text with proper formatting\n  const getHighlightedText = () => {\n    if (!analysisResult || analysisResult.hate_speech_clauses.length === 0) {\n      return text;\n    }\n\n    let highlightedText = text;\n    const hateSpeechClauses = [...analysisResult.hate_speech_clauses]\n      .filter(clause => clause.is_hate_speech)\n      .sort((a, b) => b.clause.length - a.clause.length); // Sort by length to avoid partial replacements\n    \n    hateSpeechClauses.forEach((clause) => {\n      const isHighlighted = highlightedClause?.clause === clause.clause;\n      const highlightClass = isHighlighted \n        ? 'bg-red-200 border-2 border-red-400 px-2 py-1 rounded font-medium cursor-pointer'\n        : 'bg-yellow-200 px-2 py-1 rounded cursor-pointer hover:bg-yellow-300';\n      \n      const regex = new RegExp(clause.clause.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'gi');\n      highlightedText = highlightedText.replace(regex, \n        `<span class=\"${highlightClass}\" data-clause=\"${clause.clause}\">${clause.clause}</span>`\n      );\n    });\n\n    return highlightedText;\n  };\n\n  const handleWordReplace = useCallback((originalWord: string, newWord: string) => {\n    const newText = text.replace(new RegExp(`\\\\b${originalWord}\\\\b`, 'g'), newWord);\n    setText(newText);\n    \n    // Update analysis result to reflect the change\n    if (analysisResult) {\n      const updatedClauses = analysisResult.hate_speech_clauses.map(clause => {\n        if (clause.clause.includes(originalWord)) {\n          return {\n            ...clause,\n            clause: clause.clause.replace(new RegExp(`\\\\b${originalWord}\\\\b`, 'g'), newWord)\n          };\n        }\n        return clause;\n      });\n      \n      setAnalysisResult({\n        ...analysisResult,\n        hate_speech_clauses: updatedClauses,\n        original_text: newText\n      });\n    }\n  }, [text, analysisResult]);\n\n  // Convert analysis result to flagged words format for IssuesPanel compatibility\n  const flaggedWords = analysisResult ? convertToFlaggedWords(analysisResult) : [];\n\n  const handleIssueClick = useCallback((issue: { word: string }) => {\n    // Find the corresponding clause for the flagged word\n    const clause = analysisResult?.hate_speech_clauses.find(c => \n      c.clause.includes(issue.word) && c.is_hate_speech\n    );\n    if (clause) {\n      setHighlightedClause(clause);\n    }\n  }, [analysisResult]);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50\">\n      <Header />\n      \n      {/* Main Content - Two Column Layout */}\n      <main className=\"w-full h-[calc(100vh-80px)]\">\n        <div className=\"flex h-full\">\n          {/* Left Column - Input and Text Display */}\n          <div className=\"flex-1 overflow-y-auto\">\n            <div className=\"max-w-4xl mx-auto p-6 lg:p-8\">\n              {/* Description */}\n              <div className=\"mb-8\">\n                <p className=\"text-lg text-gray-600\">\n                  Analyze text for hate speech and get detailed explanations with AI-powered rationale\n                </p>\n              </div>\n\n              {/* Input Section */}\n              <div className=\"mb-8\">\n                <div className=\"bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/20 p-1\">\n                  <TextInput\n                    value={text}\n                    onChange={setText}\n                    onClear={handleClearText}\n                    onAnalyze={handleAnalyze}\n                    isAnalyzing={isAnalyzing}\n                    error={error}\n                    placeholder=\"Type or paste your text here...\"\n                    label=\"Enter text to analyze\"\n                    maxLength={5000}\n                    showCharacterCount={true}\n                    showClearButton={true}\n                    showAnalyzeButton={true}\n                    analyzeButtonText=\"Analyze for Hate Speech\"\n                    clearButtonText=\"Clear\"\n                  />\n                </div>\n              </div>\n\n              {/* Analysis Results Summary */}\n              {analysisResult && (\n                <div className=\"mb-6 bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Analysis Results</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold text-blue-600\">{analysisResult.total_clauses}</div>\n                      <div className=\"text-sm text-gray-600\">Total Clauses</div>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold text-red-600\">{analysisResult.summary.total_hate_speech_clauses}</div>\n                      <div className=\"text-sm text-gray-600\">Hate Speech Detected</div>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold text-yellow-600\">\n                        {(analysisResult.summary.highest_confidence * 100).toFixed(1)}%\n                      </div>\n                      <div className=\"text-sm text-gray-600\">Highest Confidence</div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Text Display with Highlighting */}\n              {text && (\n                <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl border border-white/30 p-8 transition-all duration-300 hover:shadow-2xl\">\n                  <div className=\"flex items-center justify-between mb-6\">\n                    <h3 className=\"text-xl font-semibold text-gray-800 flex items-center gap-2\">\n                      {analysisResult ? (\n                        <>\n                          <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n                          Analyzed Text\n                        </>\n                      ) : (\n                        <>\n                          <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n                          Current Text\n                        </>\n                      )}\n                    </h3>\n                    {analysisResult && (\n                      <button\n                        onClick={() => navigator.clipboard.writeText(text)}\n                        className=\"inline-flex items-center px-4 py-2 bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-xl text-sm font-medium hover:from-blue-600 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-200 shadow-lg hover:shadow-xl\"\n                      >\n                        <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                        </svg>\n                        Copy Text\n                      </button>\n                    )}\n                  </div>\n                  \n                  <div className=\"prose max-w-none\">\n                    <div \n                      className=\"text-gray-900 leading-relaxed whitespace-pre-wrap\"\n                      dangerouslySetInnerHTML={{ __html: getHighlightedText() }}\n                      onClick={(e) => {\n                        const target = e.target as HTMLElement;\n                        if (target.hasAttribute('data-clause')) {\n                          const clauseText = target.getAttribute('data-clause');\n                          const clause = analysisResult?.hate_speech_clauses.find(c => c.clause === clauseText);\n                          if (clause) {\n                            handleClauseClick(clause);\n                          }\n                        }\n                      }}\n                    />\n                  </div>\n\n                  {/* Legend */}\n                  {analysisResult && analysisResult.hate_speech_clauses.some(c => c.is_hate_speech) && (\n                    <div className=\"mt-6 pt-6 border-t border-gray-200/50\">\n                      <div className=\"flex items-center gap-6 text-sm text-gray-600\">\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"bg-gradient-to-r from-yellow-200 to-amber-200 px-3 py-1 rounded-full text-xs font-medium shadow-sm\">highlighted</span>\n                          <span className=\"font-medium\">Hate speech detected</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"bg-gradient-to-r from-red-200 to-pink-200 border-2 border-red-400 px-3 py-1 rounded-full text-xs font-medium shadow-sm\">highlighted</span>\n                          <span className=\"font-medium\">Currently selected</span>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {/* Selected Clause Details */}\n              {highlightedClause && (\n                <div className=\"mt-6 bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Selected Clause Analysis</h3>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-700 mb-2\">Clause:</div>\n                      <div className=\"bg-gray-50 rounded-lg p-3 text-gray-900\">\"{highlightedClause.clause}\"</div>\n                    </div>\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-700 mb-2\">Justification:</div>\n                      <div className=\"bg-gray-50 rounded-lg p-3 text-gray-900\">{highlightedClause.justification}</div>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-700 mb-2\">Confidence:</div>\n                        <div className=\"text-2xl font-bold text-red-600\">{(highlightedClause.confidence * 100).toFixed(1)}%</div>\n                      </div>\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-700 mb-2\">Hate Speech Probability:</div>\n                        <div className=\"text-2xl font-bold text-orange-600\">{(highlightedClause.hate_speech_probability * 100).toFixed(1)}%</div>\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-sm font-medium text-gray-700 mb-2\">Key Rationale Tokens:</div>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {highlightedClause.rationale_tokens\n                          .filter(token => token.is_rationale && token.confidence > 0.1)\n                          .map((token, index) => (\n                            <span\n                              key={index}\n                              className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800\"\n                            >\n                              {token.token.replace('##', '')} ({(token.confidence * 100).toFixed(0)}%)\n                            </span>\n                          ))}\n                      </div>\n                    </div>\n                    <div className=\"flex gap-2\">\n                      <button\n                        onClick={() => handleRemoveClause(highlightedClause)}\n                        className=\"px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors\"\n                      >\n                        Remove This Clause\n                      </button>\n                      <button\n                        onClick={() => setHighlightedClause(null)}\n                        className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition-colors\"\n                      >\n                        Close Details\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Right Column - Issues Panel */}\n          <div className=\"hidden lg:block flex-shrink-0\">\n            <IssuesPanel\n              analysisResult={analysisResult ? {\n                originalText: analysisResult.original_text,\n                flaggedWords: flaggedWords,\n                analysisId: `analysis-${Date.now()}`,\n                timestamp: new Date().toISOString(),\n                confidence: analysisResult.summary.highest_confidence\n              } as any : null}\n              isAnalyzing={isAnalyzing}\n              onWordReplace={handleWordReplace}\n              onIssueClick={handleIssueClick}\n            />\n          </div>\n        </div>\n\n        {/* Mobile Issues Panel */}\n        <div className=\"lg:hidden\">\n          {(analysisResult || isAnalyzing) && (\n            <div className=\"border-t border-gray-200 bg-white\">\n              <IssuesPanel\n                analysisResult={analysisResult ? {\n                  originalText: analysisResult.original_text,\n                  flaggedWords: flaggedWords,\n                  analysisId: `analysis-${Date.now()}`,\n                  timestamp: new Date().toISOString(),\n                  confidence: analysisResult.summary.highest_confidence\n                } as any : null}\n                isAnalyzing={isAnalyzing}\n                onWordReplace={handleWordReplace}\n                onIssueClick={handleIssueClick}\n              />\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}