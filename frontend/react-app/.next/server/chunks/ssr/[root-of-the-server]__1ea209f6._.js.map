{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/AuthContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { User } from '../lib/auth';\n\ninterface AuthContextType {\n  user: User | null;\n  isLoading: boolean;\n  login: (user: User) => void;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for saved user in localStorage\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = (userData: User) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, isLoading, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAYA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uCAAuC;QACvC,MAAM,YAAY,aAAa,OAAO,CAAC;QACvC,IAAI,WAAW;YACb,IAAI;gBACF,QAAQ,KAAK,KAAK,CAAC;YACrB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,aAAa,UAAU,CAAC;YAC1B;QACF;QACA,aAAa;IACf,GAAG,EAAE;IAEL,MAAM,QAAQ,CAAC;QACb,QAAQ;QACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;IAC9C;IAEA,MAAM,SAAS;QACb,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAW;YAAO;QAAO;kBAC3D;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/lib/auth.ts"],"sourcesContent":["const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\n\nexport interface AuthResponse {\n  success: boolean;\n  message: string;\n  user_id?: number;\n  token?: string;\n}\n\nexport interface User {\n  id: number;\n  email: string;\n  name: string;\n  token: string;\n}\n\nexport async function signup(email: string, password: string, name: string): Promise<AuthResponse> {\n  try {\n    const response = await fetch(`${API_URL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password, name }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Signup failed');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Signup error:', error);\n    return {\n      success: false,\n      message: 'Network error during signup',\n    };\n  }\n}\n\nexport async function login(email: string, password: string): Promise<AuthResponse> {\n  try {\n    const response = await fetch(`${API_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Login failed');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Login error:', error);\n    return {\n      success: false,\n      message: 'Network error during login',\n    };\n  }\n}\n"],"names":[],"mappings":";;;;AAAA,MAAM,UAAU,6DAAmC;AAgB5C,eAAe,OAAO,KAAa,EAAE,QAAgB,EAAE,IAAY;IACxE,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,OAAO,CAAC,EAAE;YAChD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;gBAAU;YAAK;QAC/C;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;AACF;AAEO,eAAe,MAAM,KAAa,EAAE,QAAgB;IACzD,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,MAAM,CAAC,EAAE;YAC/C,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAS;QACzC;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;AACF","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/AuthForm.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { signup, login as apiLogin } from '../lib/auth';\nimport { useAuth } from './AuthContext';\n\ninterface AuthFormProps {\n  onClose: () => void;\n}\n\nexport default function AuthForm({ onClose }: AuthFormProps) {\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { login } = useAuth();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n\n    try {\n      if (isLogin) {\n        const response = await apiLogin(email, password);\n        if (response.success && response.user_id && response.token) {\n          login({\n            id: response.user_id,\n            email,\n            name: email.split('@')[0] || 'User', // Simple name extraction\n            token: response.token,\n          });\n          onClose();\n        } else {\n          setError(response.message || 'Login failed');\n        }\n      } else {\n        const response = await signup(email, password, name);\n        if (response.success && response.user_id && response.token) {\n          login({\n            id: response.user_id,\n            email,\n            name,\n            token: response.token,\n          });\n          onClose();\n        } else {\n          setError(response.message || 'Signup failed');\n        }\n      }\n    } catch (err) {\n      setError('An unexpected error occurred');\n      console.error('Auth error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-50 bg-opacity-95 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-xl shadow-2xl p-8 max-w-md w-full mx-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-8 h-8 bg-red-500 rounded-lg flex items-center justify-center\">\n              <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">\n              {isLogin ? 'Sign In' : 'Sign Up'}\n            </h2>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 text-2xl w-8 h-8 flex items-center justify-center rounded-full hover:bg-gray-100 transition-colors\"\n          >\n            ×\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          {!isLogin && (\n            <div>\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Name\n              </label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required={!isLogin}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 placeholder-gray-500 text-gray-900\"\n                placeholder=\"Enter your name\"\n              />\n            </div>\n          )}\n\n          <div>\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Email\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 placeholder-gray-500 text-gray-900\"\n              placeholder=\"Enter your email\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 placeholder-gray-500 text-gray-900\"\n              placeholder=\"Enter your password\"\n            />\n          </div>\n\n          {error && (\n            <div className=\"text-red-600 text-sm bg-red-50 p-3 rounded-md\">\n              {error}\n            </div>\n          )}\n\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"w-full bg-red-500 text-white py-3 px-4 rounded-md hover:bg-red-600 disabled:opacity-50 disabled:cursor-not-allowed font-medium transition-all duration-200\"\n          >\n            {isLoading ? (\n              <div className=\"flex items-center justify-center gap-2\">\n                <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                Loading...\n              </div>\n            ) : (isLogin ? 'Sign In' : 'Sign Up')}\n          </button>\n        </form>\n\n        <div className=\"mt-6 text-center\">\n          <div className=\"relative\">\n            <div className=\"absolute inset-0 flex items-center\">\n              <div className=\"w-full border-t border-gray-300\"></div>\n            </div>\n            <div className=\"relative flex justify-center text-sm\">\n              <span className=\"px-2 bg-white text-gray-500\">or</span>\n            </div>\n          </div>\n          <button\n            onClick={() => setIsLogin(!isLogin)}\n            className=\"mt-4 text-red-500 hover:text-red-700 text-sm font-medium\"\n          >\n            {isLogin ? \"Don't have an account? Sign up\" : \"Already have an account? Sign in\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/lib/api.ts"],"sourcesContent":["import { AnalysisRequest, AnalysisResponse, FlaggedWord } from '@/types';\n\n// Base URL for the backend API\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\n\n/**\n * Analyzes text for hate speech using the backend API\n * @param request - The analysis request containing text and optional confidence threshold\n * @returns Promise<AnalysisResponse> - The analysis results\n */\nexport async function analyzeText(request: AnalysisRequest): Promise<AnalysisResponse> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/analyze`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        text: request.text,\n        confidence_threshold: request.confidence_threshold || 0.6,\n      }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error analyzing text:', error);\n    throw error instanceof Error ? error : new Error('Failed to analyze text');\n  }\n}\n\n/**\n * Converts analysis results to flagged words format for backward compatibility\n * @param analysisResult - The analysis response from the backend\n * @returns FlaggedWord[] - Array of flagged words\n */\nexport function convertToFlaggedWords(analysisResult: AnalysisResponse): FlaggedWord[] {\n  const flaggedWords: FlaggedWord[] = [];\n  \n  analysisResult.hate_speech_clauses.forEach((clause) => {\n    // Extract individual words from rationale tokens that are marked as rationale\n    clause.rationale_tokens.forEach((token) => {\n      if (token.is_rationale && token.token.trim().length > 0) {\n        // Find the position of this token in the original text\n        const originalText = analysisResult.original_text;\n        const tokenText = token.token.trim();\n        \n        // Search for the token in the original text\n        const startIndex = originalText.toLowerCase().indexOf(tokenText.toLowerCase());\n        \n        // If we can't find the exact token, skip it\n        if (startIndex === -1) return;\n        \n        const endIndex = startIndex + tokenText.length;\n        \n        flaggedWords.push({\n          word: tokenText,\n          startIndex,\n          endIndex,\n          category: 'hate_speech',\n          confidence: token.confidence,\n          suggestions: [\n            {\n              word: '[Consider rephrasing]',\n              confidence: 0.8,\n              reason: clause.justification,\n            },\n          ],\n          explanation: clause.justification,\n        });\n      }\n    });\n  });\n\n  return flaggedWords;\n}\n\n/**\n * Health check for the API\n * @returns Promise<boolean> - True if API is healthy\n */\nexport async function checkApiHealth(): Promise<boolean> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/`);\n    return response.ok;\n  } catch (error) {\n    console.error('API health check failed:', error);\n    return false;\n  }\n}\n\n/**\n * Simple analysis endpoint for basic use cases\n * @param text - The text to analyze\n * @returns Promise<unknown> - Simplified analysis results\n */\nexport async function analyzeSimple(text: string): Promise<unknown> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/analyze-simple`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ text }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error in simple analysis:', error);\n    throw error instanceof Error ? error : new Error('Failed to analyze text');\n  }\n}\n\n/**\n * Save analysis result to the database\n * @param text - The analyzed text\n * @param result - The analysis result\n * @param title - Optional title for the analysis\n * @returns Promise<boolean> - Success status\n */\nexport async function saveAnalysis(text: string, result: any, title?: string): Promise<boolean> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/save-analysis`, {\n      method: 'POST',\n      headers: createAuthHeaders(),\n      body: JSON.stringify({ text, result, title }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data.success;\n  } catch (error) {\n    console.error('Error saving analysis:', error);\n    return false;\n  }\n}\n\n/**\n * Get saved analyses for the authenticated user\n * @returns Promise<SavedAnalysis[]> - Array of saved analyses\n */\nexport async function getSavedAnalyses(): Promise<SavedAnalysis[]> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/saved-analyses`, {\n      method: 'GET',\n      headers: createAuthHeaders(),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error getting saved analyses:', error);\n    return [];\n  }\n}\n\n/**\n * Delete a saved analysis\n * @param analysisId - The ID of the analysis to delete\n * @returns Promise<boolean> - Success status\n */\nexport async function deleteAnalysis(analysisId: number): Promise<boolean> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/delete-analysis/${analysisId}`, {\n      method: 'DELETE',\n      headers: createAuthHeaders(),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data.success;\n  } catch (error) {\n    console.error('Error deleting analysis:', error);\n    return false;\n  }\n}\n\n// Auth interfaces\ninterface AuthRequest {\n  email: string;\n  password: string;\n  name?: string;\n}\n\ninterface AuthResponse {\n  success: boolean;\n  message: string;\n  user_id?: number;\n  token?: string;\n}\n\ninterface SavedAnalysis {\n  id: number;\n  user_id: number;\n  text: string;\n  result: any;\n  title?: string;\n  created_at: string;\n}\n\n/**\n * Get auth token from localStorage\n */\nfunction getAuthToken(): string | null {\n  if (typeof window !== 'undefined') {\n    return localStorage.getItem('auth_token');\n  }\n  return null;\n}\n\n/**\n * Create auth headers\n */\nfunction createAuthHeaders(): HeadersInit {\n  const token = getAuthToken();\n  const headers: HeadersInit = {\n    'Content-Type': 'application/json',\n  };\n  \n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  \n  return headers;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 649, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/Header.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useAuth } from './AuthContext';\nimport AuthForm from './AuthForm';\n\ninterface HeaderProps {\n  onBack?: (() => void) | undefined;\n}\n\nexport default function Header({ onBack }: HeaderProps) {\n  const [showAuthForm, setShowAuthForm] = useState(false);\n  const { user, logout } = useAuth();\n\n  return (\n    <>\n      <header className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-20\">\n            <div className=\"flex items-center gap-4\">\n              {onBack && (\n                <button\n                  onClick={onBack}\n                  className=\"flex items-center gap-2 text-gray-700 hover:text-gray-900 font-medium px-4 py-2 transition-colors\"\n                >\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                  </svg>\n                  Back to Dashboard\n                </button>\n              )}\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-10 h-10 bg-red-500 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                  </svg>\n                </div>\n                <div>\n                  <h1 className=\"text-2xl font-bold text-gray-800\">\n                    HateZero\n                  </h1>\n                  <p className=\"text-sm text-gray-600 font-medium\">\n                    AI-powered content analysis\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center gap-4\">\n              {user ? (\n                <div className=\"flex items-center gap-3\">\n                  <button\n                    onClick={() => window.location.href = '/'}\n                    className=\"text-gray-700 hover:text-gray-900 font-medium px-4 py-2 transition-colors\"\n                  >\n                    Dashboard\n                  </button>\n                  <button\n                    onClick={logout}\n                    className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors\"\n                  >\n                    Sign Out\n                  </button>\n                </div>\n              ) : (\n                <div className=\"flex items-center space-x-4\">\n                  <button\n                    onClick={() => setShowAuthForm(true)}\n                    className=\"text-gray-700 hover:text-gray-900 font-medium px-4 py-2 transition-colors\"\n                  >\n                    Sign In\n                  </button>\n                  <button\n                    onClick={() => setShowAuthForm(true)}\n                    className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors\"\n                  >\n                    Sign Up\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </header>\n      \n      {showAuthForm && (\n        <AuthForm onClose={() => setShowAuthForm(false)} />\n      )}\n    </>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAUe,SAAS,OAAO,EAAE,MAAM,EAAe;IACpD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAE/B,qBACE;;0BACE,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;oCACZ,wBACC,8OAAC;wCACC,SAAS;wCACT,WAAU;;0DAEV,8OAAC;gDAAI,WAAU;gDAAU,MAAK;gDAAO,QAAO;gDAAe,SAAQ;0DACjE,cAAA,8OAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAa;oDAAG,GAAE;;;;;;;;;;;4CACjE;;;;;;;kDAIV,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAI,WAAU;oDAAqB,MAAK;oDAAO,QAAO;oDAAe,SAAQ;8DAC5E,cAAA,8OAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAG,GAAE;;;;;;;;;;;;;;;;0DAGzE,8OAAC;;kEACC,8OAAC;wDAAG,WAAU;kEAAmC;;;;;;kEAGjD,8OAAC;wDAAE,WAAU;kEAAoC;;;;;;;;;;;;;;;;;;;;;;;;0CAOvD,8OAAC;gCAAI,WAAU;0CACZ,qBACC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,SAAS,IAAM,OAAO,QAAQ,CAAC,IAAI,GAAG;4CACtC,WAAU;sDACX;;;;;;sDAGD,8OAAC;4CACC,SAAS;4CACT,WAAU;sDACX;;;;;;;;;;;yDAKH,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CACC,SAAS,IAAM,gBAAgB;4CAC/B,WAAU;sDACX;;;;;;sDAGD,8OAAC;4CACC,SAAS,IAAM,gBAAgB;4CAC/B,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAUZ,8BACC,8OAAC,8HAAA,CAAA,UAAQ;gBAAC,SAAS,IAAM,gBAAgB;;;;;;;;AAIjD","debugId":null}},
    {"offset": {"line": 865, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/TextInput.tsx"],"sourcesContent":["import { ChangeEvent, useState, useEffect, useCallback, useMemo, useRef } from 'react';\n\nexport interface ValidationRule {\n  type: 'minLength' | 'maxLength' | 'required' | 'custom';\n  value?: number;\n  message: string;\n  validator?: (text: string) => boolean;\n}\n\nexport interface TextInputProps {\n  value: string;\n  onChange: (value: string) => void;\n  onClear?: () => void;\n  onAnalyze?: () => void;\n  placeholder?: string;\n  disabled?: boolean;\n  isAnalyzing?: boolean;\n  error?: string | null;\n  label?: string;\n  maxLength?: number;\n  minLength?: number;\n  className?: string;\n  showCharacterCount?: boolean;\n  showClearButton?: boolean;\n  showAnalyzeButton?: boolean;\n  analyzeButtonText?: string;\n  clearButtonText?: string;\n  validateOnChange?: boolean;\n  validationRules?: ValidationRule[];\n  onValidationChange?: (isValid: boolean, errors: string[]) => void;\n  confirmClearThreshold?: number; // Characters threshold for showing confirmation dialog\n  showClearConfirmation?: boolean;\n}\n\n// Default empty validation rules (stable reference)\nconst DEFAULT_VALIDATION_RULES: ValidationRule[] = [];\n\nexport default function TextInput({\n  value,\n  onChange,\n  onClear,\n  onAnalyze,\n  placeholder = \"Type or paste your text here...\",\n  disabled = false,\n  isAnalyzing = false,\n  error = null,\n  label = \"Enter text to analyze\",\n  maxLength = 5000,\n  minLength = 5,\n  className = \"\",\n  showCharacterCount = true,\n  showClearButton = true,\n  showAnalyzeButton = true,\n  analyzeButtonText = \"Analyze Text\",\n  clearButtonText = \"Clear\",\n  validateOnChange = true,\n  validationRules = DEFAULT_VALIDATION_RULES,\n  onValidationChange,\n  confirmClearThreshold = 50,\n  showClearConfirmation = true\n}: TextInputProps) {\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\n  const [isValid, setIsValid] = useState(true);\n  const [showConfirmDialog, setShowConfirmDialog] = useState<boolean>(false);\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  // Combine default rules with custom rules\n  const allRules = useMemo(() => {\n    const defaultRules: ValidationRule[] = [\n      {\n        type: 'required',\n        message: 'Text is required',\n        validator: (text: string) => text.trim().length > 0\n      },\n      {\n        type: 'minLength',\n        value: minLength,\n        message: `Text must be at least ${minLength} characters long`,\n        validator: (text: string) => text.trim().length >= minLength\n      },\n      {\n        type: 'maxLength',\n        value: maxLength,\n        message: `Text must not exceed ${maxLength} characters`,\n        validator: (text: string) => text.length <= maxLength\n      }\n    ];\n\n    return [...defaultRules, ...validationRules];\n  }, [minLength, maxLength, validationRules]);\n\n  // Validation function\n  const validateText = useCallback((text: string): { isValid: boolean; errors: string[] } => {\n    const errors: string[] = [];\n    \n    for (const rule of allRules) {\n      let isRuleValid = false;\n      \n      switch (rule.type) {\n        case 'required':\n          isRuleValid = text.trim().length > 0;\n          break;\n        case 'minLength':\n          isRuleValid = text.trim().length === 0 || text.trim().length >= (rule.value || minLength);\n          break;\n        case 'maxLength':\n          isRuleValid = text.length <= (rule.value || maxLength);\n          break;\n        case 'custom':\n          isRuleValid = rule.validator ? rule.validator(text) : true;\n          break;\n        default:\n          isRuleValid = true;\n      }\n      \n      if (!isRuleValid) {\n        errors.push(rule.message);\n      }\n    }\n    \n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }, [allRules, minLength, maxLength]);\n\n  // Effect to validate on value change\n  useEffect(() => {\n    if (validateOnChange) {\n      const { isValid: valid, errors } = validateText(value);\n      setIsValid(valid);\n      setValidationErrors(errors);\n    }\n  }, [value, validateOnChange, validateText]);\n\n  // Effect to notify parent of validation changes\n  useEffect(() => {\n    if (onValidationChange && validateOnChange) {\n      onValidationChange(isValid, validationErrors);\n    }\n  }, [isValid, validationErrors, onValidationChange, validateOnChange]);\n\n  const handleTextChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    onChange(e.target.value);\n  };\n\n  const handleConfirmClear = useCallback(() => {\n    setShowConfirmDialog(false);\n    if (onClear) {\n      onClear();\n    }\n  }, [onClear]);\n\n  const handleCancelClear = useCallback(() => {\n    setShowConfirmDialog(false);\n  }, []);\n\n  const handleClearClick = () => {\n    // Check if we need to show confirmation dialog\n    if (showClearConfirmation && value.length >= confirmClearThreshold) {\n      setShowConfirmDialog(true);\n    } else {\n      // Clear immediately if no confirmation needed\n      if (onClear) {\n        onClear();\n      }\n    }\n  };\n\n  const handleAnalyzeClick = () => {\n    if (onAnalyze) {\n      onAnalyze();\n    }\n  };\n\n  // Effect to handle keyboard events and click outside for confirmation dialog\n  useEffect(() => {\n    if (showConfirmDialog) {\n      const handleKeyDown = (e: KeyboardEvent) => {\n        if (e.key === 'Escape') {\n          handleCancelClear();\n        } else if (e.key === 'Enter') {\n          handleConfirmClear();\n        }\n      };\n\n      const handleClickOutside = (e: MouseEvent) => {\n        if (dialogRef.current && !dialogRef.current.contains(e.target as Node)) {\n          handleCancelClear();\n        }\n      };\n\n      document.addEventListener('keydown', handleKeyDown);\n      document.addEventListener('mousedown', handleClickOutside);\n\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n    // Return undefined for the else case to satisfy TypeScript\n    return undefined;\n  }, [showConfirmDialog, handleConfirmClear, handleCancelClear]);\n\n  const isAtLimit = value.length >= maxLength;\n  const isNearLimit = value.length >= maxLength * 0.8;\n  const characterCountColor = isAtLimit \n    ? 'text-red-500 font-semibold' \n    : isNearLimit \n      ? 'text-amber-500 font-medium' \n      : 'text-gray-500';\n\n  return (\n    <div className={`h-full ${className}`}>\n      <textarea\n        id=\"text-input\"\n        value={value}\n        onChange={handleTextChange}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        className=\"w-full h-full px-6 py-6 placeholder-gray-400 text-gray-900 focus:outline-none resize-none bg-gray-50 border-0\"\n        disabled={disabled || isAnalyzing}\n      />\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1055, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/IssuesPanel.tsx"],"sourcesContent":["'use client';\n\nimport { AnalysisResponse, FlaggedWord } from '@/types';\nimport { useState } from 'react';\n\ninterface IssuesPanelProps {\n  analysisResult: AnalysisResponse | null;\n  isAnalyzing: boolean;\n  onWordReplace: (originalWord: string, newWord: string) => void;\n  onIssueClick?: (issue: FlaggedWord) => void;\n  // Text input controls\n  text: string;\n  onClear: () => void;\n  onAnalyze: () => void;\n  maxLength: number;\n  // Error handling\n  error?: string | null;\n  validationErrors?: string[];\n}\n\nconst getCategoryColor = (category: string) => {\n  switch (category.toLowerCase()) {\n    case 'gender_bias':\n      return {\n        bg: 'bg-gradient-to-r from-pink-100 to-rose-100',\n        border: 'border-pink-300',\n        text: 'text-pink-800',\n        badge: 'bg-pink-500',\n        icon: '♀'\n      };\n    case 'racial_bias':\n      return {\n        bg: 'bg-gradient-to-r from-orange-100 to-amber-100',\n        border: 'border-orange-300',\n        text: 'text-orange-800',\n        badge: 'bg-orange-500',\n        icon: '⚡'\n      };\n    case 'age_bias':\n      return {\n        bg: 'bg-gradient-to-r from-purple-100 to-violet-100',\n        border: 'border-purple-300',\n        text: 'text-purple-800',\n        badge: 'bg-purple-500',\n        icon: '⏰'\n      };\n    case 'religious_bias':\n      return {\n        bg: 'bg-gradient-to-r from-emerald-100 to-teal-100',\n        border: 'border-emerald-300',\n        text: 'text-emerald-800',\n        badge: 'bg-emerald-500',\n        icon: '☪'\n      };\n    case 'disability_bias':\n      return {\n        bg: 'bg-gradient-to-r from-blue-100 to-indigo-100',\n        border: 'border-blue-300',\n        text: 'text-blue-800',\n        badge: 'bg-blue-500',\n        icon: '♿'\n      };\n    default:\n      return {\n        bg: 'bg-gradient-to-r from-gray-100 to-slate-100',\n        border: 'border-gray-300',\n        text: 'text-gray-800',\n        badge: 'bg-gray-500',\n        icon: '⚠'\n      };\n  }\n};\n\nconst getConfidenceColor = (confidence: number) => {\n  if (confidence >= 0.8) return 'text-red-600 bg-red-100';\n  if (confidence >= 0.6) return 'text-amber-600 bg-amber-100';\n  return 'text-green-600 bg-green-100';\n};\n\nexport function IssuesPanel({ \n  analysisResult, \n  isAnalyzing, \n  onWordReplace,\n  onIssueClick,\n  text,\n  onClear,\n  onAnalyze,\n  maxLength,\n  error,\n  validationErrors = []\n}: IssuesPanelProps) {\n  const [expandedIssues, setExpandedIssues] = useState<Set<number>>(new Set());\n\n  const toggleIssueExpansion = (index: number) => {\n    const newExpanded = new Set(expandedIssues);\n    if (newExpanded.has(index)) {\n      newExpanded.delete(index);\n    } else {\n      newExpanded.add(index);\n    }\n    setExpandedIssues(newExpanded);\n  };\n\n  const handleWordReplace = (originalWord: string, newWord: string) => {\n    onWordReplace(originalWord, newWord);\n  };\n\n  const handleIssueClick = (issue: FlaggedWord) => {\n    if (onIssueClick) {\n      onIssueClick(issue);\n    }\n  };\n\n  return (\n    <div className=\"w-full lg:w-96 h-full bg-white border-l border-gray-200\">\n      <div className=\"h-full flex flex-col\">\n        {/* Header */}\n        <div className=\"sticky top-0 bg-gray-50 border-b border-gray-200 p-4\">\n          <div className=\"flex items-center justify-center\">\n            <h2 className=\"text-xl font-bold text-gray-800\">\n              Issues Found\n            </h2>\n          </div>\n\n          {analysisResult && (\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between p-3 bg-white rounded-lg border border-gray-200\">\n                <span className=\"text-sm font-medium text-gray-700\">Analysis Confidence</span>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"flex-1 bg-gray-200 rounded-full h-2 w-16\">\n                    <div \n                      className=\"bg-red-500 h-2 rounded-full transition-all duration-500\"\n                      style={{ width: `${analysisResult.confidence * 100}%` }}\n                    />\n                  </div>\n                  <span className={`text-xs font-semibold px-2 py-1 rounded-full ${getConfidenceColor(analysisResult.confidence)}`}>\n                    {Math.round(analysisResult.confidence * 100)}%\n                  </span>\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-3\">\n                <div className=\"bg-white rounded-lg p-3 border border-gray-200\">\n                  <div className=\"text-lg font-bold text-emerald-700\">{analysisResult.flaggedWords.length}</div>\n                  <div className=\"text-xs text-emerald-600 font-medium\">Issues Found</div>\n                </div>\n                <div className=\"bg-white rounded-lg p-3 border border-gray-200\">\n                  <div className=\"text-lg font-bold text-red-700\">\n                    {new Set(analysisResult.flaggedWords.map(fw => fw.category)).size}\n                  </div>\n                  <div className=\"text-xs text-red-600 font-medium\">Categories</div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Content */}\n        <div className=\"flex-1 overflow-y-auto p-6 space-y-4 custom-scrollbar\">\n          {isAnalyzing && (\n            <div className=\"flex items-center justify-center py-12\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 border-4 border-red-200 border-t-red-600 rounded-full animate-spin mx-auto mb-4\"></div>\n                <p className=\"text-gray-600 font-medium\">Analyzing text for bias...</p>\n                <p className=\"text-sm text-gray-500 mt-1\">This may take a moment</p>\n              </div>\n            </div>\n          )}\n\n          {!isAnalyzing && (!analysisResult || analysisResult.flaggedWords.length === 0) && (\n            <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n              <div className=\"w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mb-4\">\n                <svg className=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                </svg>\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\n                {analysisResult ? 'No Issues Found!' : 'Ready to Analyze'}\n              </h3>\n              <p className=\"text-gray-600 text-sm leading-relaxed\">\n                {analysisResult \n                  ? 'Your text looks great! No bias or problematic language detected.'\n                  : 'Enter some text and click \"Analyze Text\" to get started.'\n                }\n              </p>\n            </div>\n          )}\n\n          {!isAnalyzing && analysisResult && analysisResult.flaggedWords.length > 0 && (\n            <div className=\"space-y-4\">\n              {analysisResult.flaggedWords.map((issue, index) => {\n                const categoryStyle = getCategoryColor(issue.category);\n                const isExpanded = expandedIssues.has(index);\n                \n                return (\n                  <div \n                    key={index} \n                    className={`${categoryStyle.bg} ${categoryStyle.border} border rounded-lg hover:shadow-sm transition-all duration-300 cursor-pointer overflow-hidden`}\n                    onClick={() => {\n                      toggleIssueExpansion(index);\n                      handleIssueClick(issue);\n                    }}\n                  >\n                    <div className=\"p-4\">\n                      <div className=\"flex items-start justify-between mb-3\">\n                        <div className=\"flex items-center gap-3\">\n                          <div className={`${categoryStyle.badge} w-8 h-8 rounded-full flex items-center justify-center text-white font-bold`}>\n                            {categoryStyle.icon}\n                          </div>\n                          <div>\n                            <h4 className={`font-bold ${categoryStyle.text} text-sm`}>\n                              \"{issue.word}\"\n                            </h4>\n                            <p className={`text-xs ${categoryStyle.text} opacity-80 capitalize font-medium`}>\n                              {issue.category.replace('_', ' ')}\n                            </p>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <span className={`text-xs font-bold px-2 py-1 rounded-full ${getConfidenceColor(issue.confidence)}`}>\n                            {Math.round(issue.confidence * 100)}%\n                          </span>\n                          <svg \n                            className={`w-5 h-5 ${categoryStyle.text} transition-transform duration-200 ${isExpanded ? 'rotate-180' : ''}`} \n                            fill=\"none\" \n                            stroke=\"currentColor\" \n                            viewBox=\"0 0 24 24\"\n                          >\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                          </svg>\n                        </div>\n                      </div>\n\n                      {isExpanded && (                          <div className=\"space-y-4 animate-fadeIn\">\n                            <div className=\"bg-white/70 rounded-lg p-4\">\n                              <h5 className=\"font-semibold text-gray-800 text-sm mb-2 flex items-center gap-2\">\n                                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                                </svg>\n                                Why this is problematic:\n                              </h5>\n                              <p className=\"text-gray-700 text-sm leading-relaxed\">\n                                {issue.explanation}\n                              </p>\n                            </div>\n\n                          <div className=\"space-y-2\">\n                            <h5 className=\"font-semibold text-gray-800 text-sm flex items-center gap-2\">\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                              </svg>\n                              Suggested alternatives:\n                            </h5>\n                            <div className=\"space-y-2\">\n                              {issue.suggestions.map((suggestion, suggestionIndex) => (\n                                <button\n                                  key={suggestionIndex}\n                                  onClick={(e) => {\n                                    e.stopPropagation();\n                                    handleWordReplace(issue.word, suggestion.word);\n                                  }}\n                                  className=\"w-full text-left p-3 bg-white/80 hover:bg-white rounded-lg border border-gray-200 hover:border-gray-300 transition-all duration-200 group\"\n                                >\n                                  <div className=\"flex items-center justify-between\">\n                                    <div className=\"flex-1\">\n                                      <span className=\"font-semibold text-gray-800 text-sm\">\n                                        \"{suggestion.word}\"\n                                      </span>\n                                      <div className=\"flex items-center gap-2 mt-1\">\n                                        <span className={`text-xs font-medium px-2 py-1 rounded-full ${getConfidenceColor(suggestion.confidence)}`}>\n                                          {Math.round(suggestion.confidence * 100)}% match\n                                        </span>\n                                      </div>\n                                      <p className=\"text-xs text-gray-600 mt-1\">\n                                        {suggestion.reason}\n                                      </p>\n                                    </div>\n                                    <svg className=\"w-5 h-5 text-gray-400 group-hover:text-red-600 transition-colors duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                                    </svg>\n                                  </div>\n                                </button>\n                              ))}\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n\n        {/* Text Input Controls */}\n        <div className=\"sticky bottom-0 bg-white border-t border-gray-200 p-6\">\n          <div className=\"space-y-4\">\n            {/* Validation Errors */}\n            {(error || (validationErrors && validationErrors.length > 0)) && (\n              <div className=\"space-y-2\">\n                {error && (\n                  <div className=\"flex items-center gap-2 p-3 bg-red-50 border border-red-200 rounded-lg\">\n                    <svg className=\"w-4 h-4 text-red-500 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    <span className=\"text-sm font-medium text-red-700\">{error}</span>\n                  </div>\n                )}\n                {validationErrors && validationErrors.map((validationError, index) => (\n                  <div key={index} className=\"flex items-center gap-2 p-3 bg-amber-50 border border-amber-200 rounded-lg\">\n                    <svg className=\"w-4 h-4 text-amber-500 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.664-.833-2.464 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                    </svg>\n                    <span className=\"text-sm font-medium text-amber-700\">{validationError}</span>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {/* Character Count */}\n            <div className={`text-sm flex items-center gap-1 ${\n              text.length >= maxLength \n                ? 'text-red-500 font-semibold' \n                : text.length >= maxLength * 0.8 \n                  ? 'text-amber-500 font-medium' \n                  : 'text-gray-500'\n            }`}>\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n              </svg>\n              {text.length} / {maxLength} characters\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex flex-col gap-3\">\n              <button\n                onClick={onClear}\n                disabled={!text || isAnalyzing}\n                className=\"w-full px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n              >\n                Clear Text\n              </button>\n              \n              <button\n                onClick={onAnalyze}\n                disabled={!text.trim() || isAnalyzing}\n                className=\"w-full px-4 py-2 text-sm font-medium text-white bg-red-500 border border-transparent rounded-lg hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n              >\n                {isAnalyzing ? (\n                  <div className=\"flex items-center justify-center gap-2\">\n                    <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\n                    Analyzing...\n                  </div>\n                ) : (\n                  <div className=\"flex items-center justify-center gap-2\">\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                    </svg>\n                    Analyze for Hate Speech\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1928, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/BiasDetectionApp.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback, useEffect } from 'react';\nimport { AnalysisResponse, AnalysisRequest } from '@/types';\nimport { analyzeText, convertToFlaggedWords, saveAnalysis } from '@/lib/api';\nimport Header from './Header';\nimport TextInput from './TextInput';\nimport { IssuesPanel } from './IssuesPanel';\n\ninterface BiasDetectionAppProps {\n  initialText?: string;\n  onBack?: () => void;\n}\n\nexport function BiasDetectionApp({ initialText = '', onBack }: BiasDetectionAppProps) {\n  const [text, setText] = useState(initialText);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResponse | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\n\n  // Set initial text when prop changes\n  useEffect(() => {\n    setText(initialText);\n  }, [initialText]);\n\n  const handleValidationChange = useCallback((isValid: boolean, errors: string[]) => {\n    setValidationErrors(errors);\n  }, []);\n\n  const handleAnalyze = useCallback(async () => {\n    if (!text.trim()) {\n      setError('Please enter some text to analyze');\n      return;\n    }\n\n    setIsAnalyzing(true);\n    setError(null);\n\n    try {\n      const request: AnalysisRequest = {\n        text: text.trim(),\n        confidence_threshold: 0.6\n      };\n\n      const result = await analyzeText(request);\n      setAnalysisResult(result);\n      \n      // Auto-save the analysis to the database\n      try {\n        const title = `Analysis - ${new Date().toLocaleDateString()}`;\n        await saveAnalysis(text.trim(), result, title);\n      } catch (saveError) {\n        console.warn('Failed to save analysis:', saveError);\n        // Don't show error to user for auto-save failure\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred during analysis');\n      setAnalysisResult(null);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  }, [text]);\n\n  const handleClearText = useCallback(() => {\n    setText('');\n    setAnalysisResult(null);\n    setError(null);\n  }, []);\n\n  const handleWordReplace = useCallback((originalWord: string, newWord: string) => {\n    const newText = text.replace(new RegExp(`\\\\b${originalWord}\\\\b`, 'g'), newWord);\n    setText(newText);\n    \n    // Update analysis result to reflect the change\n    if (analysisResult) {\n      const updatedClauses = analysisResult.hate_speech_clauses.map(clause => {\n        if (clause.clause.includes(originalWord)) {\n          return {\n            ...clause,\n            clause: clause.clause.replace(new RegExp(`\\\\b${originalWord}\\\\b`, 'g'), newWord)\n          };\n        }\n        return clause;\n      });\n      \n      setAnalysisResult({\n        ...analysisResult,\n        hate_speech_clauses: updatedClauses,\n        original_text: newText\n      });\n    }\n  }, [text, analysisResult]);\n\n  // Convert analysis result to flagged words format for IssuesPanel compatibility\n  const flaggedWords = analysisResult ? convertToFlaggedWords(analysisResult) : [];\n\n  const handleIssueClick = useCallback((issue: { word: string }) => {\n    // Find the corresponding clause for the flagged word\n    const clause = analysisResult?.hate_speech_clauses.find(c => \n      c.clause.includes(issue.word) && c.is_hate_speech\n    );\n    if (clause) {\n      // Could do something with the clause here if needed\n      console.log('Selected clause:', clause);\n    }\n  }, [analysisResult]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n      {/* Fixed Header */}\n      <div className=\"fixed top-0 left-0 right-0 z-30 bg-white shadow-sm\">\n        <Header onBack={onBack} />\n      </div>\n      \n      {/* Main Content with Fixed Layout */}\n      <div className=\"flex pt-20 h-screen\">\n        {/* Left Column - Text Input Area - Scrollable */}\n        <div className=\"flex-1 overflow-y-auto bg-gray-50 main-scroll-area pr-96 lg:pr-96\">\n          <div className=\"h-full p-6 lg:p-8\">\n            <TextInput\n              value={text}\n              onChange={setText}\n              placeholder=\"Type or paste your text here...\"\n              maxLength={5000}\n              onValidationChange={handleValidationChange}\n            />\n          </div>\n        </div>\n\n        {/* Right Column - Fixed Issues Panel */}\n        <div className=\"fixed top-20 right-0 bottom-0 w-96 hidden lg:block z-20\">            <IssuesPanel\n              analysisResult={analysisResult ? {\n                ...analysisResult,\n                flaggedWords: flaggedWords,\n                analysisId: `analysis-${Date.now()}`,\n                timestamp: new Date().toISOString(),\n                confidence: analysisResult.summary.highest_confidence\n              } as any : null}\n              isAnalyzing={isAnalyzing}\n              onWordReplace={handleWordReplace}\n              onIssueClick={handleIssueClick}\n              text={text}\n              onClear={handleClearText}\n              onAnalyze={handleAnalyze}\n              maxLength={5000}\n              error={error}\n              validationErrors={validationErrors}\n            />\n        </div>\n      </div>\n\n      {/* Mobile Issues Panel */}\n      <div className=\"lg:hidden\">\n        {(analysisResult || isAnalyzing) && (\n          <div className=\"border-t border-gray-200 bg-white\">\n            <IssuesPanel\n              analysisResult={analysisResult ? {\n                ...analysisResult,\n                flaggedWords: flaggedWords,\n                analysisId: `analysis-${Date.now()}`,\n                timestamp: new Date().toISOString(),\n                confidence: analysisResult.summary.highest_confidence\n              } as any : null}\n              isAnalyzing={isAnalyzing}\n              onWordReplace={handleWordReplace}\n              onIssueClick={handleIssueClick}\n              text={text}\n              onClear={handleClearText}\n              onAnalyze={handleAnalyze}\n              maxLength={5000}\n              error={error}\n              validationErrors={validationErrors}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AACA;AAPA;;;;;;;AAcO,SAAS,iBAAiB,EAAE,cAAc,EAAE,EAAE,MAAM,EAAyB;IAClF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA2B;IAC9E,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAErE,qCAAqC;IACrC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ;IACV,GAAG;QAAC;KAAY;IAEhB,MAAM,yBAAyB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC,SAAkB;QAC5D,oBAAoB;IACtB,GAAG,EAAE;IAEL,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAChC,IAAI,CAAC,KAAK,IAAI,IAAI;YAChB,SAAS;YACT;QACF;QAEA,eAAe;QACf,SAAS;QAET,IAAI;YACF,MAAM,UAA2B;gBAC/B,MAAM,KAAK,IAAI;gBACf,sBAAsB;YACxB;YAEA,MAAM,SAAS,MAAM,CAAA,GAAA,iHAAA,CAAA,cAAW,AAAD,EAAE;YACjC,kBAAkB;YAElB,yCAAyC;YACzC,IAAI;gBACF,MAAM,QAAQ,CAAC,WAAW,EAAE,IAAI,OAAO,kBAAkB,IAAI;gBAC7D,MAAM,CAAA,GAAA,iHAAA,CAAA,eAAY,AAAD,EAAE,KAAK,IAAI,IAAI,QAAQ;YAC1C,EAAE,OAAO,WAAW;gBAClB,QAAQ,IAAI,CAAC,4BAA4B;YACzC,iDAAiD;YACnD;QACF,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,kBAAkB;QACpB,SAAU;YACR,eAAe;QACjB;IACF,GAAG;QAAC;KAAK;IAET,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAClC,QAAQ;QACR,kBAAkB;QAClB,SAAS;IACX,GAAG,EAAE;IAEL,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC,cAAsB;QAC3D,MAAM,UAAU,KAAK,OAAO,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,aAAa,GAAG,CAAC,EAAE,MAAM;QACvE,QAAQ;QAER,+CAA+C;QAC/C,IAAI,gBAAgB;YAClB,MAAM,iBAAiB,eAAe,mBAAmB,CAAC,GAAG,CAAC,CAAA;gBAC5D,IAAI,OAAO,MAAM,CAAC,QAAQ,CAAC,eAAe;oBACxC,OAAO;wBACL,GAAG,MAAM;wBACT,QAAQ,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,aAAa,GAAG,CAAC,EAAE,MAAM;oBAC1E;gBACF;gBACA,OAAO;YACT;YAEA,kBAAkB;gBAChB,GAAG,cAAc;gBACjB,qBAAqB;gBACrB,eAAe;YACjB;QACF;IACF,GAAG;QAAC;QAAM;KAAe;IAEzB,gFAAgF;IAChF,MAAM,eAAe,iBAAiB,CAAA,GAAA,iHAAA,CAAA,wBAAqB,AAAD,EAAE,kBAAkB,EAAE;IAEhF,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACpC,qDAAqD;QACrD,MAAM,SAAS,gBAAgB,oBAAoB,KAAK,CAAA,IACtD,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,IAAI,KAAK,EAAE,cAAc;QAEnD,IAAI,QAAQ;YACV,oDAAoD;YACpD,QAAQ,GAAG,CAAC,oBAAoB;QAClC;IACF,GAAG;QAAC;KAAe;IAEnB,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,4HAAA,CAAA,UAAM;oBAAC,QAAQ;;;;;;;;;;;0BAIlB,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,+HAAA,CAAA,UAAS;gCACR,OAAO;gCACP,UAAU;gCACV,aAAY;gCACZ,WAAW;gCACX,oBAAoB;;;;;;;;;;;;;;;;kCAM1B,8OAAC;wBAAI,WAAU;;4BAA0D;0CAAY,8OAAC,iIAAA,CAAA,cAAW;gCAC3F,gBAAgB,iBAAiB;oCAC/B,GAAG,cAAc;oCACjB,cAAc;oCACd,YAAY,CAAC,SAAS,EAAE,KAAK,GAAG,IAAI;oCACpC,WAAW,IAAI,OAAO,WAAW;oCACjC,YAAY,eAAe,OAAO,CAAC,kBAAkB;gCACvD,IAAW;gCACX,aAAa;gCACb,eAAe;gCACf,cAAc;gCACd,MAAM;gCACN,SAAS;gCACT,WAAW;gCACX,WAAW;gCACX,OAAO;gCACP,kBAAkB;;;;;;;;;;;;;;;;;;0BAM1B,8OAAC;gBAAI,WAAU;0BACZ,CAAC,kBAAkB,WAAW,mBAC7B,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,iIAAA,CAAA,cAAW;wBACV,gBAAgB,iBAAiB;4BAC/B,GAAG,cAAc;4BACjB,cAAc;4BACd,YAAY,CAAC,SAAS,EAAE,KAAK,GAAG,IAAI;4BACpC,WAAW,IAAI,OAAO,WAAW;4BACjC,YAAY,eAAe,OAAO,CAAC,kBAAkB;wBACvD,IAAW;wBACX,aAAa;wBACb,eAAe;wBACf,cAAc;wBACd,MAAM;wBACN,SAAS;wBACT,WAAW;wBACX,WAAW;wBACX,OAAO;wBACP,kBAAkB;;;;;;;;;;;;;;;;;;;;;;AAOhC","debugId":null}},
    {"offset": {"line": 2163, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/Dashboard.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { BiasDetectionApp } from './BiasDetectionApp';\nimport { getSavedAnalyses, deleteAnalysis as deleteAnalysisAPI } from '@/lib/api';\n\ninterface SavedAnalysis {\n  id: number;\n  user_id: number;\n  text: string;\n  result: unknown;\n  title?: string;\n  created_at: string;\n}\n\nexport default function Dashboard() {\n  const { user, logout } = useAuth();\n  const [savedAnalyses, setSavedAnalyses] = useState<SavedAnalysis[]>([]);\n  const [showAnalyzer, setShowAnalyzer] = useState(false);\n  const [initialText, setInitialText] = useState<string>('');\n\n  useEffect(() => {\n    // Load saved analyses from backend\n    loadSavedAnalyses();\n  }, [user?.id]);\n\n  const loadSavedAnalyses = async () => {\n    try {\n      const analyses = await getSavedAnalyses();\n      setSavedAnalyses(analyses);\n    } catch (error) {\n      console.error('Error loading saved analyses:', error);\n    }\n  };\n\n  const deleteAnalysis = async (id: number) => {\n    try {\n      const success = await deleteAnalysisAPI(id);\n      if (success) {\n        setSavedAnalyses(prev => prev.filter(analysis => analysis.id !== id));\n      }\n    } catch (error) {\n      console.error('Error deleting analysis:', error);\n    }\n  };\n\n  const handleAnalysisClick = (analysis: SavedAnalysis) => {\n    setInitialText(analysis.text);\n    setShowAnalyzer(true);\n  };\n\n  if (showAnalyzer) {\n    return <BiasDetectionApp initialText={initialText} onBack={() => {\n      setShowAnalyzer(false);\n      setInitialText('');\n      loadSavedAnalyses(); // Refresh analyses when coming back\n    }} />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-20\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-10 h-10 bg-red-500 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                  </svg>\n                </div>\n                <div>\n                  <h1 className=\"text-2xl font-bold text-gray-800\">\n                    HateZero\n                  </h1>\n                  <p className=\"text-sm text-gray-600 font-medium\">\n                    AI-powered content analysis\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center gap-3\">\n                <button\n                  onClick={() => window.location.href = '/'}\n                  className=\"text-gray-700 hover:text-gray-900 font-medium px-4 py-2 transition-colors\"\n                >\n                  Dashboard\n                </button>\n                <button\n                  onClick={logout}\n                  className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors\"\n                >\n                  Sign Out\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Dashboard</h1>\n          <p className=\"text-gray-600\">Manage your bias detection analyses</p>\n        </div>\n\n        {/* Action Button */}\n        <div className=\"mb-8\">\n          <button\n            onClick={() => setShowAnalyzer(true)}\n            className=\"bg-red-500 text-white px-6 py-3 rounded-lg hover:bg-red-600 transition-colors font-medium shadow-lg\"\n          >\n            New Analysis\n          </button>\n        </div>\n\n        {/* Saved Analyses */}\n        <div className=\"bg-white rounded-lg shadow\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h2 className=\"text-xl font-semibold text-gray-900\">Saved Analyses</h2>\n          </div>\n          \n          {savedAnalyses.length === 0 ? (\n            <div className=\"px-6 py-12 text-center\">\n              <svg className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n              </svg>\n              <p className=\"text-gray-500 mb-4\">No analyses saved yet</p>\n              <button\n                onClick={() => setShowAnalyzer(true)}\n                className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors\"\n              >\n                Create Your First Analysis\n              </button>\n            </div>\n          ) : (\n            <div className=\"divide-y divide-gray-200\">\n              {savedAnalyses.map((analysis) => (\n                <div \n                  key={analysis.id} \n                  className=\"px-6 py-4 hover:bg-gray-50 cursor-pointer transition-colors\"\n                  onClick={() => handleAnalysisClick(analysis)}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1\">\n                      <h3 className=\"text-lg font-medium text-gray-900 mb-1\">\n                        {analysis.title || `Analysis ${analysis.id}`}\n                      </h3>\n                      <p className=\"text-gray-600 text-sm mb-2 line-clamp-2\">\n                        {analysis.text.length > 100 \n                          ? `${analysis.text.substring(0, 100)}...` \n                          : analysis.text\n                        }\n                      </p>\n                      <div className=\"flex items-center gap-4 text-sm text-gray-500\">\n                        <span>{new Date(analysis.created_at).toLocaleDateString()}</span>\n                        <span>{new Date(analysis.created_at).toLocaleTimeString()}</span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2 ml-4\">\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          deleteAnalysis(analysis.id);\n                        }}\n                        className=\"text-red-600 hover:text-red-800 font-medium text-sm\"\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2574, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/LandingPage.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useAuth, AuthProvider } from './AuthContext';\nimport AuthForm from './AuthForm';\nimport Dashboard from './Dashboard';\n\nfunction MainContent() {\n  const { user, isLoading } = useAuth();\n  const [showAuthForm, setShowAuthForm] = useState(false);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-lg text-gray-600\">Loading...</div>\n      </div>\n    );\n  }\n\n  // If user is logged in, show dashboard\n  if (user) {\n    return <Dashboard />;\n  }\n\n  // Show landing page for non-authenticated users\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-20\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-10 h-10 bg-red-500 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                  </svg>\n                </div>\n                <div>\n                  <h1 className=\"text-2xl font-bold text-gray-800\">\n                    HateZero\n                  </h1>\n                  <p className=\"text-sm text-gray-600 font-medium\">\n                    AI-powered content analysis\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center space-x-4\">\n                <button \n                  onClick={() => setShowAuthForm(true)}\n                  className=\"text-gray-700 hover:text-gray-900 font-medium px-4 py-2 transition-colors\"\n                >\n                  Sign In\n                </button>\n                <button \n                  onClick={() => setShowAuthForm(true)}\n                  className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors font-medium\"\n                >\n                  Sign Up\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Hero Section */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            {/* Left side - Text content */}\n            <div className=\"text-left\">\n              <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-900 mb-6\">\n                Detect Bias and Hate Speech in Text\n              </h1>\n              <p className=\"text-xl text-gray-600 mb-8\">\n                Use advanced AI to analyze text for hate speech, bias, and harmful content. \n                Perfect for content moderation and research.\n              </p>\n\n              {/* Stats Section */}\n              <div className=\"grid grid-cols-2 gap-6 mb-8\">\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                  <div className=\"text-3xl font-bold text-red-500 mb-1\">95%</div>\n                  <div className=\"text-sm text-gray-600 font-medium\">Accuracy Rate</div>\n                </div>\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                  <div className=\"text-3xl font-bold text-red-500 mb-1\">&lt;4s</div>\n                  <div className=\"text-sm text-gray-600 font-medium\">Processing Time</div>\n                </div>\n              </div>\n\n              <button \n                onClick={() => setShowAuthForm(true)}\n                className=\"bg-red-500 text-white px-8 py-3 rounded-lg text-lg font-semibold hover:bg-red-600 transition-colors shadow-lg\"\n              >\n                Start Analyzing Text\n              </button>\n            </div>\n            \n            {/* Right side - Text input and analyze */}\n            <div className=\"bg-white rounded-xl shadow-xl p-6\">\n              <div className=\"flex items-center gap-3 mb-4\">\n                <div className=\"w-6 h-6 bg-red-500 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-lg font-semibold text-gray-900\">Try it out</h3>\n              </div>\n              <textarea\n                placeholder=\"Type or paste your text here to analyze for bias and hate speech...\"\n                className=\"w-full h-64 p-4 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-red-500 focus:border-red-500 outline-none placeholder-gray-500 text-gray-900 transition-all duration-200\"\n                maxLength={500}\n              />\n              <div className=\"mt-4 flex justify-end\">\n                <button\n                  onClick={() => setShowAuthForm(true)}\n                  className=\"bg-red-500 text-white px-6 py-2 rounded-lg hover:bg-red-600 transition-all duration-200 font-medium\"\n                >\n                  Analyze Text\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Auth Modal */}\n      {showAuthForm && (\n        <AuthForm onClose={() => setShowAuthForm(false)} />\n      )}\n    </div>\n  );\n}\n\nexport function LandingPage() {\n  return (\n    <AuthProvider>\n      <MainContent />\n    </AuthProvider>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}