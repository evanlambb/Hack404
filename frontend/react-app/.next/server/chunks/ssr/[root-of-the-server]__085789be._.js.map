{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/lib/api.ts"],"sourcesContent":["import { AnalysisRequest, AnalysisResponse, FlaggedWord } from '@/types';\n\n// Base URL for the backend API\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\n\n/**\n * Analyzes text for hate speech using the backend API\n * @param request - The analysis request containing text and optional confidence threshold\n * @returns Promise<AnalysisResponse> - The analysis results\n */\nexport async function analyzeText(request: AnalysisRequest): Promise<AnalysisResponse> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/analyze`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        text: request.text,\n        confidence_threshold: request.confidence_threshold || 0.6,\n      }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error analyzing text:', error);\n    throw error instanceof Error ? error : new Error('Failed to analyze text');\n  }\n}\n\n/**\n * Converts analysis results to flagged words format for backward compatibility\n * @param analysisResult - The analysis response from the backend\n * @returns FlaggedWord[] - Array of flagged words\n */\nexport function convertToFlaggedWords(analysisResult: AnalysisResponse): FlaggedWord[] {\n  const flaggedWords: FlaggedWord[] = [];\n  \n  analysisResult.hate_speech_clauses.forEach((clause) => {\n    // Extract individual words from rationale tokens that are marked as rationale\n    clause.rationale_tokens.forEach((token) => {\n      if (token.is_rationale && token.token.trim().length > 0) {\n        // Find the position of this token in the original text\n        const originalText = analysisResult.original_text;\n        const tokenText = token.token.trim();\n        \n        // Search for the token in the original text\n        const startIndex = originalText.toLowerCase().indexOf(tokenText.toLowerCase());\n        \n        // If we can't find the exact token, skip it\n        if (startIndex === -1) return;\n        \n        const endIndex = startIndex + tokenText.length;\n        \n        flaggedWords.push({\n          word: tokenText,\n          startIndex,\n          endIndex,\n          category: 'hate_speech',\n          confidence: token.confidence,\n          suggestions: [\n            {\n              word: '[Consider rephrasing]',\n              confidence: 0.8,\n              reason: clause.justification,\n            },\n          ],\n          explanation: clause.justification,\n        });\n      }\n    });\n  });\n\n  return flaggedWords;\n}\n\n/**\n * Health check for the API\n * @returns Promise<boolean> - True if API is healthy\n */\nexport async function checkApiHealth(): Promise<boolean> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/`);\n    return response.ok;\n  } catch (error) {\n    console.error('API health check failed:', error);\n    return false;\n  }\n}\n\n/**\n * Simple analysis endpoint for basic use cases\n * @param text - The text to analyze\n * @returns Promise<unknown> - Simplified analysis results\n */\nexport async function analyzeSimple(text: string): Promise<unknown> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/analyze-simple`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ text }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Error in simple analysis:', error);\n    throw error instanceof Error ? error : new Error('Failed to analyze text');\n  }\n}\n"],"names":[],"mappings":";;;;;;AAEA,+BAA+B;AAC/B,MAAM,eAAe,QAAQ,GAAG,CAAC,mBAAmB,IAAI;AAOjD,eAAe,YAAY,OAAwB;IACxD,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,QAAQ,CAAC,EAAE;YACtD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,MAAM,QAAQ,IAAI;gBAClB,sBAAsB,QAAQ,oBAAoB,IAAI;YACxD;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;YACvD,MAAM,IAAI,MAAM,UAAU,MAAM,IAAI,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC9E;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM,iBAAiB,QAAQ,QAAQ,IAAI,MAAM;IACnD;AACF;AAOO,SAAS,sBAAsB,cAAgC;IACpE,MAAM,eAA8B,EAAE;IAEtC,eAAe,mBAAmB,CAAC,OAAO,CAAC,CAAC;QAC1C,8EAA8E;QAC9E,OAAO,gBAAgB,CAAC,OAAO,CAAC,CAAC;YAC/B,IAAI,MAAM,YAAY,IAAI,MAAM,KAAK,CAAC,IAAI,GAAG,MAAM,GAAG,GAAG;gBACvD,uDAAuD;gBACvD,MAAM,eAAe,eAAe,aAAa;gBACjD,MAAM,YAAY,MAAM,KAAK,CAAC,IAAI;gBAElC,4CAA4C;gBAC5C,MAAM,aAAa,aAAa,WAAW,GAAG,OAAO,CAAC,UAAU,WAAW;gBAE3E,4CAA4C;gBAC5C,IAAI,eAAe,CAAC,GAAG;gBAEvB,MAAM,WAAW,aAAa,UAAU,MAAM;gBAE9C,aAAa,IAAI,CAAC;oBAChB,MAAM;oBACN;oBACA;oBACA,UAAU;oBACV,YAAY,MAAM,UAAU;oBAC5B,aAAa;wBACX;4BACE,MAAM;4BACN,YAAY;4BACZ,QAAQ,OAAO,aAAa;wBAC9B;qBACD;oBACD,aAAa,OAAO,aAAa;gBACnC;YACF;QACF;IACF;IAEA,OAAO;AACT;AAMO,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,CAAC,CAAC;QAC/C,OAAO,SAAS,EAAE;IACpB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO;IACT;AACF;AAOO,eAAe,cAAc,IAAY;IAC9C,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,eAAe,CAAC,EAAE;YAC7D,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;YAAK;QAC9B;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;YACvD,MAAM,IAAI,MAAM,UAAU,MAAM,IAAI,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC9E;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM,iBAAiB,QAAQ,QAAQ,IAAI,MAAM;IACnD;AACF","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/Header.tsx"],"sourcesContent":["export default function Header() {\n  return (\n    <header className=\"bg-white border-b border-gray-200\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-20\">\n          <div className=\"flex items-center gap-4\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-10 h-10 bg-red-500 rounded-lg flex items-center justify-center\">\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-800\">\n                  Hate Speech Detector\n                </h1>\n                <p className=\"text-sm text-gray-600 font-medium\">\n                  AI-powered content analysis\n                </p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center gap-4\">\n            <div className=\"hidden md:flex items-center gap-2 bg-gray-50 rounded-full px-4 py-2 border border-gray-200\">\n              <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n              <span className=\"text-sm font-medium text-gray-700\">Ready to analyze</span>\n            </div>\n            \n            <button className=\"p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-50 rounded-lg transition-all duration-200\">\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n} "],"names":[],"mappings":";;;;;AAAe,SAAS;IACtB,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;wCAAqB,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDAC5E,cAAA,8OAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;8CAGzE,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAAmC;;;;;;sDAGjD,8OAAC;4CAAE,WAAU;sDAAoC;;;;;;;;;;;;;;;;;;;;;;;kCAOvD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;wCAAK,WAAU;kDAAoC;;;;;;;;;;;;0CAGtD,8OAAC;gCAAO,WAAU;0CAChB,cAAA,8OAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CACjE,cAAA,8OAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQrF","debugId":null}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/TextInput.tsx"],"sourcesContent":["import { ChangeEvent, useState, useEffect, useCallback, useMemo, useRef } from 'react';\n\nexport interface ValidationRule {\n  type: 'minLength' | 'maxLength' | 'required' | 'custom';\n  value?: number;\n  message: string;\n  validator?: (text: string) => boolean;\n}\n\nexport interface TextInputProps {\n  value: string;\n  onChange: (value: string) => void;\n  onClear?: () => void;\n  onAnalyze?: () => void;\n  placeholder?: string;\n  disabled?: boolean;\n  isAnalyzing?: boolean;\n  error?: string | null;\n  label?: string;\n  maxLength?: number;\n  minLength?: number;\n  className?: string;\n  showCharacterCount?: boolean;\n  showClearButton?: boolean;\n  showAnalyzeButton?: boolean;\n  analyzeButtonText?: string;\n  clearButtonText?: string;\n  validateOnChange?: boolean;\n  validationRules?: ValidationRule[];\n  onValidationChange?: (isValid: boolean, errors: string[]) => void;\n  confirmClearThreshold?: number; // Characters threshold for showing confirmation dialog\n  showClearConfirmation?: boolean;\n}\n\n// Default empty validation rules (stable reference)\nconst DEFAULT_VALIDATION_RULES: ValidationRule[] = [];\n\nexport default function TextInput({\n  value,\n  onChange,\n  onClear,\n  onAnalyze,\n  placeholder = \"Type or paste your text here...\",\n  disabled = false,\n  isAnalyzing = false,\n  error = null,\n  label = \"Enter text to analyze\",\n  maxLength = 5000,\n  minLength = 5,\n  className = \"\",\n  showCharacterCount = true,\n  showClearButton = true,\n  showAnalyzeButton = true,\n  analyzeButtonText = \"Analyze Text\",\n  clearButtonText = \"Clear\",\n  validateOnChange = true,\n  validationRules = DEFAULT_VALIDATION_RULES,\n  onValidationChange,\n  confirmClearThreshold = 50,\n  showClearConfirmation = true\n}: TextInputProps) {\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\n  const [isValid, setIsValid] = useState(true);\n  const [showConfirmDialog, setShowConfirmDialog] = useState<boolean>(false);\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  // Combine default rules with custom rules\n  const allRules = useMemo(() => {\n    const defaultRules: ValidationRule[] = [\n      {\n        type: 'required',\n        message: 'Text is required',\n        validator: (text: string) => text.trim().length > 0\n      },\n      {\n        type: 'minLength',\n        value: minLength,\n        message: `Text must be at least ${minLength} characters long`,\n        validator: (text: string) => text.trim().length >= minLength\n      },\n      {\n        type: 'maxLength',\n        value: maxLength,\n        message: `Text must not exceed ${maxLength} characters`,\n        validator: (text: string) => text.length <= maxLength\n      }\n    ];\n\n    return [...defaultRules, ...validationRules];\n  }, [minLength, maxLength, validationRules]);\n\n  // Validation function\n  const validateText = useCallback((text: string): { isValid: boolean; errors: string[] } => {\n    const errors: string[] = [];\n    \n    for (const rule of allRules) {\n      let isRuleValid = false;\n      \n      switch (rule.type) {\n        case 'required':\n          isRuleValid = text.trim().length > 0;\n          break;\n        case 'minLength':\n          isRuleValid = text.trim().length === 0 || text.trim().length >= (rule.value || minLength);\n          break;\n        case 'maxLength':\n          isRuleValid = text.length <= (rule.value || maxLength);\n          break;\n        case 'custom':\n          isRuleValid = rule.validator ? rule.validator(text) : true;\n          break;\n        default:\n          isRuleValid = true;\n      }\n      \n      if (!isRuleValid) {\n        errors.push(rule.message);\n      }\n    }\n    \n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }, [allRules, minLength, maxLength]);\n\n  // Effect to validate on value change\n  useEffect(() => {\n    if (validateOnChange) {\n      const { isValid: valid, errors } = validateText(value);\n      setIsValid(valid);\n      setValidationErrors(errors);\n    }\n  }, [value, validateOnChange, validateText]);\n\n  // Effect to notify parent of validation changes\n  useEffect(() => {\n    if (onValidationChange && validateOnChange) {\n      onValidationChange(isValid, validationErrors);\n    }\n  }, [isValid, validationErrors, onValidationChange, validateOnChange]);\n\n  const handleTextChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    onChange(e.target.value);\n  };\n\n  const handleConfirmClear = useCallback(() => {\n    setShowConfirmDialog(false);\n    if (onClear) {\n      onClear();\n    }\n  }, [onClear]);\n\n  const handleCancelClear = useCallback(() => {\n    setShowConfirmDialog(false);\n  }, []);\n\n  const handleClearClick = () => {\n    // Check if we need to show confirmation dialog\n    if (showClearConfirmation && value.length >= confirmClearThreshold) {\n      setShowConfirmDialog(true);\n    } else {\n      // Clear immediately if no confirmation needed\n      if (onClear) {\n        onClear();\n      }\n    }\n  };\n\n  const handleAnalyzeClick = () => {\n    if (onAnalyze) {\n      onAnalyze();\n    }\n  };\n\n  // Effect to handle keyboard events and click outside for confirmation dialog\n  useEffect(() => {\n    if (showConfirmDialog) {\n      const handleKeyDown = (e: KeyboardEvent) => {\n        if (e.key === 'Escape') {\n          handleCancelClear();\n        } else if (e.key === 'Enter') {\n          handleConfirmClear();\n        }\n      };\n\n      const handleClickOutside = (e: MouseEvent) => {\n        if (dialogRef.current && !dialogRef.current.contains(e.target as Node)) {\n          handleCancelClear();\n        }\n      };\n\n      document.addEventListener('keydown', handleKeyDown);\n      document.addEventListener('mousedown', handleClickOutside);\n\n      return () => {\n        document.removeEventListener('keydown', handleKeyDown);\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n    // Return undefined for the else case to satisfy TypeScript\n    return undefined;\n  }, [showConfirmDialog, handleConfirmClear, handleCancelClear]);\n\n  const isAtLimit = value.length >= maxLength;\n  const isNearLimit = value.length >= maxLength * 0.8;\n  const characterCountColor = isAtLimit \n    ? 'text-red-500 font-semibold' \n    : isNearLimit \n      ? 'text-amber-500 font-medium' \n      : 'text-gray-500';\n\n  return (\n    <div className={`h-full ${className}`}>\n      <textarea\n        id=\"text-input\"\n        value={value}\n        onChange={handleTextChange}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        className=\"w-full h-full px-6 py-6 placeholder-gray-400 text-gray-900 focus:outline-none resize-none bg-gray-50 border-0\"\n        disabled={disabled || isAnalyzing}\n      />\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 478, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/BiasDetectionApp.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from 'react';\nimport { AnalysisResponse, AnalysisRequest } from '@/types';\nimport { analyzeText, convertToFlaggedWords } from '@/lib/api';\nimport Header from './Header';\nimport TextInput from './TextInput';\nimport { IssuesPanel } from './IssuesPanel';\n\nexport function BiasDetectionApp() {\n  const [text, setText] = useState('');\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResponse | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\n\n  const handleValidationChange = useCallback((isValid: boolean, errors: string[]) => {\n    setValidationErrors(errors);\n  }, []);\n\n  const handleAnalyze = useCallback(async () => {\n    if (!text.trim()) {\n      setError('Please enter some text to analyze');\n      return;\n    }\n\n    setIsAnalyzing(true);\n    setError(null);\n\n    try {\n      const request: AnalysisRequest = {\n        text: text.trim(),\n        confidence_threshold: 0.6\n      };\n\n      const result = await analyzeText(request);\n      setAnalysisResult(result);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred during analysis');\n      setAnalysisResult(null);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  }, [text]);\n\n  const handleClearText = useCallback(() => {\n    setText('');\n    setAnalysisResult(null);\n    setError(null);\n  }, []);\n\n  const handleWordReplace = useCallback((originalWord: string, newWord: string) => {\n    const newText = text.replace(new RegExp(`\\\\b${originalWord}\\\\b`, 'g'), newWord);\n    setText(newText);\n    \n    // Update analysis result to reflect the change\n    if (analysisResult) {\n      const updatedClauses = analysisResult.hate_speech_clauses.map(clause => {\n        if (clause.clause.includes(originalWord)) {\n          return {\n            ...clause,\n            clause: clause.clause.replace(new RegExp(`\\\\b${originalWord}\\\\b`, 'g'), newWord)\n          };\n        }\n        return clause;\n      });\n      \n      setAnalysisResult({\n        ...analysisResult,\n        hate_speech_clauses: updatedClauses,\n        original_text: newText\n      });\n    }\n  }, [text, analysisResult]);\n\n  // Convert analysis result to flagged words format for IssuesPanel compatibility\n  const flaggedWords = analysisResult ? convertToFlaggedWords(analysisResult) : [];\n\n  const handleIssueClick = useCallback((issue: { word: string }) => {\n    // Find the corresponding clause for the flagged word\n    const clause = analysisResult?.hate_speech_clauses.find(c => \n      c.clause.includes(issue.word) && c.is_hate_speech\n    );\n    if (clause) {\n      // Could do something with the clause here if needed\n      console.log('Selected clause:', clause);\n    }\n  }, [analysisResult]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n      {/* Fixed Header */}\n      <div className=\"fixed top-0 left-0 right-0 z-30 bg-white shadow-sm\">\n        <Header />\n      </div>\n      \n      {/* Main Content with Fixed Layout */}\n      <div className=\"flex pt-20 h-screen\">\n        {/* Left Column - Text Input Area - Scrollable */}\n        <div className=\"flex-1 overflow-y-auto bg-gray-50 main-scroll-area pr-96 lg:pr-96\">\n          <div className=\"h-full p-6 lg:p-8\">\n            <TextInput\n              value={text}\n              onChange={setText}\n              placeholder=\"Type or paste your text here...\"\n              maxLength={5000}\n              onValidationChange={handleValidationChange}\n            />\n          </div>\n        </div>\n\n        {/* Right Column - Fixed Issues Panel */}\n        <div className=\"fixed top-20 right-0 bottom-0 w-96 hidden lg:block z-20\">            <IssuesPanel\n              analysisResult={analysisResult ? {\n                ...analysisResult,\n                flaggedWords: flaggedWords,\n                analysisId: `analysis-${Date.now()}`,\n                timestamp: new Date().toISOString(),\n                confidence: analysisResult.summary.highest_confidence\n              } as any : null}\n              isAnalyzing={isAnalyzing}\n              onWordReplace={handleWordReplace}\n              onIssueClick={handleIssueClick}\n              text={text}\n              onClear={handleClearText}\n              onAnalyze={handleAnalyze}\n              maxLength={5000}\n              error={error}\n              validationErrors={validationErrors}\n            />\n        </div>\n      </div>\n\n      {/* Mobile Issues Panel */}\n      <div className=\"lg:hidden\">\n        {(analysisResult || isAnalyzing) && (\n          <div className=\"border-t border-gray-200 bg-white\">\n            <IssuesPanel\n              analysisResult={analysisResult ? {\n                ...analysisResult,\n                flaggedWords: flaggedWords,\n                analysisId: `analysis-${Date.now()}`,\n                timestamp: new Date().toISOString(),\n                confidence: analysisResult.summary.highest_confidence\n              } as any : null}\n              isAnalyzing={isAnalyzing}\n              onWordReplace={handleWordReplace}\n              onIssueClick={handleIssueClick}\n              text={text}\n              onClear={handleClearText}\n              onAnalyze={handleAnalyze}\n              maxLength={5000}\n              error={error}\n              validationErrors={validationErrors}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 696, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 719, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 726, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}}]
}