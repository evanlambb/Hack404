{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/components/AuthContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { User } from '../lib/auth';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isLoading: boolean;\r\n  login: (user: User) => void;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check for saved user in localStorage\r\n    const savedUser = localStorage.getItem('user');\r\n    if (savedUser) {\r\n      try {\r\n        setUser(JSON.parse(savedUser));\r\n      } catch (error) {\r\n        console.error('Error parsing saved user:', error);\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const login = (userData: User) => {\r\n    setUser(userData);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, isLoading, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAYA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uCAAuC;QACvC,MAAM,YAAY,aAAa,OAAO,CAAC;QACvC,IAAI,WAAW;YACb,IAAI;gBACF,QAAQ,KAAK,KAAK,CAAC;YACrB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,aAAa,UAAU,CAAC;YAC1B;QACF;QACA,aAAa;IACf,GAAG,EAAE;IAEL,MAAM,QAAQ,CAAC;QACb,QAAQ;QACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;IAC9C;IAEA,MAAM,SAAS;QACb,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAW;YAAO;QAAO;kBAC3D;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/lib/auth.ts"],"sourcesContent":["const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\r\n\r\nexport interface AuthResponse {\r\n  success: boolean;\r\n  message: string;\r\n  user_id?: number;\r\n  token?: string;\r\n}\r\n\r\nexport interface User {\r\n  id: number;\r\n  email: string;\r\n  name: string;\r\n  token: string;\r\n}\r\n\r\nexport async function signup(email: string, password: string, name: string): Promise<AuthResponse> {\r\n  try {\r\n    const response = await fetch(`${API_URL}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password, name }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Signup failed');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Signup error:', error);\r\n    return {\r\n      success: false,\r\n      message: 'Network error during signup',\r\n    };\r\n  }\r\n}\r\n\r\nexport async function login(email: string, password: string): Promise<AuthResponse> {\r\n  try {\r\n    const response = await fetch(`${API_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Login failed');\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    return {\r\n      success: false,\r\n      message: 'Network error during login',\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA,MAAM,UAAU,QAAQ,GAAG,CAAC,mBAAmB,IAAI;AAgB5C,eAAe,OAAO,KAAa,EAAE,QAAgB,EAAE,IAAY;IACxE,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,OAAO,CAAC,EAAE;YAChD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;gBAAU;YAAK;QAC/C;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;AACF;AAEO,eAAe,MAAM,KAAa,EAAE,QAAgB;IACzD,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,MAAM,CAAC,EAAE;YAC/C,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAS;QACzC;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;AACF","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/components/AuthForm.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { signup, login as apiLogin } from '../lib/auth';\r\nimport { useAuth } from './AuthContext';\r\n\r\ninterface AuthFormProps {\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function AuthForm({ onClose }: AuthFormProps) {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const { login } = useAuth();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      if (isLogin) {\r\n        const response = await apiLogin(email, password);\r\n        if (response.success && response.user_id && response.token) {\r\n          login({\r\n            id: response.user_id,\r\n            email,\r\n            name: email.split('@')[0] || 'User', // Simple name extraction\r\n            token: response.token,\r\n          });\r\n          onClose();\r\n        } else {\r\n          setError(response.message || 'Login failed');\r\n        }\r\n      } else {\r\n        const response = await signup(email, password, name);\r\n        if (response.success && response.user_id && response.token) {\r\n          login({\r\n            id: response.user_id,\r\n            email,\r\n            name,\r\n            token: response.token,\r\n          });\r\n          onClose();\r\n        } else {\r\n          setError(response.message || 'Signup failed');\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError('An unexpected error occurred');\r\n      console.error('Auth error:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-50 bg-opacity-95 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-xl shadow-2xl p-8 max-w-md w-full mx-4\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"w-8 h-8 bg-red-500 rounded-lg flex items-center justify-center\">\r\n              <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n              </svg>\r\n            </div>\r\n            <h2 className=\"text-2xl font-bold text-gray-900\">\r\n              {isLogin ? 'Sign In' : 'Sign Up'}\r\n            </h2>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 text-2xl w-8 h-8 flex items-center justify-center rounded-full hover:bg-gray-100 transition-colors\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          {!isLogin && (\r\n            <div>\r\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                required={!isLogin}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 placeholder-gray-500 text-gray-900\"\r\n                placeholder=\"Enter your name\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div>\r\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 placeholder-gray-500 text-gray-900\"\r\n              placeholder=\"Enter your email\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 placeholder-gray-500 text-gray-900\"\r\n              placeholder=\"Enter your password\"\r\n            />\r\n          </div>\r\n\r\n          {error && (\r\n            <div className=\"text-red-600 text-sm bg-red-50 p-3 rounded-md\">\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={isLoading}\r\n            className=\"w-full bg-red-500 text-white py-3 px-4 rounded-md hover:bg-red-600 disabled:opacity-50 disabled:cursor-not-allowed font-medium transition-all duration-200\"\r\n          >\r\n            {isLoading ? (\r\n              <div className=\"flex items-center justify-center gap-2\">\r\n                <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                Loading...\r\n              </div>\r\n            ) : (isLogin ? 'Sign In' : 'Sign Up')}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"mt-6 text-center\">\r\n          <div className=\"relative\">\r\n            <div className=\"absolute inset-0 flex items-center\">\r\n              <div className=\"w-full border-t border-gray-300\"></div>\r\n            </div>\r\n            <div className=\"relative flex justify-center text-sm\">\r\n              <span className=\"px-2 bg-white text-gray-500\">or</span>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={() => setIsLogin(!isLogin)}\r\n            className=\"mt-4 text-red-500 hover:text-red-700 text-sm font-medium\"\r\n          >\r\n            {isLogin ? \"Don't have an account? Sign up\" : \"Already have an account? Sign in\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/types/index.ts"],"sourcesContent":["/**\r\n * Core Types for Hate Speech Detection App\r\n *\r\n * These interfaces define the shape of data flowing through our application.\r\n * TypeScript helps us catch errors early and provides better IDE support.\r\n */\r\n\r\n// Main interface for text analysis requests\r\nexport interface AnalysisRequest {\r\n  text: string;\r\n}\r\n\r\n// Individual rationale token from the model\r\nexport interface RationaleToken {\r\n  token: string;\r\n  is_rationale: boolean;\r\n  confidence: number;\r\n}\r\n\r\n// Individual clause analysis from the backend\r\nexport interface ClauseAnalysis {\r\n  clause: string;\r\n  is_hate_speech: boolean;\r\n  confidence: number;\r\n  hate_speech_probability: number;\r\n  rationale_tokens: RationaleToken[];\r\n  justification: string;\r\n}\r\n\r\n// Response from the backend API\r\nexport interface AnalysisResponse {\r\n  original_text: string;\r\n  total_clauses: number;\r\n  hate_speech_clauses: ClauseAnalysis[];\r\n  summary: {\r\n    total_clauses_analyzed: number;\r\n    hate_speech_clauses_found: number;\r\n    hate_speech_percentage: number;\r\n    confidence_threshold_used: number;\r\n    overall_assessment: string;\r\n    risk_level: string;\r\n  };\r\n}\r\n\r\n// Simplified response for basic analysis\r\nexport interface SimpleAnalysisResponse {\r\n  text: string;\r\n  hate_speech_detected: boolean;\r\n  confidence: number;\r\n  hate_speech_clauses: Array<{\r\n    text: string;\r\n    confidence: number;\r\n    justification: string;\r\n  }>;\r\n}\r\n\r\n// Bias detection types\r\nexport interface BiasSpan {\r\n  text: string;\r\n  category: string;\r\n  explanation: string;\r\n  suggested_revision: string;\r\n  start_index: number;\r\n  end_index: number;\r\n}\r\n\r\nexport interface BiasAnalysisResponse {\r\n  original_text: string;\r\n  bias_spans: BiasSpan[];\r\n  summary: {\r\n    total_bias_instances: number;\r\n    categories_detected: string[];\r\n    overall_assessment: string;\r\n    risk_level: string;\r\n    text_length: number;\r\n    bias_density: number;\r\n  };\r\n}\r\n\r\n// Legacy compatibility for existing UI components\r\nexport interface FlaggedWord {\r\n  word: string;\r\n  startIndex: number;\r\n  endIndex: number;\r\n  category: string;\r\n  confidence?: number;\r\n  suggestions: {\r\n    word: string;\r\n    confidence: number;\r\n    reason: string;\r\n  }[];\r\n  explanation: string;\r\n}\r\n\r\nexport interface AnalysisResult {\r\n  analysisId: string;\r\n  timestamp: string;\r\n  flaggedWords: FlaggedWord[];\r\n  original_text: string;\r\n  bias_spans: BiasSpan[];\r\n  summary: BiasAnalysisResponse[\"summary\"];\r\n}\r\n\r\n// Bias categories with their display colors\r\nexport const BIAS_CATEGORIES = {\r\n  \"Race / Ethnicity\": { color: \"#ff4444\", lightColor: \"#ffebee\" },\r\n  \"Gender / Gender Identity\": { color: \"#ff6b35\", lightColor: \"#fff3e0\" },\r\n  Age: { color: \"#ffa726\", lightColor: \"#fff8e1\" },\r\n  \"Religion / Belief System\": { color: \"#ffcc02\", lightColor: \"#fffde7\" },\r\n  \"Sexual Orientation\": { color: \"#66bb6a\", lightColor: \"#e8f5e8\" },\r\n  \"Socioeconomic Status\": { color: \"#42a5f5\", lightColor: \"#e3f2fd\" },\r\n  \"Nationality / Immigration Status\": {\r\n    color: \"#ab47bc\",\r\n    lightColor: \"#f3e5f5\",\r\n  },\r\n  \"Disability (Visible & Invisible)\": {\r\n    color: \"#ef5350\",\r\n    lightColor: \"#ffebee\",\r\n  },\r\n  \"Education Level\": { color: \"#26c6da\", lightColor: \"#e0f2f1\" },\r\n  \"Political Ideology\": { color: \"#ff7043\", lightColor: \"#fbe9e7\" },\r\n  \"Physical Appearance / Body Type\": {\r\n    color: \"#8d6e63\",\r\n    lightColor: \"#efebe9\",\r\n  },\r\n} as const;\r\n\r\nexport type BiasCategory = keyof typeof BIAS_CATEGORIES;\r\n\r\n// UI State management types\r\nexport interface AppState {\r\n  inputText: string;\r\n  analysisResult: AnalysisResponse | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  interactedClauses: Set<string>;\r\n}\r\n\r\n// For managing the text segments in our UI\r\nexport interface TextSegment {\r\n  text: string;\r\n  isFlagged: boolean;\r\n  clauseAnalysis?: ClauseAnalysis;\r\n  key: string;\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED,4CAA4C;;;;AAiGrC,MAAM,kBAAkB;IAC7B,oBAAoB;QAAE,OAAO;QAAW,YAAY;IAAU;IAC9D,4BAA4B;QAAE,OAAO;QAAW,YAAY;IAAU;IACtE,KAAK;QAAE,OAAO;QAAW,YAAY;IAAU;IAC/C,4BAA4B;QAAE,OAAO;QAAW,YAAY;IAAU;IACtE,sBAAsB;QAAE,OAAO;QAAW,YAAY;IAAU;IAChE,wBAAwB;QAAE,OAAO;QAAW,YAAY;IAAU;IAClE,oCAAoC;QAClC,OAAO;QACP,YAAY;IACd;IACA,oCAAoC;QAClC,OAAO;QACP,YAAY;IACd;IACA,mBAAmB;QAAE,OAAO;QAAW,YAAY;IAAU;IAC7D,sBAAsB;QAAE,OAAO;QAAW,YAAY;IAAU;IAChE,mCAAmC;QACjC,OAAO;QACP,YAAY;IACd;AACF","debugId":null}},
    {"offset": {"line": 531, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/lib/api.ts"],"sourcesContent":["import {\r\n  AnalysisRequest,\r\n  BiasAnalysisResponse,\r\n  FlaggedWord,\r\n  BiasSpan,\r\n  BIAS_CATEGORIES,\r\n} from \"@/types\";\r\n\r\n// Base URL for the backend API\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8000\";\r\n\r\n/**\r\n * Analyzes text for bias using the backend API\r\n * @param request - The analysis request containing text\r\n * @returns Promise<BiasAnalysisResponse> - The bias analysis results\r\n */\r\nexport async function analyzeText(\r\n  request: AnalysisRequest\r\n): Promise<BiasAnalysisResponse> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/analyze`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        text: request.text,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(\r\n        errorData.detail || `HTTP error! status: ${response.status}`\r\n      );\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error analyzing text:\", error);\r\n    throw error instanceof Error ? error : new Error(\"Failed to analyze text\");\r\n  }\r\n}\r\n\r\n/**\r\n * Converts bias spans to flagged words format for backward compatibility\r\n * @param biasSpans - The bias spans from the backend\r\n * @param originalText - The original text that was analyzed\r\n * @returns FlaggedWord[] - Array of flagged words for UI display\r\n */\r\nexport function convertBiasSpansToFlaggedWords(\r\n  biasSpans: BiasSpan[],\r\n  originalText: string\r\n): FlaggedWord[] {\r\n  const flaggedWords: FlaggedWord[] = [];\r\n\r\n  biasSpans.forEach((span) => {\r\n    // Find the position of this span in the original text\r\n    const startIndex = span.start_index;\r\n    const endIndex = span.end_index;\r\n\r\n    // Validate indices\r\n    if (\r\n      startIndex >= 0 &&\r\n      endIndex <= originalText.length &&\r\n      startIndex < endIndex\r\n    ) {\r\n      flaggedWords.push({\r\n        word: span.text,\r\n        startIndex,\r\n        endIndex,\r\n        category: span.category,\r\n        confidence: 1.0, // LLM doesn't provide confidence, so we assume high confidence\r\n        suggestions: [\r\n          {\r\n            word: span.suggested_revision,\r\n            confidence: 1.0,\r\n            reason: span.explanation,\r\n          },\r\n        ],\r\n        explanation: span.explanation,\r\n      });\r\n    }\r\n  });\r\n\r\n  return flaggedWords;\r\n}\r\n\r\n/**\r\n * Converts analysis results to flagged words format for backward compatibility\r\n * @param analysisResult - The analysis response from the backend\r\n * @returns FlaggedWord[] - Array of flagged words\r\n */\r\nexport function convertToFlaggedWords(\r\n  analysisResult: BiasAnalysisResponse\r\n): FlaggedWord[] {\r\n  return convertBiasSpansToFlaggedWords(\r\n    analysisResult.bias_spans,\r\n    analysisResult.original_text\r\n  );\r\n}\r\n\r\n/**\r\n * Health check for the API\r\n * @returns Promise<boolean> - True if API is healthy\r\n */\r\nexport async function checkApiHealth(): Promise<boolean> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/`);\r\n    const data = await response.json();\r\n    return response.ok && data.analyzer_loaded;\r\n  } catch (error) {\r\n    console.error(\"API health check failed:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Simple analysis endpoint for basic use cases\r\n * @param text - The text to analyze\r\n * @returns Promise<unknown> - Simplified analysis results\r\n */\r\nexport async function analyzeSimple(text: string): Promise<unknown> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/analyze-simple`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ text }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(\r\n        errorData.detail || `HTTP error! status: ${response.status}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error in simple analysis:\", error);\r\n    throw error instanceof Error ? error : new Error(\"Failed to analyze text\");\r\n  }\r\n}\r\n\r\n/**\r\n * Save analysis result to the database\r\n * @param text - The analyzed text\r\n * @param result - The analysis result\r\n * @param title - Optional title for the analysis\r\n * @returns Promise<boolean> - Success status\r\n */\r\nexport async function saveAnalysis(\r\n  text: string,\r\n  result: any,\r\n  title?: string\r\n): Promise<boolean> {\r\n  try {\r\n    console.log(\"saveAnalysis called with:\", {\r\n      text: text.slice(0, 50) + \"...\",\r\n      title,\r\n      hasResult: !!result,\r\n    });\r\n    const headers = createAuthHeaders();\r\n    console.log(\"Auth headers:\", headers);\r\n\r\n    const response = await fetch(`${API_BASE_URL}/save-analysis`, {\r\n      method: \"POST\",\r\n      headers,\r\n      body: JSON.stringify({ text, result, title }),\r\n    });\r\n\r\n    console.log(\"Response status:\", response.status);\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      console.error(\"Save analysis error:\", errorData);\r\n      throw new Error(\r\n        errorData.detail || `HTTP error! status: ${response.status}`\r\n      );\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(\"Save analysis response:\", data);\r\n    return data.success;\r\n  } catch (error) {\r\n    console.error(\"Error saving analysis:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Get saved analyses for the authenticated user\r\n * @returns Promise<SavedAnalysis[]> - Array of saved analyses\r\n */\r\nexport async function getSavedAnalyses(): Promise<SavedAnalysis[]> {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/saved-analyses`, {\r\n      method: \"GET\",\r\n      headers: createAuthHeaders(),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(\r\n        errorData.detail || `HTTP error! status: ${response.status}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error getting saved analyses:\", error);\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * Delete a saved analysis\r\n * @param analysisId - The ID of the analysis to delete\r\n * @returns Promise<boolean> - Success status\r\n */\r\nexport async function deleteAnalysis(analysisId: number): Promise<boolean> {\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/delete-analysis/${analysisId}`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: createAuthHeaders(),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new Error(\r\n        errorData.detail || `HTTP error! status: ${response.status}`\r\n      );\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.success;\r\n  } catch (error) {\r\n    console.error(\"Error deleting analysis:\", error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Auth interfaces\r\ninterface AuthRequest {\r\n  email: string;\r\n  password: string;\r\n  name?: string;\r\n}\r\n\r\ninterface AuthResponse {\r\n  success: boolean;\r\n  message: string;\r\n  user_id?: number;\r\n  token?: string;\r\n}\r\n\r\ninterface SavedAnalysis {\r\n  id: number;\r\n  user_id: number;\r\n  text: string;\r\n  result: any;\r\n  title?: string;\r\n  created_at: string;\r\n}\r\n\r\n/**\r\n * Get auth token from localStorage\r\n */\r\nfunction getAuthToken(): string | null {\r\n  if (typeof window !== \"undefined\") {\r\n    // First try to get token from direct storage\r\n    const token = localStorage.getItem(\"auth_token\");\r\n    if (token) return token;\r\n\r\n    // Fallback to getting token from user object\r\n    const userStr = localStorage.getItem(\"user\");\r\n    if (userStr) {\r\n      try {\r\n        const user = JSON.parse(userStr);\r\n        return user.token || null;\r\n      } catch (error) {\r\n        console.error(\"Error parsing user data:\", error);\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/**\r\n * Create auth headers\r\n */\r\nfunction createAuthHeaders(): HeadersInit {\r\n  const token = getAuthToken();\r\n  const headers: HeadersInit = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  if (token) {\r\n    headers[\"Authorization\"] = `Bearer ${token}`;\r\n  }\r\n\r\n  return headers;\r\n}\r\n\r\n/**\r\n * Get the display color for a bias category\r\n * @param category - The bias category\r\n * @returns Object with color and lightColor properties\r\n */\r\nexport function getBiasCategoryColor(category: string): {\r\n  color: string;\r\n  lightColor: string;\r\n} {\r\n  const categoryColors =\r\n    BIAS_CATEGORIES[category as keyof typeof BIAS_CATEGORIES];\r\n  return categoryColors || { color: \"#757575\", lightColor: \"#f5f5f5\" }; // Default gray\r\n}\r\n\r\n/**\r\n * Get all bias categories with their colors\r\n * @returns Array of bias categories with their display information\r\n */\r\nexport function getAllBiasCategories(): Array<{\r\n  name: string;\r\n  color: string;\r\n  lightColor: string;\r\n}> {\r\n  return Object.entries(BIAS_CATEGORIES).map(([name, colors]) => ({\r\n    name,\r\n    ...colors,\r\n  }));\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 734, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/components/TextInput.tsx"],"sourcesContent":["import {\n  ChangeEvent,\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n  useRef,\n} from \"react\";\nimport { getBiasCategoryColor } from \"@/lib/api\";\n\nexport interface FlaggedWord {\n  word: string;\n  startIndex: number;\n  endIndex: number;\n  category: string;\n  explanation?: string;\n}\n\nexport interface ValidationRule {\n  type: \"minLength\" | \"maxLength\" | \"required\" | \"custom\";\n  value?: number;\n  message: string;\n  validator?: (text: string) => boolean;\n}\n\nexport interface TextInputProps {\n  value: string;\n  onChange: (value: string) => void;\n  onClear?: () => void;\n  onAnalyze?: () => void;\n  placeholder?: string;\n  disabled?: boolean;\n  isAnalyzing?: boolean;\n  error?: string | null;\n  label?: string;\n  maxLength?: number;\n  minLength?: number;\n  className?: string;\n  showCharacterCount?: boolean;\n  showClearButton?: boolean;\n  showAnalyzeButton?: boolean;\n  analyzeButtonText?: string;\n  clearButtonText?: string;\n  validateOnChange?: boolean;\n  validationRules?: ValidationRule[];\n  onValidationChange?: (isValid: boolean, errors: string[]) => void;\n  confirmClearThreshold?: number;\n  showClearConfirmation?: boolean;\n  flaggedWords?: FlaggedWord[];\n  onClearHighlights?: () => void;\n  // New props for analysis display\n  analysisText?: string;\n  showAnalysisOutput?: boolean;\n}\n\n// Default empty validation rules (stable reference)\nconst DEFAULT_VALIDATION_RULES: ValidationRule[] = [];\n\n// Create text segments with overlapping category information\nfunction createTextSegments(text: string, flaggedWords: FlaggedWord[]) {\n  if (!flaggedWords || flaggedWords.length === 0) {\n    return [{ text, categories: [] as string[], explanations: [] as string[] }];\n  }\n\n  // Create array to track categories at each character position\n  const charCategories: string[][] = Array(text.length)\n    .fill(null)\n    .map(() => []);\n  const charExplanations: string[][] = Array(text.length)\n    .fill(null)\n    .map(() => []);\n\n  // Mark categories for each character position\n  flaggedWords.forEach((flagged) => {\n    const start = Math.max(0, Math.min(flagged.startIndex, text.length));\n    const end = Math.max(start, Math.min(flagged.endIndex, text.length));\n\n    for (let i = start; i < end; i++) {\n      const categoryArray = charCategories[i];\n      const explanationArray = charExplanations[i];\n\n      if (categoryArray && !categoryArray.includes(flagged.category)) {\n        categoryArray.push(flagged.category);\n        if (flagged.explanation && explanationArray) {\n          explanationArray.push(flagged.explanation);\n        }\n      }\n    }\n  });\n\n  // Group consecutive characters with same category sets\n  const segments: Array<{\n    text: string;\n    categories: string[];\n    explanations: string[];\n  }> = [];\n\n  let currentStart = 0;\n  let currentCategories = charCategories[0] || [];\n  let currentExplanations = charExplanations[0] || [];\n\n  for (let i = 1; i <= text.length; i++) {\n    const nextCategories = i < text.length ? charCategories[i] || [] : [];\n    const nextExplanations = i < text.length ? charExplanations[i] || [] : [];\n\n    // Check if categories changed\n    const categoriesChanged =\n      currentCategories.length !== nextCategories.length ||\n      !currentCategories.every((cat) => nextCategories.includes(cat));\n\n    if (categoriesChanged || i === text.length) {\n      segments.push({\n        text: text.slice(currentStart, i),\n        categories: [...currentCategories],\n        explanations: [...currentExplanations],\n      });\n\n      currentStart = i;\n      currentCategories = nextCategories;\n      currentExplanations = nextExplanations;\n    }\n  }\n\n  return segments;\n}\n\n// Generate gradient CSS for multiple categories\nfunction generateGradientStyle(categories: string[]): React.CSSProperties {\n  if (categories.length === 0) return {};\n\n  if (categories.length === 1 && categories[0]) {\n    const colors = getBiasCategoryColor(categories[0]);\n    return {\n      backgroundColor: colors.lightColor,\n      borderBottom: `2px solid ${colors.color}`,\n      color: colors.color,\n      fontWeight: \"600\",\n    };\n  }\n\n  // Create gradient for multiple categories\n  const colorStops = categories\n    .map((category, index) => {\n      const colors = getBiasCategoryColor(category);\n      const position1 = (index / categories.length) * 100;\n      const position2 = ((index + 1) / categories.length) * 100;\n      return `${colors.lightColor} ${position1}%, ${colors.lightColor} ${position2}%`;\n    })\n    .join(\", \");\n\n  return {\n    background: `linear-gradient(to right, ${colorStops})`,\n    borderBottom: `3px solid transparent`,\n    borderImage: `linear-gradient(to right, ${categories\n      .map((cat) => getBiasCategoryColor(cat).color)\n      .join(\", \")}) 1`,\n    borderImageSlice: 1,\n    color: \"#333\",\n    fontWeight: \"600\",\n  };\n}\n\n// Smart tooltip positioning component\nconst SmartTooltip: React.FC<{\n  children: React.ReactNode;\n  categories: string[];\n  explanations: string[];\n}> = ({ children, categories, explanations }) => {\n  const [position, setPosition] = useState<\"top\" | \"bottom\">(\"top\");\n  const [isVisible, setIsVisible] = useState(false);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  const triggerRef = useRef<HTMLSpanElement>(null);\n\n  const updatePosition = useCallback(() => {\n    if (!triggerRef.current || !tooltipRef.current) return;\n\n    const triggerRect = triggerRef.current.getBoundingClientRect();\n    const viewportHeight = window.innerHeight;\n\n    // Calculate space available above and below\n    const spaceAbove = triggerRect.top;\n    const spaceBelow = viewportHeight - triggerRect.bottom;\n    const tooltipHeight = 80; // simplified content means smaller height\n\n    // Prefer top, but switch to bottom if not enough space above\n    if (spaceAbove >= tooltipHeight + 20) {\n      setPosition(\"top\");\n    } else if (spaceBelow >= tooltipHeight + 20) {\n      setPosition(\"bottom\");\n    } else {\n      // If neither position has enough space, choose the one with more space\n      setPosition(spaceAbove > spaceBelow ? \"top\" : \"bottom\");\n    }\n  }, []);\n\n  const handleMouseEnter = useCallback(() => {\n    setIsVisible(true);\n    // Update position after tooltip becomes visible\n    setTimeout(updatePosition, 0);\n  }, [updatePosition]);\n\n  const handleMouseLeave = useCallback(() => {\n    setIsVisible(false);\n  }, []);\n\n  // Position classes and styles\n  const positionClass =\n    position === \"top\" ? \"bottom-full mb-2\" : \"top-full mt-2\";\n\n  const arrowClass =\n    position === \"top\"\n      ? \"absolute top-full left-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"\n      : \"absolute bottom-full left-1/2 w-0 h-0 border-l-4 border-r-4 border-b-4 border-transparent border-b-gray-900\";\n\n  // Simplified tooltip content\n  const getTooltipContent = () => {\n    if (categories.length === 1) {\n      return categories[0];\n    } else if (categories.length > 1) {\n      return `Multiple biases (${categories.length})`;\n    }\n    return \"Bias detected\";\n  };\n\n  return (\n    <span\n      ref={triggerRef}\n      className=\"relative cursor-help transition-all duration-200 hover:shadow-md\"\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      style={{\n        ...generateGradientStyle(categories),\n        borderRadius: \"3px\",\n        padding: \"2px 3px\",\n        margin: \"0 1px\",\n      }}\n    >\n      {children}\n\n      {/* Simplified smart positioned tooltip */}\n      <div\n        ref={tooltipRef}\n        className={`absolute left-1/2 ${positionClass} bg-gray-900 text-white text-sm px-3 py-2 rounded-md shadow-lg transition-opacity duration-200 z-[10000] whitespace-nowrap pointer-events-none ${\n          isVisible ? \"opacity-100\" : \"opacity-0\"\n        }`}\n        style={{\n          transform: \"translateX(-50%)\",\n          minWidth: \"auto\",\n          maxWidth: \"200px\",\n        }}\n      >\n        <div className=\"font-medium text-center\">{getTooltipContent()}</div>\n\n        {/* Dynamic arrow */}\n        <div\n          className={arrowClass}\n          style={{\n            transform: \"translateX(-50%)\",\n          }}\n        ></div>\n      </div>\n    </span>\n  );\n};\n\n// Analysis Output Component (Read-only display with highlighting)\nconst AnalysisOutput: React.FC<{\n  text: string;\n  flaggedWords: FlaggedWord[];\n  isAnalyzing: boolean;\n}> = ({ text, flaggedWords, isAnalyzing }) => {\n  const renderContent = useCallback(() => {\n    if (isAnalyzing) {\n      return (\n        <div className=\"flex items-center justify-center h-32\">\n          <div className=\"text-gray-500\">Analyzing for bias...</div>\n        </div>\n      );\n    }\n\n    if (!text) {\n      return (\n        <div className=\"text-gray-400 italic\">\n          Analysis results will appear here after you click \"Analyze for Bias\"\n        </div>\n      );\n    }\n\n    if (!flaggedWords || flaggedWords.length === 0) {\n      return (\n        <div className=\"text-gray-900\">\n          <div className=\"text-green-600 font-medium mb-2\">\n            ✓ No bias detected\n          </div>\n          <div>{text}</div>\n        </div>\n      );\n    }\n\n    const segments = createTextSegments(text, flaggedWords);\n\n    return (\n      <div className=\"text-gray-900\">\n        <div className=\"text-orange-600 font-medium mb-3\">\n          ⚠️ {flaggedWords.length} bias issue\n          {flaggedWords.length !== 1 ? \"s\" : \"\"} detected\n        </div>\n        <div className=\"leading-relaxed\">\n          {segments.map((segment, index) => {\n            const segmentKey = `${index}-${segment.text.slice(\n              0,\n              10\n            )}-${segment.categories.join(\"-\")}`;\n\n            if (segment.categories.length > 0) {\n              return (\n                <SmartTooltip\n                  key={segmentKey}\n                  categories={segment.categories}\n                  explanations={segment.explanations}\n                >\n                  {segment.text}\n                </SmartTooltip>\n              );\n            } else {\n              return <span key={segmentKey}>{segment.text}</span>;\n            }\n          })}\n        </div>\n      </div>\n    );\n  }, [text, flaggedWords, isAnalyzing]);\n\n  return (\n    <div className=\"w-full h-full p-6 bg-white border-l border-gray-200 overflow-y-auto\">\n      <div className=\"mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-800\">\n          Analysis Results\n        </h3>\n      </div>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default function TextInput({\n  value,\n  onChange,\n  onClear,\n  onAnalyze,\n  placeholder = \"Type or paste your text here...\",\n  disabled = false,\n  isAnalyzing = false,\n  error = null,\n  label = \"Enter text to analyze\",\n  maxLength = 5000,\n  minLength = 5,\n  className = \"\",\n  showCharacterCount = true,\n  showClearButton = true,\n  showAnalyzeButton = true,\n  analyzeButtonText = \"Analyze for Bias\",\n  clearButtonText = \"Clear\",\n  validateOnChange = true,\n  validationRules = DEFAULT_VALIDATION_RULES,\n  onValidationChange,\n  confirmClearThreshold = 50,\n  showClearConfirmation = true,\n  flaggedWords = [],\n  onClearHighlights,\n  analysisText = \"\",\n  showAnalysisOutput = false,\n}: TextInputProps) {\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\n  const [isValid, setIsValid] = useState(true);\n  const [showConfirmDialog, setShowConfirmDialog] = useState<boolean>(false);\n\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  // Combine default rules with custom rules\n  const allRules = useMemo(() => {\n    const defaultRules: ValidationRule[] = [\n      {\n        type: \"required\",\n        message: \"Text is required\",\n        validator: (text: string) => text.trim().length > 0,\n      },\n      {\n        type: \"minLength\",\n        value: minLength,\n        message: `Text must be at least ${minLength} characters long`,\n        validator: (text: string) => text.trim().length >= minLength,\n      },\n      {\n        type: \"maxLength\",\n        value: maxLength,\n        message: `Text must not exceed ${maxLength} characters`,\n        validator: (text: string) => text.length <= maxLength,\n      },\n    ];\n\n    return [...defaultRules, ...validationRules];\n  }, [minLength, maxLength, validationRules]);\n\n  // Validation function\n  const validateText = useCallback(\n    (text: string): { isValid: boolean; errors: string[] } => {\n      const errors: string[] = [];\n\n      for (const rule of allRules) {\n        let isRuleValid = false;\n\n        switch (rule.type) {\n          case \"required\":\n            isRuleValid = text.trim().length > 0;\n            break;\n          case \"minLength\":\n            isRuleValid =\n              text.trim().length === 0 ||\n              text.trim().length >= (rule.value || minLength);\n            break;\n          case \"maxLength\":\n            isRuleValid = text.length <= (rule.value || maxLength);\n            break;\n          case \"custom\":\n            isRuleValid = rule.validator ? rule.validator(text) : true;\n            break;\n          default:\n            isRuleValid = true;\n        }\n\n        if (!isRuleValid) {\n          errors.push(rule.message);\n        }\n      }\n\n      return {\n        isValid: errors.length === 0,\n        errors,\n      };\n    },\n    [allRules, minLength, maxLength]\n  );\n\n  // Effect to validate on value change\n  useEffect(() => {\n    if (validateOnChange) {\n      const { isValid: valid, errors } = validateText(value);\n      setIsValid(valid);\n      setValidationErrors(errors);\n    }\n  }, [value, validateOnChange, validateText]);\n\n  // Effect to notify parent of validation changes\n  useEffect(() => {\n    if (onValidationChange && validateOnChange) {\n      onValidationChange(isValid, validationErrors);\n    }\n  }, [isValid, validationErrors, onValidationChange, validateOnChange]);\n\n  const handleTextChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    onChange(e.target.value);\n  };\n\n  const handleConfirmClear = useCallback(() => {\n    setShowConfirmDialog(false);\n    if (onClear) {\n      onClear();\n    }\n  }, [onClear]);\n\n  const handleCancelClear = useCallback(() => {\n    setShowConfirmDialog(false);\n  }, []);\n\n  const handleClearClick = () => {\n    // Check if we need to show confirmation dialog\n    if (showClearConfirmation && value.length >= confirmClearThreshold) {\n      setShowConfirmDialog(true);\n    } else {\n      // Clear immediately if no confirmation needed\n      if (onClear) {\n        onClear();\n      }\n    }\n  };\n\n  const handleAnalyzeClick = () => {\n    if (onAnalyze) {\n      onAnalyze();\n    }\n  };\n\n  // Effect to handle keyboard events and click outside for confirmation dialog\n  useEffect(() => {\n    if (showConfirmDialog) {\n      const handleKeyDown = (e: globalThis.KeyboardEvent) => {\n        if (e.key === \"Escape\") {\n          handleCancelClear();\n        } else if (e.key === \"Enter\") {\n          handleConfirmClear();\n        }\n      };\n\n      const handleClickOutside = (e: MouseEvent) => {\n        if (\n          dialogRef.current &&\n          !dialogRef.current.contains(e.target as Node)\n        ) {\n          handleCancelClear();\n        }\n      };\n\n      document.addEventListener(\"keydown\", handleKeyDown);\n      document.addEventListener(\"mousedown\", handleClickOutside);\n\n      return () => {\n        document.removeEventListener(\"keydown\", handleKeyDown);\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }\n    return undefined;\n  }, [showConfirmDialog, handleConfirmClear, handleCancelClear]);\n\n  const isAtLimit = value.length >= maxLength;\n  const isNearLimit = value.length >= maxLength * 0.8;\n  const characterCountColor = isAtLimit\n    ? \"text-red-500 font-semibold\"\n    : isNearLimit\n    ? \"text-amber-500 font-medium\"\n    : \"text-gray-500\";\n\n  return (\n    <div className={`h-full ${className}`}>\n      <div className=\"flex h-full\">\n        {/* Input Panel */}\n        <div className=\"flex-1 flex flex-col\">\n          <div className=\"flex-1 relative\">\n            {/* Background layer */}\n            <div className=\"absolute inset-0 bg-gray-50 z-0\"></div>\n\n            {/* Simple textarea input */}\n            <textarea\n              ref={textareaRef}\n              id=\"text-input\"\n              value={value}\n              onChange={handleTextChange}\n              placeholder={placeholder}\n              maxLength={maxLength}\n              className=\"w-full h-full px-6 py-6 placeholder-gray-400 text-gray-900 focus:outline-none resize-none border-0 relative z-10 bg-transparent\"\n              disabled={disabled || isAnalyzing}\n            />\n          </div>\n\n          {/* Input Controls */}\n          <div className=\"border-t border-gray-200 px-6 py-4 bg-white\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                {showClearButton && (\n                  <button\n                    onClick={handleClearClick}\n                    disabled={!value || disabled || isAnalyzing}\n                    className=\"px-4 py-2 text-sm font-medium text-gray-600 bg-gray-100 rounded-md hover:bg-gray-200 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                  >\n                    {clearButtonText}\n                  </button>\n                )}\n\n                {showAnalyzeButton && (\n                  <button\n                    onClick={handleAnalyzeClick}\n                    disabled={!value.trim() || disabled || isAnalyzing}\n                    className=\"px-6 py-2 text-sm font-medium text-white bg-red-500 rounded-md hover:bg-red-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                  >\n                    {isAnalyzing ? \"Analyzing...\" : analyzeButtonText}\n                  </button>\n                )}\n              </div>\n\n              {showCharacterCount && (\n                <div className={`text-sm ${characterCountColor}`}>\n                  {value.length} / {maxLength} characters\n                </div>\n              )}\n            </div>\n\n            {/* Validation errors */}\n            {validationErrors.length > 0 && (\n              <div className=\"mt-2\">\n                {validationErrors.map((error, index) => (\n                  <p key={index} className=\"text-sm text-red-600\">\n                    {error}\n                  </p>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Analysis Output Panel */}\n        {showAnalysisOutput && (\n          <div className=\"flex-1\">\n            <AnalysisOutput\n              text={analysisText}\n              flaggedWords={flaggedWords}\n              isAnalyzing={isAnalyzing}\n            />\n          </div>\n        )}\n      </div>\n\n      {/* Clear confirmation dialog */}\n      {showConfirmDialog && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div\n            ref={dialogRef}\n            className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\"\n          >\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n              Confirm Clear\n            </h3>\n            <p className=\"text-gray-600 mb-6\">\n              Are you sure you want to clear all text? This action cannot be\n              undone.\n            </p>\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={handleCancelClear}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleConfirmClear}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700\"\n              >\n                Clear Text\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAQA;;;;AA+CA,oDAAoD;AACpD,MAAM,2BAA6C,EAAE;AAErD,6DAA6D;AAC7D,SAAS,mBAAmB,IAAY,EAAE,YAA2B;IACnE,IAAI,CAAC,gBAAgB,aAAa,MAAM,KAAK,GAAG;QAC9C,OAAO;YAAC;gBAAE;gBAAM,YAAY,EAAE;gBAAc,cAAc,EAAE;YAAa;SAAE;IAC7E;IAEA,8DAA8D;IAC9D,MAAM,iBAA6B,MAAM,KAAK,MAAM,EACjD,IAAI,CAAC,MACL,GAAG,CAAC,IAAM,EAAE;IACf,MAAM,mBAA+B,MAAM,KAAK,MAAM,EACnD,IAAI,CAAC,MACL,GAAG,CAAC,IAAM,EAAE;IAEf,8CAA8C;IAC9C,aAAa,OAAO,CAAC,CAAC;QACpB,MAAM,QAAQ,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,QAAQ,UAAU,EAAE,KAAK,MAAM;QAClE,MAAM,MAAM,KAAK,GAAG,CAAC,OAAO,KAAK,GAAG,CAAC,QAAQ,QAAQ,EAAE,KAAK,MAAM;QAElE,IAAK,IAAI,IAAI,OAAO,IAAI,KAAK,IAAK;YAChC,MAAM,gBAAgB,cAAc,CAAC,EAAE;YACvC,MAAM,mBAAmB,gBAAgB,CAAC,EAAE;YAE5C,IAAI,iBAAiB,CAAC,cAAc,QAAQ,CAAC,QAAQ,QAAQ,GAAG;gBAC9D,cAAc,IAAI,CAAC,QAAQ,QAAQ;gBACnC,IAAI,QAAQ,WAAW,IAAI,kBAAkB;oBAC3C,iBAAiB,IAAI,CAAC,QAAQ,WAAW;gBAC3C;YACF;QACF;IACF;IAEA,uDAAuD;IACvD,MAAM,WAID,EAAE;IAEP,IAAI,eAAe;IACnB,IAAI,oBAAoB,cAAc,CAAC,EAAE,IAAI,EAAE;IAC/C,IAAI,sBAAsB,gBAAgB,CAAC,EAAE,IAAI,EAAE;IAEnD,IAAK,IAAI,IAAI,GAAG,KAAK,KAAK,MAAM,EAAE,IAAK;QACrC,MAAM,iBAAiB,IAAI,KAAK,MAAM,GAAG,cAAc,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE;QACrE,MAAM,mBAAmB,IAAI,KAAK,MAAM,GAAG,gBAAgB,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE;QAEzE,8BAA8B;QAC9B,MAAM,oBACJ,kBAAkB,MAAM,KAAK,eAAe,MAAM,IAClD,CAAC,kBAAkB,KAAK,CAAC,CAAC,MAAQ,eAAe,QAAQ,CAAC;QAE5D,IAAI,qBAAqB,MAAM,KAAK,MAAM,EAAE;YAC1C,SAAS,IAAI,CAAC;gBACZ,MAAM,KAAK,KAAK,CAAC,cAAc;gBAC/B,YAAY;uBAAI;iBAAkB;gBAClC,cAAc;uBAAI;iBAAoB;YACxC;YAEA,eAAe;YACf,oBAAoB;YACpB,sBAAsB;QACxB;IACF;IAEA,OAAO;AACT;AAEA,gDAAgD;AAChD,SAAS,sBAAsB,UAAoB;IACjD,IAAI,WAAW,MAAM,KAAK,GAAG,OAAO,CAAC;IAErC,IAAI,WAAW,MAAM,KAAK,KAAK,UAAU,CAAC,EAAE,EAAE;QAC5C,MAAM,SAAS,CAAA,GAAA,iHAAA,CAAA,uBAAoB,AAAD,EAAE,UAAU,CAAC,EAAE;QACjD,OAAO;YACL,iBAAiB,OAAO,UAAU;YAClC,cAAc,CAAC,UAAU,EAAE,OAAO,KAAK,EAAE;YACzC,OAAO,OAAO,KAAK;YACnB,YAAY;QACd;IACF;IAEA,0CAA0C;IAC1C,MAAM,aAAa,WAChB,GAAG,CAAC,CAAC,UAAU;QACd,MAAM,SAAS,CAAA,GAAA,iHAAA,CAAA,uBAAoB,AAAD,EAAE;QACpC,MAAM,YAAY,AAAC,QAAQ,WAAW,MAAM,GAAI;QAChD,MAAM,YAAY,AAAC,CAAC,QAAQ,CAAC,IAAI,WAAW,MAAM,GAAI;QACtD,OAAO,GAAG,OAAO,UAAU,CAAC,CAAC,EAAE,UAAU,GAAG,EAAE,OAAO,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;IACjF,GACC,IAAI,CAAC;IAER,OAAO;QACL,YAAY,CAAC,0BAA0B,EAAE,WAAW,CAAC,CAAC;QACtD,cAAc,CAAC,qBAAqB,CAAC;QACrC,aAAa,CAAC,0BAA0B,EAAE,WACvC,GAAG,CAAC,CAAC,MAAQ,CAAA,GAAA,iHAAA,CAAA,uBAAoB,AAAD,EAAE,KAAK,KAAK,EAC5C,IAAI,CAAC,MAAM,GAAG,CAAC;QAClB,kBAAkB;QAClB,OAAO;QACP,YAAY;IACd;AACF;AAEA,sCAAsC;AACtC,MAAM,eAID,CAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE;IAC1C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IAC3D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAC1C,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAmB;IAE3C,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACjC,IAAI,CAAC,WAAW,OAAO,IAAI,CAAC,WAAW,OAAO,EAAE;QAEhD,MAAM,cAAc,WAAW,OAAO,CAAC,qBAAqB;QAC5D,MAAM,iBAAiB,OAAO,WAAW;QAEzC,4CAA4C;QAC5C,MAAM,aAAa,YAAY,GAAG;QAClC,MAAM,aAAa,iBAAiB,YAAY,MAAM;QACtD,MAAM,gBAAgB,IAAI,0CAA0C;QAEpE,6DAA6D;QAC7D,IAAI,cAAc,gBAAgB,IAAI;YACpC,YAAY;QACd,OAAO,IAAI,cAAc,gBAAgB,IAAI;YAC3C,YAAY;QACd,OAAO;YACL,uEAAuE;YACvE,YAAY,aAAa,aAAa,QAAQ;QAChD;IACF,GAAG,EAAE;IAEL,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACnC,aAAa;QACb,gDAAgD;QAChD,WAAW,gBAAgB;IAC7B,GAAG;QAAC;KAAe;IAEnB,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACnC,aAAa;IACf,GAAG,EAAE;IAEL,8BAA8B;IAC9B,MAAM,gBACJ,aAAa,QAAQ,qBAAqB;IAE5C,MAAM,aACJ,aAAa,QACT,6GACA;IAEN,6BAA6B;IAC7B,MAAM,oBAAoB;QACxB,IAAI,WAAW,MAAM,KAAK,GAAG;YAC3B,OAAO,UAAU,CAAC,EAAE;QACtB,OAAO,IAAI,WAAW,MAAM,GAAG,GAAG;YAChC,OAAO,CAAC,iBAAiB,EAAE,WAAW,MAAM,CAAC,CAAC,CAAC;QACjD;QACA,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,WAAU;QACV,cAAc;QACd,cAAc;QACd,OAAO;YACL,GAAG,sBAAsB,WAAW;YACpC,cAAc;YACd,SAAS;YACT,QAAQ;QACV;;YAEC;0BAGD,8OAAC;gBACC,KAAK;gBACL,WAAW,CAAC,kBAAkB,EAAE,cAAc,+IAA+I,EAC3L,YAAY,gBAAgB,aAC5B;gBACF,OAAO;oBACL,WAAW;oBACX,UAAU;oBACV,UAAU;gBACZ;;kCAEA,8OAAC;wBAAI,WAAU;kCAA2B;;;;;;kCAG1C,8OAAC;wBACC,WAAW;wBACX,OAAO;4BACL,WAAW;wBACb;;;;;;;;;;;;;;;;;;AAKV;AAEA,kEAAkE;AAClE,MAAM,iBAID,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,WAAW,EAAE;IACvC,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAChC,IAAI,aAAa;YACf,qBACE,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BAAgB;;;;;;;;;;;QAGrC;QAEA,IAAI,CAAC,MAAM;YACT,qBACE,8OAAC;gBAAI,WAAU;0BAAuB;;;;;;QAI1C;QAEA,IAAI,CAAC,gBAAgB,aAAa,MAAM,KAAK,GAAG;YAC9C,qBACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAAkC;;;;;;kCAGjD,8OAAC;kCAAK;;;;;;;;;;;;QAGZ;QAEA,MAAM,WAAW,mBAAmB,MAAM;QAE1C,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;wBAAmC;wBAC5C,aAAa,MAAM;wBAAC;wBACvB,aAAa,MAAM,KAAK,IAAI,MAAM;wBAAG;;;;;;;8BAExC,8OAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,SAAS;wBACtB,MAAM,aAAa,GAAG,MAAM,CAAC,EAAE,QAAQ,IAAI,CAAC,KAAK,CAC/C,GACA,IACA,CAAC,EAAE,QAAQ,UAAU,CAAC,IAAI,CAAC,MAAM;wBAEnC,IAAI,QAAQ,UAAU,CAAC,MAAM,GAAG,GAAG;4BACjC,qBACE,8OAAC;gCAEC,YAAY,QAAQ,UAAU;gCAC9B,cAAc,QAAQ,YAAY;0CAEjC,QAAQ,IAAI;+BAJR;;;;;wBAOX,OAAO;4BACL,qBAAO,8OAAC;0CAAuB,QAAQ,IAAI;+BAAzB;;;;;wBACpB;oBACF;;;;;;;;;;;;IAIR,GAAG;QAAC;QAAM;QAAc;KAAY;IAEpC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAG,WAAU;8BAAsC;;;;;;;;;;;YAIrD;;;;;;;AAGP;AAEe,SAAS,UAAU,EAChC,KAAK,EACL,QAAQ,EACR,OAAO,EACP,SAAS,EACT,cAAc,iCAAiC,EAC/C,WAAW,KAAK,EAChB,cAAc,KAAK,EACnB,QAAQ,IAAI,EACZ,QAAQ,uBAAuB,EAC/B,YAAY,IAAI,EAChB,YAAY,CAAC,EACb,YAAY,EAAE,EACd,qBAAqB,IAAI,EACzB,kBAAkB,IAAI,EACtB,oBAAoB,IAAI,EACxB,oBAAoB,kBAAkB,EACtC,kBAAkB,OAAO,EACzB,mBAAmB,IAAI,EACvB,kBAAkB,wBAAwB,EAC1C,kBAAkB,EAClB,wBAAwB,EAAE,EAC1B,wBAAwB,IAAI,EAC5B,eAAe,EAAE,EACjB,iBAAiB,EACjB,eAAe,EAAE,EACjB,qBAAqB,KAAK,EACX;IACf,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACrE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAEpE,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAuB;IAChD,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAEzC,0CAA0C;IAC1C,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACvB,MAAM,eAAiC;YACrC;gBACE,MAAM;gBACN,SAAS;gBACT,WAAW,CAAC,OAAiB,KAAK,IAAI,GAAG,MAAM,GAAG;YACpD;YACA;gBACE,MAAM;gBACN,OAAO;gBACP,SAAS,CAAC,sBAAsB,EAAE,UAAU,gBAAgB,CAAC;gBAC7D,WAAW,CAAC,OAAiB,KAAK,IAAI,GAAG,MAAM,IAAI;YACrD;YACA;gBACE,MAAM;gBACN,OAAO;gBACP,SAAS,CAAC,qBAAqB,EAAE,UAAU,WAAW,CAAC;gBACvD,WAAW,CAAC,OAAiB,KAAK,MAAM,IAAI;YAC9C;SACD;QAED,OAAO;eAAI;eAAiB;SAAgB;IAC9C,GAAG;QAAC;QAAW;QAAW;KAAgB;IAE1C,sBAAsB;IACtB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAC7B,CAAC;QACC,MAAM,SAAmB,EAAE;QAE3B,KAAK,MAAM,QAAQ,SAAU;YAC3B,IAAI,cAAc;YAElB,OAAQ,KAAK,IAAI;gBACf,KAAK;oBACH,cAAc,KAAK,IAAI,GAAG,MAAM,GAAG;oBACnC;gBACF,KAAK;oBACH,cACE,KAAK,IAAI,GAAG,MAAM,KAAK,KACvB,KAAK,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,KAAK,IAAI,SAAS;oBAChD;gBACF,KAAK;oBACH,cAAc,KAAK,MAAM,IAAI,CAAC,KAAK,KAAK,IAAI,SAAS;oBACrD;gBACF,KAAK;oBACH,cAAc,KAAK,SAAS,GAAG,KAAK,SAAS,CAAC,QAAQ;oBACtD;gBACF;oBACE,cAAc;YAClB;YAEA,IAAI,CAAC,aAAa;gBAChB,OAAO,IAAI,CAAC,KAAK,OAAO;YAC1B;QACF;QAEA,OAAO;YACL,SAAS,OAAO,MAAM,KAAK;YAC3B;QACF;IACF,GACA;QAAC;QAAU;QAAW;KAAU;IAGlC,qCAAqC;IACrC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,kBAAkB;YACpB,MAAM,EAAE,SAAS,KAAK,EAAE,MAAM,EAAE,GAAG,aAAa;YAChD,WAAW;YACX,oBAAoB;QACtB;IACF,GAAG;QAAC;QAAO;QAAkB;KAAa;IAE1C,gDAAgD;IAChD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,sBAAsB,kBAAkB;YAC1C,mBAAmB,SAAS;QAC9B;IACF,GAAG;QAAC;QAAS;QAAkB;QAAoB;KAAiB;IAEpE,MAAM,mBAAmB,CAAC;QACxB,SAAS,EAAE,MAAM,CAAC,KAAK;IACzB;IAEA,MAAM,qBAAqB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACrC,qBAAqB;QACrB,IAAI,SAAS;YACX;QACF;IACF,GAAG;QAAC;KAAQ;IAEZ,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACpC,qBAAqB;IACvB,GAAG,EAAE;IAEL,MAAM,mBAAmB;QACvB,+CAA+C;QAC/C,IAAI,yBAAyB,MAAM,MAAM,IAAI,uBAAuB;YAClE,qBAAqB;QACvB,OAAO;YACL,8CAA8C;YAC9C,IAAI,SAAS;gBACX;YACF;QACF;IACF;IAEA,MAAM,qBAAqB;QACzB,IAAI,WAAW;YACb;QACF;IACF;IAEA,6EAA6E;IAC7E,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,mBAAmB;YACrB,MAAM,gBAAgB,CAAC;gBACrB,IAAI,EAAE,GAAG,KAAK,UAAU;oBACtB;gBACF,OAAO,IAAI,EAAE,GAAG,KAAK,SAAS;oBAC5B;gBACF;YACF;YAEA,MAAM,qBAAqB,CAAC;gBAC1B,IACE,UAAU,OAAO,IACjB,CAAC,UAAU,OAAO,CAAC,QAAQ,CAAC,EAAE,MAAM,GACpC;oBACA;gBACF;YACF;YAEA,SAAS,gBAAgB,CAAC,WAAW;YACrC,SAAS,gBAAgB,CAAC,aAAa;YAEvC,OAAO;gBACL,SAAS,mBAAmB,CAAC,WAAW;gBACxC,SAAS,mBAAmB,CAAC,aAAa;YAC5C;QACF;QACA,OAAO;IACT,GAAG;QAAC;QAAmB;QAAoB;KAAkB;IAE7D,MAAM,YAAY,MAAM,MAAM,IAAI;IAClC,MAAM,cAAc,MAAM,MAAM,IAAI,YAAY;IAChD,MAAM,sBAAsB,YACxB,+BACA,cACA,+BACA;IAEJ,qBACE,8OAAC;QAAI,WAAW,CAAC,OAAO,EAAE,WAAW;;0BACnC,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDAEb,8OAAC;wCAAI,WAAU;;;;;;kDAGf,8OAAC;wCACC,KAAK;wCACL,IAAG;wCACH,OAAO;wCACP,UAAU;wCACV,aAAa;wCACb,WAAW;wCACX,WAAU;wCACV,UAAU,YAAY;;;;;;;;;;;;0CAK1B,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;oDACZ,iCACC,8OAAC;wDACC,SAAS;wDACT,UAAU,CAAC,SAAS,YAAY;wDAChC,WAAU;kEAET;;;;;;oDAIJ,mCACC,8OAAC;wDACC,SAAS;wDACT,UAAU,CAAC,MAAM,IAAI,MAAM,YAAY;wDACvC,WAAU;kEAET,cAAc,iBAAiB;;;;;;;;;;;;4CAKrC,oCACC,8OAAC;gDAAI,WAAW,CAAC,QAAQ,EAAE,qBAAqB;;oDAC7C,MAAM,MAAM;oDAAC;oDAAI;oDAAU;;;;;;;;;;;;;oCAMjC,iBAAiB,MAAM,GAAG,mBACzB,8OAAC;wCAAI,WAAU;kDACZ,iBAAiB,GAAG,CAAC,CAAC,OAAO,sBAC5B,8OAAC;gDAAc,WAAU;0DACtB;+CADK;;;;;;;;;;;;;;;;;;;;;;oBAUjB,oCACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,MAAM;4BACN,cAAc;4BACd,aAAa;;;;;;;;;;;;;;;;;YAOpB,mCACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,KAAK;oBACL,WAAU;;sCAEV,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCAGvD,8OAAC;4BAAE,WAAU;sCAAqB;;;;;;sCAIlC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;8CAGD,8OAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASf","debugId":null}},
    {"offset": {"line": 1437, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/components/IssuesPanel.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { AnalysisResult, FlaggedWord } from \"@/types\";\r\nimport { getBiasCategoryColor } from \"@/lib/api\";\r\n\r\ninterface IssuesPanelProps {\r\n  analysisResult: AnalysisResult | null;\r\n  isAnalyzing: boolean;\r\n  onWordReplace: (originalWord: string, newWord: string) => void;\r\n  onIssueClick?: (issue: FlaggedWord) => void;\r\n  // Text input controls\r\n  text: string;\r\n  onClear: () => void;\r\n  onAnalyze: () => void;\r\n  maxLength: number;\r\n  // Error handling\r\n  error?: string | null;\r\n  validationErrors?: string[];\r\n}\r\n\r\nexport function IssuesPanel({\r\n  analysisResult,\r\n  isAnalyzing,\r\n  onWordReplace,\r\n  text,\r\n  onClear,\r\n  onAnalyze,\r\n  maxLength,\r\n  error,\r\n  validationErrors = [],\r\n}: IssuesPanelProps) {\r\n  return (\r\n    <div className=\"w-full lg:w-96 h-full bg-white border-l border-gray-200\">\r\n      <div className=\"h-full flex flex-col\">\r\n        {/* Header */}\r\n        {analysisResult && (\r\n          <div className=\"sticky top-0 bg-gray-50 border-b border-gray-200 p-4\">\r\n            <div className=\"space-y-3\">\r\n              <div className=\"bg-white rounded-lg p-3 border border-gray-200\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-lg font-bold text-red-600\">\r\n                    Issues:{\" \"}\r\n                    {analysisResult.summary?.total_bias_instances ||\r\n                      analysisResult.bias_spans?.length ||\r\n                      0}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600 mt-1\">\r\n                    {analysisResult.summary?.categories_detected?.length || 0}{\" \"}\r\n                    categories detected\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Categories detected */}\r\n              {analysisResult.summary?.categories_detected &&\r\n                analysisResult.summary.categories_detected.length > 0 && (\r\n                  <div className=\"bg-white rounded-lg p-3 border border-gray-200\">\r\n                    <div className=\"text-sm font-medium text-gray-700 mb-2\">\r\n                      Categories Found:\r\n                    </div>\r\n                    <div className=\"flex flex-wrap gap-1\">\r\n                      {analysisResult.summary.categories_detected.map(\r\n                        (category, index) => {\r\n                          const colors = getBiasCategoryColor(category);\r\n                          return (\r\n                            <span\r\n                              key={index}\r\n                              className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium\"\r\n                              style={{\r\n                                backgroundColor: colors.lightColor,\r\n                                color: colors.color,\r\n                                border: `1px solid ${colors.color}30`,\r\n                              }}\r\n                            >\r\n                              {category}\r\n                            </span>\r\n                          );\r\n                        }\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Content */}\r\n        <div className=\"flex-1 overflow-y-auto p-6 space-y-4 custom-scrollbar\">\r\n          {isAnalyzing && (\r\n            <div className=\"flex items-center justify-center py-12\">\r\n              <div className=\"text-center\">\r\n                <div className=\"w-12 h-12 border-4 border-red-200 border-t-red-600 rounded-full animate-spin mx-auto mb-4\"></div>\r\n                <p className=\"text-gray-600 font-medium\">\r\n                  Analyzing text for bias...\r\n                </p>\r\n                <p className=\"text-sm text-gray-500 mt-1\">\r\n                  This may take a moment\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {!isAnalyzing &&\r\n            (!analysisResult || analysisResult.flaggedWords.length === 0) && (\r\n              <div className=\"flex flex-col items-center justify-center py-12 text-center\">\r\n                <div className=\"w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mb-4\">\r\n                  <svg\r\n                    className=\"w-8 h-8 text-green-600\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M5 13l4 4L19 7\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\r\n                  {analysisResult ? \"No Issues Found!\" : \"Ready to Analyze\"}\r\n                </h3>\r\n                <p className=\"text-gray-600 text-sm leading-relaxed\">\r\n                  {analysisResult\r\n                    ? \"Your text looks great! No bias or problematic language detected.\"\r\n                    : 'Enter some text and click \"Analyze Text\" to get started.'}\r\n                </p>\r\n              </div>\r\n            )}\r\n\r\n          {!isAnalyzing &&\r\n            analysisResult &&\r\n            analysisResult.flaggedWords.length > 0 && (\r\n              <div className=\"space-y-3\">\r\n                <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">\r\n                  Bias Detected:\r\n                </h3>\r\n                <div className=\"space-y-3\">\r\n                  {analysisResult.flaggedWords.map((issue, index) => {\r\n                    const colors = getBiasCategoryColor(issue.category);\r\n                    return (\r\n                      <div\r\n                        key={index}\r\n                        className=\"border rounded-lg p-4 hover:shadow-sm transition-all duration-200 group relative\"\r\n                        style={{\r\n                          backgroundColor: colors.lightColor,\r\n                          borderColor: `${colors.color}40`,\r\n                        }}\r\n                      >\r\n                        <div className=\"space-y-3\">\r\n                          {/* Header with category and text */}\r\n                          <div className=\"flex items-start justify-between gap-3\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <div\r\n                                className=\"w-3 h-3 rounded-full flex-shrink-0\"\r\n                                style={{ backgroundColor: colors.color }}\r\n                              ></div>\r\n                              <span\r\n                                className=\"text-xs font-medium px-2 py-1 rounded-full\"\r\n                                style={{\r\n                                  backgroundColor: colors.color,\r\n                                  color: \"white\",\r\n                                }}\r\n                              >\r\n                                {issue.category}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Flagged text */}\r\n                          <div className=\"space-y-2\">\r\n                            <div className=\"text-sm font-medium text-gray-700\">\r\n                              Flagged text:\r\n                            </div>\r\n                            <div\r\n                              className=\"font-medium text-sm p-2 rounded border\"\r\n                              style={{\r\n                                backgroundColor: \"white\",\r\n                                borderColor: colors.color,\r\n                                color: colors.color,\r\n                              }}\r\n                            >\r\n                              &ldquo;{issue.word}&rdquo;\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Explanation */}\r\n                          {issue.explanation && (\r\n                            <div className=\"space-y-2\">\r\n                              <div className=\"text-sm font-medium text-gray-700\">\r\n                                Why this is problematic:\r\n                              </div>\r\n                              <div className=\"text-sm text-gray-600 leading-relaxed\">\r\n                                {issue.explanation}\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n\r\n                          {/* Suggestion */}\r\n                          {issue.suggestions &&\r\n                            issue.suggestions.length > 0 &&\r\n                            issue.suggestions[0]?.word && (\r\n                              <div className=\"space-y-2\">\r\n                                <div className=\"text-sm font-medium text-gray-700\">\r\n                                  Suggested revision:\r\n                                </div>\r\n                                <div className=\"bg-white p-2 rounded border border-green-200\">\r\n                                  <div className=\"text-sm text-green-700 font-medium\">\r\n                                    &ldquo;{issue.suggestions[0].word}&rdquo;\r\n                                  </div>\r\n                                </div>\r\n                                <button\r\n                                  onClick={() =>\r\n                                    onWordReplace(\r\n                                      issue.word,\r\n                                      issue.suggestions[0]?.word || \"\"\r\n                                    )\r\n                                  }\r\n                                  className=\"text-xs text-blue-600 hover:text-blue-800 underline\"\r\n                                >\r\n                                  Apply this suggestion\r\n                                </button>\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n        </div>\r\n\r\n        {/* Text Input Controls */}\r\n        <div className=\"sticky bottom-0 bg-white border-t border-gray-200 p-6\">\r\n          <div className=\"space-y-4\">\r\n            {/* Validation Errors */}\r\n            {(error || (validationErrors && validationErrors.length > 0)) && (\r\n              <div className=\"space-y-2\">\r\n                {error && (\r\n                  <div className=\"flex items-center gap-2 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n                    <svg\r\n                      className=\"w-4 h-4 text-red-500 flex-shrink-0\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                      />\r\n                    </svg>\r\n                    <span className=\"text-sm font-medium text-red-700\">\r\n                      {error}\r\n                    </span>\r\n                  </div>\r\n                )}\r\n                {validationErrors &&\r\n                  validationErrors.map((validationError, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"flex items-center gap-2 p-3 bg-amber-50 border border-amber-200 rounded-lg\"\r\n                    >\r\n                      <svg\r\n                        className=\"w-4 h-4 text-amber-500 flex-shrink-0\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        viewBox=\"0 0 24 24\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth={2}\r\n                          d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.664-.833-2.464 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z\"\r\n                        />\r\n                      </svg>\r\n                      <span className=\"text-sm font-medium text-amber-700\">\r\n                        {validationError}\r\n                      </span>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            )}\r\n\r\n            {/* Character Count */}\r\n            <div\r\n              className={`text-sm flex items-center gap-1 ${\r\n                text.length >= maxLength\r\n                  ? \"text-red-500 font-semibold\"\r\n                  : text.length >= maxLength * 0.8\r\n                  ? \"text-amber-500 font-medium\"\r\n                  : \"text-gray-500\"\r\n              }`}\r\n            >\r\n              <svg\r\n                className=\"w-4 h-4\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\r\n                />\r\n              </svg>\r\n              {text.length} / {maxLength} characters\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"flex flex-col gap-3\">\r\n              <button\r\n                onClick={onClear}\r\n                disabled={!text || isAnalyzing}\r\n                className=\"w-full px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n              >\r\n                Clear Text\r\n              </button>\r\n\r\n              <button\r\n                onClick={onAnalyze}\r\n                disabled={!text.trim() || isAnalyzing}\r\n                className=\"w-full px-4 py-2 text-sm font-medium text-white bg-red-500 border border-transparent rounded-lg hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n              >\r\n                {isAnalyzing ? (\r\n                  <div className=\"flex items-center justify-center gap-2\">\r\n                    <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\r\n                    Analyzing...\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex items-center justify-center gap-2\">\r\n                    <svg\r\n                      className=\"w-4 h-4\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M13 10V3L4 14h7v7l9-11h-7z\"\r\n                      />\r\n                    </svg>\r\n                    Analyze for Bias\r\n                  </div>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2060, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/components/BiasDetectionApp.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { BiasAnalysisResponse, BiasSpan } from \"@/types\";\r\nimport { analyzeBias } from \"@/lib/api\";\r\nimport TextInput, { FlaggedWord } from \"@/components/TextInput\";\r\nimport IssuesPanel from \"@/components/IssuesPanel\";\r\nimport { useAuth } from \"@/components/AuthContext\";\r\n\r\nconst BiasDetectionApp: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [analysisText, setAnalysisText] = useState(\"\");\r\n  const [analysisResults, setAnalysisResults] =\r\n    useState<BiasAnalysisResponse | null>(null);\r\n  const [flaggedWords, setFlaggedWords] = useState<FlaggedWord[]>([]);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [showAnalysisOutput, setShowAnalysisOutput] = useState(false);\r\n\r\n  // Convert BiasSpan to FlaggedWord format\r\n  const convertToFlaggedWords = useCallback(\r\n    (biasSpans: BiasSpan[]): FlaggedWord[] => {\r\n      return biasSpans.map((span) => ({\r\n        word: span.text,\r\n        startIndex: span.start,\r\n        endIndex: span.end,\r\n        category: span.category,\r\n        explanation: span.explanation,\r\n      }));\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleAnalyze = useCallback(async () => {\r\n    if (!inputText.trim()) {\r\n      setError(\"Please enter some text to analyze\");\r\n      return;\r\n    }\r\n\r\n    setIsAnalyzing(true);\r\n    setError(null);\r\n    setShowAnalysisOutput(true);\r\n\r\n    try {\r\n      const response = await analyzeBias(inputText);\r\n      setAnalysisResults(response);\r\n      setAnalysisText(inputText); // Set the text that was analyzed\r\n\r\n      if (response.bias_spans && response.bias_spans.length > 0) {\r\n        const flagged = convertToFlaggedWords(response.bias_spans);\r\n        setFlaggedWords(flagged);\r\n      } else {\r\n        setFlaggedWords([]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Analysis error:\", err);\r\n      setError(\r\n        err instanceof Error ? err.message : \"An error occurred during analysis\"\r\n      );\r\n      setAnalysisResults(null);\r\n      setFlaggedWords([]);\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  }, [inputText, convertToFlaggedWords]);\r\n\r\n  const handleClear = useCallback(() => {\r\n    setInputText(\"\");\r\n    setAnalysisText(\"\");\r\n    setAnalysisResults(null);\r\n    setFlaggedWords([]);\r\n    setError(null);\r\n    setShowAnalysisOutput(false);\r\n  }, []);\r\n\r\n  const handleClearHighlights = useCallback(() => {\r\n    setFlaggedWords([]);\r\n    setAnalysisResults(null);\r\n  }, []);\r\n\r\n  const handleInputChange = useCallback((newText: string) => {\r\n    setInputText(newText);\r\n    setError(null);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\r\n        <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n          {/* Header */}\r\n          <div className=\"bg-gradient-to-r from-red-500 to-pink-500 px-6 py-4\">\r\n            <h1 className=\"text-2xl font-bold text-white\">BiasGuard</h1>\r\n            <p className=\"text-red-100 mt-1\">\r\n              Detect and understand potential bias in your text\r\n            </p>\r\n          </div>\r\n\r\n          {/* Error Message */}\r\n          {error && (\r\n            <div className=\"bg-red-50 border-l-4 border-red-400 p-4 m-4\">\r\n              <div className=\"flex\">\r\n                <div className=\"flex-shrink-0\">\r\n                  <svg\r\n                    className=\"h-5 w-5 text-red-400\"\r\n                    viewBox=\"0 0 20 20\"\r\n                    fill=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\r\n                      clipRule=\"evenodd\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"ml-3\">\r\n                  <p className=\"text-sm text-red-700\">{error}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Main Content */}\r\n          <div className=\"flex flex-col lg:flex-row\">\r\n            {/* Text Input Section */}\r\n            <div className=\"lg:w-full\">\r\n              <div className=\"h-96 lg:h-[600px]\">\r\n                <TextInput\r\n                  value={inputText}\r\n                  onChange={handleInputChange}\r\n                  onClear={handleClear}\r\n                  onAnalyze={handleAnalyze}\r\n                  placeholder=\"Enter or paste your text here to analyze for potential bias...\"\r\n                  isAnalyzing={isAnalyzing}\r\n                  error={error}\r\n                  maxLength={5000}\r\n                  showCharacterCount={true}\r\n                  showClearButton={true}\r\n                  showAnalyzeButton={true}\r\n                  analyzeButtonText=\"Analyze for Bias\"\r\n                  clearButtonText=\"Clear All\"\r\n                  flaggedWords={flaggedWords}\r\n                  onClearHighlights={handleClearHighlights}\r\n                  analysisText={analysisText}\r\n                  showAnalysisOutput={showAnalysisOutput}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Issues Panel */}\r\n          {showAnalysisOutput && analysisResults && (\r\n            <div className=\"border-t border-gray-200\">\r\n              <IssuesPanel\r\n                biasSpans={analysisResults.bias_spans || []}\r\n                isAnalyzing={isAnalyzing}\r\n                onClear={handleClearHighlights}\r\n                analysisText={analysisText}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BiasDetectionApp;\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AACA;AAPA;;;;;;;AASA,MAAM,mBAA6B;IACjC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IACvB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,iBAAiB,mBAAmB,GACzC,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA+B;IACxC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAClE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7D,yCAAyC;IACzC,MAAM,wBAAwB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EACtC,CAAC;QACC,OAAO,UAAU,GAAG,CAAC,CAAC,OAAS,CAAC;gBAC9B,MAAM,KAAK,IAAI;gBACf,YAAY,KAAK,KAAK;gBACtB,UAAU,KAAK,GAAG;gBAClB,UAAU,KAAK,QAAQ;gBACvB,aAAa,KAAK,WAAW;YAC/B,CAAC;IACH,GACA,EAAE;IAGJ,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAChC,IAAI,CAAC,UAAU,IAAI,IAAI;YACrB,SAAS;YACT;QACF;QAEA,eAAe;QACf,SAAS;QACT,sBAAsB;QAEtB,IAAI;YACF,MAAM,WAAW,MAAM,CAAA,GAAA,iHAAA,CAAA,cAAW,AAAD,EAAE;YACnC,mBAAmB;YACnB,gBAAgB,YAAY,iCAAiC;YAE7D,IAAI,SAAS,UAAU,IAAI,SAAS,UAAU,CAAC,MAAM,GAAG,GAAG;gBACzD,MAAM,UAAU,sBAAsB,SAAS,UAAU;gBACzD,gBAAgB;YAClB,OAAO;gBACL,gBAAgB,EAAE;YACpB;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,mBAAmB;YACjC,SACE,eAAe,QAAQ,IAAI,OAAO,GAAG;YAEvC,mBAAmB;YACnB,gBAAgB,EAAE;QACpB,SAAU;YACR,eAAe;QACjB;IACF,GAAG;QAAC;QAAW;KAAsB;IAErC,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC9B,aAAa;QACb,gBAAgB;QAChB,mBAAmB;QACnB,gBAAgB,EAAE;QAClB,SAAS;QACT,sBAAsB;IACxB,GAAG,EAAE;IAEL,MAAM,wBAAwB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACxC,gBAAgB,EAAE;QAClB,mBAAmB;IACrB,GAAG,EAAE;IAEL,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACrC,aAAa;QACb,SAAS;IACX,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAgC;;;;;;0CAC9C,8OAAC;gCAAE,WAAU;0CAAoB;;;;;;;;;;;;oBAMlC,uBACC,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCACC,WAAU;wCACV,SAAQ;wCACR,MAAK;kDAEL,cAAA,8OAAC;4CACC,UAAS;4CACT,GAAE;4CACF,UAAS;;;;;;;;;;;;;;;;8CAIf,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAE,WAAU;kDAAwB;;;;;;;;;;;;;;;;;;;;;;kCAO7C,8OAAC;wBAAI,WAAU;kCAEb,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,+HAAA,CAAA,UAAS;oCACR,OAAO;oCACP,UAAU;oCACV,SAAS;oCACT,WAAW;oCACX,aAAY;oCACZ,aAAa;oCACb,OAAO;oCACP,WAAW;oCACX,oBAAoB;oCACpB,iBAAiB;oCACjB,mBAAmB;oCACnB,mBAAkB;oCAClB,iBAAgB;oCAChB,cAAc;oCACd,mBAAmB;oCACnB,cAAc;oCACd,oBAAoB;;;;;;;;;;;;;;;;;;;;;oBAO3B,sBAAsB,iCACrB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,iIAAA,CAAA,UAAW;4BACV,WAAW,gBAAgB,UAAU,IAAI,EAAE;4BAC3C,aAAa;4BACb,SAAS;4BACT,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ9B;uCAEe","debugId":null}},
    {"offset": {"line": 2314, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/components/Dashboard.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useAuth } from './AuthContext';\r\nimport { BiasDetectionApp } from './BiasDetectionApp';\r\nimport { getSavedAnalyses, deleteAnalysis as deleteAnalysisAPI } from '@/lib/api';\r\n\r\ninterface SavedAnalysis {\r\n  id: number;\r\n  user_id: number;\r\n  text: string;\r\n  result: unknown;\r\n  title?: string;\r\n  created_at: string;\r\n}\r\n\r\nexport default function Dashboard() {\r\n  const { user, logout } = useAuth();\r\n  const [savedAnalyses, setSavedAnalyses] = useState<SavedAnalysis[]>([]);\r\n  const [showAnalyzer, setShowAnalyzer] = useState(false);\r\n  const [initialText, setInitialText] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    // Load saved analyses from backend\r\n    loadSavedAnalyses();\r\n  }, [user?.id]);\r\n\r\n  const loadSavedAnalyses = async () => {\r\n    try {\r\n      const analyses = await getSavedAnalyses();\r\n      setSavedAnalyses(analyses);\r\n    } catch (error) {\r\n      console.error('Error loading saved analyses:', error);\r\n    }\r\n  };\r\n\r\n  const deleteAnalysis = async (id: number) => {\r\n    try {\r\n      const success = await deleteAnalysisAPI(id);\r\n      if (success) {\r\n        setSavedAnalyses(prev => prev.filter(analysis => analysis.id !== id));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting analysis:', error);\r\n    }\r\n  };\r\n\r\n  const handleAnalysisClick = (analysis: SavedAnalysis) => {\r\n    setInitialText(analysis.text);\r\n    setShowAnalyzer(true);\r\n  };\r\n\r\n  if (showAnalyzer) {\r\n    return <BiasDetectionApp initialText={initialText} onBack={() => {\r\n      setShowAnalyzer(false);\r\n      setInitialText('');\r\n      loadSavedAnalyses(); // Refresh analyses when coming back\r\n    }} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white border-b border-gray-200\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between h-20\">\r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"w-10 h-10 bg-red-500 rounded-lg flex items-center justify-center\">\r\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n                  </svg>\r\n                </div>\r\n                <div>\r\n                  <h1 className=\"text-2xl font-bold text-gray-800\">\r\n                    HateZero\r\n                  </h1>\r\n                  <p className=\"text-sm text-gray-600 font-medium\">\r\n                    AI-powered content analysis\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <button\r\n                  onClick={() => window.location.href = '/'}\r\n                  className=\"text-gray-700 hover:text-gray-900 font-medium px-4 py-2 transition-colors\"\r\n                >\r\n                  Dashboard\r\n                </button>\r\n                <button\r\n                  onClick={logout}\r\n                  className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors\"\r\n                >\r\n                  Sign Out\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Dashboard</h1>\r\n          <p className=\"text-gray-600\">Manage your bias detection analyses</p>\r\n        </div>\r\n\r\n        {/* Action Button */}\r\n        <div className=\"mb-8\">\r\n          <button\r\n            onClick={() => setShowAnalyzer(true)}\r\n            className=\"bg-red-500 text-white px-6 py-3 rounded-lg hover:bg-red-600 transition-colors font-medium shadow-lg\"\r\n          >\r\n            New Analysis\r\n          </button>\r\n        </div>\r\n\r\n        {/* Saved Analyses */}\r\n        <div className=\"bg-white rounded-lg shadow\">\r\n          <div className=\"px-6 py-4 border-b border-gray-200\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">Saved Analyses</h2>\r\n          </div>\r\n          \r\n          {savedAnalyses.length === 0 ? (\r\n            <div className=\"px-6 py-12 text-center\">\r\n              <svg className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n              </svg>\r\n              <p className=\"text-gray-500 mb-4\">No analyses saved yet</p>\r\n              <button\r\n                onClick={() => setShowAnalyzer(true)}\r\n                className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors\"\r\n              >\r\n                Create Your First Analysis\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"divide-y divide-gray-200\">\r\n              {savedAnalyses.map((analysis) => (\r\n                <div \r\n                  key={analysis.id} \r\n                  className=\"px-6 py-4 hover:bg-gray-50 cursor-pointer transition-colors\"\r\n                  onClick={() => handleAnalysisClick(analysis)}\r\n                >\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex-1\">\r\n                      <h3 className=\"text-lg font-medium text-gray-900 mb-1\">\r\n                        {analysis.title || `Analysis ${analysis.id}`}\r\n                      </h3>\r\n                      <p className=\"text-gray-600 text-sm mb-2 line-clamp-2\">\r\n                        {analysis.text.length > 100 \r\n                          ? `${analysis.text.substring(0, 100)}...` \r\n                          : analysis.text\r\n                        }\r\n                      </p>\r\n                      <div className=\"flex items-center gap-4 text-sm text-gray-500\">\r\n                        <span>{new Date(analysis.created_at).toLocaleDateString()}</span>\r\n                        <span>{new Date(analysis.created_at).toLocaleTimeString()}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2 ml-4\">\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          deleteAnalysis(analysis.id);\r\n                        }}\r\n                        className=\"text-red-600 hover:text-red-800 font-medium text-sm\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2725, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/david/OneDrive/Documents/VSCode%20Programming/AI_apps/Hack404/frontend/react-app/src/components/LandingPage.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { useAuth, AuthProvider } from './AuthContext';\r\nimport AuthForm from './AuthForm';\r\nimport Dashboard from './Dashboard';\r\n\r\nfunction MainContent() {\r\n  const { user, isLoading } = useAuth();\r\n  const [showAuthForm, setShowAuthForm] = useState(false);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-lg text-gray-600\">Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If user is logged in, show dashboard\r\n  if (user) {\r\n    return <Dashboard />;\r\n  }\r\n\r\n  // Show landing page for non-authenticated users\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white border-b border-gray-200\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between h-20\">\r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"w-10 h-10 bg-red-500 rounded-lg flex items-center justify-center\">\r\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n                  </svg>\r\n                </div>\r\n                <div>\r\n                  <h1 className=\"text-2xl font-bold text-gray-800\">\r\n                    HateZero\r\n                  </h1>\r\n                  <p className=\"text-sm text-gray-600 font-medium\">\r\n                    AI-powered content analysis\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                <button \r\n                  onClick={() => setShowAuthForm(true)}\r\n                  className=\"text-gray-700 hover:text-gray-900 font-medium px-4 py-2 transition-colors\"\r\n                >\r\n                  Sign In\r\n                </button>\r\n                <button \r\n                  onClick={() => setShowAuthForm(true)}\r\n                  className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors font-medium\"\r\n                >\r\n                  Sign Up\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Hero Section */}\r\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-6xl mx-auto\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\r\n            {/* Left side - Text content */}\r\n            <div className=\"text-left\">\r\n              <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-900 mb-6\">\r\n                Detect Bias and Hate Speech in Text\r\n              </h1>\r\n              <p className=\"text-xl text-gray-600 mb-8\">\r\n                Use advanced AI to analyze text for hate speech, bias, and harmful content. \r\n                Perfect for content moderation and research.\r\n              </p>\r\n\r\n              {/* Stats Section */}\r\n              <div className=\"grid grid-cols-2 gap-6 mb-8\">\r\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\r\n                  <div className=\"text-3xl font-bold text-red-500 mb-1\">95%</div>\r\n                  <div className=\"text-sm text-gray-600 font-medium\">Accuracy Rate</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\r\n                  <div className=\"text-3xl font-bold text-red-500 mb-1\">&lt;4s</div>\r\n                  <div className=\"text-sm text-gray-600 font-medium\">Processing Time</div>\r\n                </div>\r\n              </div>\r\n\r\n              <button \r\n                onClick={() => setShowAuthForm(true)}\r\n                className=\"bg-red-500 text-white px-8 py-3 rounded-lg text-lg font-semibold hover:bg-red-600 transition-colors shadow-lg\"\r\n              >\r\n                Start Analyzing Text\r\n              </button>\r\n            </div>\r\n            \r\n            {/* Right side - Text input and analyze */}\r\n            <div className=\"bg-white rounded-xl shadow-xl p-6\">\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <div className=\"w-6 h-6 bg-red-500 rounded-lg flex items-center justify-center\">\r\n                  <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n                  </svg>\r\n                </div>\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">Try it out</h3>\r\n              </div>\r\n              <textarea\r\n                placeholder=\"Type or paste your text here to analyze for bias and hate speech...\"\r\n                className=\"w-full h-64 p-4 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-red-500 focus:border-red-500 outline-none placeholder-gray-500 text-gray-900 transition-all duration-200\"\r\n                maxLength={500}\r\n              />\r\n              <div className=\"mt-4 flex justify-end\">\r\n                <button\r\n                  onClick={() => setShowAuthForm(true)}\r\n                  className=\"bg-red-500 text-white px-6 py-2 rounded-lg hover:bg-red-600 transition-all duration-200 font-medium\"\r\n                >\r\n                  Analyze Text\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Auth Modal */}\r\n      {showAuthForm && (\r\n        <AuthForm onClose={() => setShowAuthForm(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function LandingPage() {\r\n  return (\r\n    <AuthProvider>\r\n      <MainContent />\r\n    </AuthProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}