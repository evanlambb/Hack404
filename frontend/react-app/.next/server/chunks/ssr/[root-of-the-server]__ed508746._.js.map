{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/lib/api.ts"],"sourcesContent":["/**\r\n * API Service Layer for Hate Speech Detection App\r\n * \r\n * This module handles all communication with the backend API.\r\n * It provides a clean interface for our React components to use.\r\n */\r\n\r\nimport { AnalysisRequest, AnalysisResponse, SimpleAnalysisResponse, FlaggedWord } from '@/types';\r\n\r\n// Configuration for API endpoints\r\nconst API_CONFIG = {\r\n  baseUrl: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000',\r\n  endpoints: {\r\n    analyze: '/analyze',\r\n    analyzeSimple: '/analyze-simple',\r\n    health: '/'\r\n  },\r\n  timeout: 30000, // 30 seconds timeout\r\n} as const;\r\n\r\n/**\r\n * Custom error class for API-related errors\r\n * This helps us handle different types of errors appropriately\r\n */\r\nexport class ApiError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public status?: number,\r\n    public code?: string\r\n  ) {\r\n    super(message);\r\n    this.name = 'ApiError';\r\n  }\r\n}\r\n\r\n/**\r\n * Generic API request function with error handling\r\n * This is a utility function that handles common API patterns\r\n */\r\nasync function apiRequest<T>(\r\n  endpoint: string,\r\n  options: RequestInit = {}\r\n): Promise<T> {\r\n  const url = `${API_CONFIG.baseUrl}${endpoint}`;\r\n  \r\n  // Set default headers\r\n  const defaultHeaders = {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      ...options,\r\n      headers: {\r\n        ...defaultHeaders,\r\n        ...options.headers,\r\n      },\r\n    });\r\n\r\n    // Check if response is ok\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new ApiError(\r\n        errorData.detail || errorData.message || `HTTP ${response.status}: ${response.statusText}`,\r\n        response.status,\r\n        errorData.code\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    // Handle network errors\r\n    if (error instanceof ApiError) {\r\n      throw error;\r\n    }\r\n    \r\n    throw new ApiError(\r\n      error instanceof Error ? error.message : 'Network error occurred',\r\n      0,\r\n      'NETWORK_ERROR'\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Analyze text for hate speech using the full analysis endpoint\r\n * \r\n * @param request - The analysis request containing text and options\r\n * @returns Promise resolving to analysis results\r\n */\r\nexport async function analyzeText(\r\n  request: AnalysisRequest\r\n): Promise<AnalysisResponse> {\r\n  try {\r\n    const response = await apiRequest<AnalysisResponse>(API_CONFIG.endpoints.analyze, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        text: request.text,\r\n        confidence_threshold: request.confidence_threshold || 0.6\r\n      }),\r\n    });\r\n\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Error analyzing text:', error);\r\n    \r\n    // Fallback to mock data if API is not available\r\n    if (error instanceof ApiError && error.code === 'NETWORK_ERROR') {\r\n      console.warn('API not available, using mock data');\r\n      return createMockAnalysisResponse(request.text);\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Analyze text using the simple analysis endpoint\r\n * \r\n * @param request - The analysis request containing text and options\r\n * @returns Promise resolving to analysis results\r\n */\r\nexport async function analyzeTextSimple(\r\n  request: AnalysisRequest\r\n): Promise<SimpleAnalysisResponse> {\r\n  return apiRequest<SimpleAnalysisResponse>(API_CONFIG.endpoints.analyzeSimple, {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      text: request.text,\r\n      confidence_threshold: request.confidence_threshold || 0.6\r\n    }),\r\n  });\r\n}\r\n\r\n/**\r\n * Check if the API is healthy and responding\r\n * Useful for showing connection status to users\r\n */\r\nexport async function checkApiHealth(): Promise<{ message: string }> {\r\n  return apiRequest<{ message: string }>(\r\n    API_CONFIG.endpoints.health,\r\n    { method: 'GET' }\r\n  );\r\n}\r\n\r\n/**\r\n * Utility function to validate text input\r\n * Checks for common issues before sending to API\r\n */\r\nexport function validateTextInput(text: string): {\r\n  isValid: boolean;\r\n  errors: string[];\r\n} {\r\n  const errors: string[] = [];\r\n  \r\n  if (!text.trim()) {\r\n    errors.push('Text cannot be empty');\r\n  }\r\n  \r\n  if (text.length > 10000) {\r\n    errors.push('Text is too long (maximum 10,000 characters)');\r\n  }\r\n  \r\n  if (text.length < 5) {\r\n    errors.push('Text is too short (minimum 5 characters)');\r\n  }\r\n  \r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors\r\n  };\r\n}\r\n\r\n/**\r\n * Convert hate speech analysis to flagged words format for UI compatibility\r\n * \r\n * @param analysisResponse - The analysis response containing hate speech clauses\r\n * @returns Array of flagged words\r\n */\r\nexport function convertToFlaggedWords(\r\n  analysisResponse: AnalysisResponse\r\n): FlaggedWord[] {\r\n  const flaggedWords: FlaggedWord[] = [];\r\n  \r\n  analysisResponse.hate_speech_clauses.forEach(clause => {\r\n    if (clause.is_hate_speech) {\r\n      const originalText = analysisResponse.original_text;\r\n      const clauseStartIndex = originalText.indexOf(clause.clause);\r\n      \r\n      if (clauseStartIndex !== -1) {\r\n        // Extract significant words from rationale tokens\r\n        const significantWords = clause.rationale_tokens\r\n          .filter(token => token.is_rationale && token.confidence > 0.1)\r\n          .map(token => token.token.replace('##', ''));\r\n        \r\n        // Create flagged words for each significant token\r\n        significantWords.forEach(word => {\r\n          const wordIndex = originalText.indexOf(word, clauseStartIndex);\r\n          if (wordIndex !== -1) {\r\n            flaggedWords.push({\r\n              word,\r\n              startIndex: wordIndex,\r\n              endIndex: wordIndex + word.length,\r\n              category: 'hate_speech',\r\n              confidence: clause.confidence,\r\n              suggestions: [\r\n                { word: '[content removed]', confidence: 0.9, reason: 'Remove harmful content' },\r\n                { word: '[inappropriate]', confidence: 0.8, reason: 'Mark as inappropriate' }\r\n              ],\r\n              explanation: clause.justification\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  });\r\n  \r\n  return flaggedWords;\r\n}\r\n\r\n/**\r\n * Create a mock analysis response for development/testing\r\n * This is useful when the backend isn't available\r\n */\r\nfunction createMockAnalysisResponse(text: string): AnalysisResponse {\r\n  return {\r\n    original_text: text,\r\n    total_clauses: 1,\r\n    hate_speech_clauses: [],\r\n    summary: {\r\n      total_hate_speech_clauses: 0,\r\n      highest_confidence: 0,\r\n      average_confidence: 0\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Legacy function for backwards compatibility\r\n */\r\nexport function createMockAnalysisResponseLegacy(text: string): {\r\n  originalText: string;\r\n  flaggedWords: FlaggedWord[];\r\n  analysisId: string;\r\n  timestamp: string;\r\n  confidence: number;\r\n} {\r\n  return {\r\n    originalText: text,\r\n    flaggedWords: [],\r\n    analysisId: `mock-${Date.now()}`,\r\n    timestamp: new Date().toISOString(),\r\n    confidence: 0.85\r\n  };\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/components/Header.tsx"],"sourcesContent":["interface HeaderProps {\r\n  title?: string;\r\n  className?: string;\r\n}\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"bg-gradient-to-r from-white via-blue-50 to-indigo-50 shadow-lg border-b border-blue-100/50 backdrop-blur-sm\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex items-center justify-between h-20\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center shadow-lg\">\r\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-800\">\r\n                  Bias Detection Tool\r\n                </h1>\r\n                <p className=\"text-sm text-gray-600 font-medium\">\r\n                  Analyze and improve text inclusivity\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"hidden md:flex items-center gap-2 bg-white/60 backdrop-blur-sm rounded-full px-4 py-2 shadow-sm border border-blue-200/50\">\r\n              <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\r\n              <span className=\"text-sm font-medium text-gray-700\">Ready to analyze</span>\r\n            </div>\r\n            \r\n            <button className=\"p-2 text-gray-600 hover:text-gray-800 hover:bg-white/60 rounded-xl transition-all duration-200\">\r\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n} "],"names":[],"mappings":";;;;;AAKe,SAAS;IACtB,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;wCAAqB,MAAK;wCAAO,QAAO;wCAAe,SAAQ;kDAC5E,cAAA,8OAAC;4CAAK,eAAc;4CAAQ,gBAAe;4CAAQ,aAAa;4CAAG,GAAE;;;;;;;;;;;;;;;;8CAGzE,8OAAC;;sDACC,8OAAC;4CAAG,WAAU;sDAAmC;;;;;;sDAGjD,8OAAC;4CAAE,WAAU;sDAAoC;;;;;;;;;;;;;;;;;;;;;;;kCAOvD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;wCAAK,WAAU;kDAAoC;;;;;;;;;;;;0CAGtD,8OAAC;gCAAO,WAAU;0CAChB,cAAA,8OAAC;oCAAI,WAAU;oCAAU,MAAK;oCAAO,QAAO;oCAAe,SAAQ;8CACjE,cAAA,8OAAC;wCAAK,eAAc;wCAAQ,gBAAe;wCAAQ,aAAa;wCAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQrF","debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/components/TextInput.tsx"],"sourcesContent":["import { ChangeEvent, useState, useEffect, useCallback, useMemo, useRef } from 'react';\r\n\r\nexport interface ValidationRule {\r\n  type: 'minLength' | 'maxLength' | 'required' | 'custom';\r\n  value?: number;\r\n  message: string;\r\n  validator?: (text: string) => boolean;\r\n}\r\n\r\nexport interface TextInputProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  onClear?: () => void;\r\n  onAnalyze?: () => void;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  isAnalyzing?: boolean;\r\n  error?: string | null;\r\n  label?: string;\r\n  maxLength?: number;\r\n  minLength?: number;\r\n  className?: string;\r\n  showCharacterCount?: boolean;\r\n  showClearButton?: boolean;\r\n  showAnalyzeButton?: boolean;\r\n  analyzeButtonText?: string;\r\n  clearButtonText?: string;\r\n  validateOnChange?: boolean;\r\n  validationRules?: ValidationRule[];\r\n  onValidationChange?: (isValid: boolean, errors: string[]) => void;\r\n  confirmClearThreshold?: number; // Characters threshold for showing confirmation dialog\r\n  showClearConfirmation?: boolean;\r\n}\r\n\r\n// Default empty validation rules (stable reference)\r\nconst DEFAULT_VALIDATION_RULES: ValidationRule[] = [];\r\n\r\nexport default function TextInput({\r\n  value,\r\n  onChange,\r\n  onClear,\r\n  onAnalyze,\r\n  placeholder = \"Type or paste your text here...\",\r\n  disabled = false,\r\n  isAnalyzing = false,\r\n  error = null,\r\n  label = \"Enter text to analyze\",\r\n  maxLength = 5000,\r\n  minLength = 5,\r\n  className = \"\",\r\n  showCharacterCount = true,\r\n  showClearButton = true,\r\n  showAnalyzeButton = true,\r\n  analyzeButtonText = \"Analyze Text\",\r\n  clearButtonText = \"Clear\",\r\n  validateOnChange = true,\r\n  validationRules = DEFAULT_VALIDATION_RULES,\r\n  onValidationChange,\r\n  confirmClearThreshold = 50,\r\n  showClearConfirmation = true\r\n}: TextInputProps) {\r\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n  const [isValid, setIsValid] = useState(true);\r\n  const [showConfirmDialog, setShowConfirmDialog] = useState<boolean>(false);\r\n  const dialogRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Combine default rules with custom rules\r\n  const allRules = useMemo(() => {\r\n    const defaultRules: ValidationRule[] = [\r\n      {\r\n        type: 'required',\r\n        message: 'Text is required',\r\n        validator: (text: string) => text.trim().length > 0\r\n      },\r\n      {\r\n        type: 'minLength',\r\n        value: minLength,\r\n        message: `Text must be at least ${minLength} characters long`,\r\n        validator: (text: string) => text.trim().length >= minLength\r\n      },\r\n      {\r\n        type: 'maxLength',\r\n        value: maxLength,\r\n        message: `Text must not exceed ${maxLength} characters`,\r\n        validator: (text: string) => text.length <= maxLength\r\n      }\r\n    ];\r\n\r\n    return [...defaultRules, ...validationRules];\r\n  }, [minLength, maxLength, validationRules]);\r\n\r\n  // Validation function\r\n  const validateText = useCallback((text: string): { isValid: boolean; errors: string[] } => {\r\n    const errors: string[] = [];\r\n    \r\n    for (const rule of allRules) {\r\n      let isRuleValid = false;\r\n      \r\n      switch (rule.type) {\r\n        case 'required':\r\n          isRuleValid = text.trim().length > 0;\r\n          break;\r\n        case 'minLength':\r\n          isRuleValid = text.trim().length === 0 || text.trim().length >= (rule.value || minLength);\r\n          break;\r\n        case 'maxLength':\r\n          isRuleValid = text.length <= (rule.value || maxLength);\r\n          break;\r\n        case 'custom':\r\n          isRuleValid = rule.validator ? rule.validator(text) : true;\r\n          break;\r\n        default:\r\n          isRuleValid = true;\r\n      }\r\n      \r\n      if (!isRuleValid) {\r\n        errors.push(rule.message);\r\n      }\r\n    }\r\n    \r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }, [allRules, minLength, maxLength]);\r\n\r\n  // Effect to validate on value change\r\n  useEffect(() => {\r\n    if (validateOnChange) {\r\n      const { isValid: valid, errors } = validateText(value);\r\n      setIsValid(valid);\r\n      setValidationErrors(errors);\r\n    }\r\n  }, [value, validateOnChange, validateText]);\r\n\r\n  // Effect to notify parent of validation changes\r\n  useEffect(() => {\r\n    if (onValidationChange && validateOnChange) {\r\n      onValidationChange(isValid, validationErrors);\r\n    }\r\n  }, [isValid, validationErrors, onValidationChange, validateOnChange]);\r\n\r\n  const handleTextChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  const handleConfirmClear = useCallback(() => {\r\n    setShowConfirmDialog(false);\r\n    if (onClear) {\r\n      onClear();\r\n    }\r\n  }, [onClear]);\r\n\r\n  const handleCancelClear = useCallback(() => {\r\n    setShowConfirmDialog(false);\r\n  }, []);\r\n\r\n  const handleClearClick = () => {\r\n    // Check if we need to show confirmation dialog\r\n    if (showClearConfirmation && value.length >= confirmClearThreshold) {\r\n      setShowConfirmDialog(true);\r\n    } else {\r\n      // Clear immediately if no confirmation needed\r\n      if (onClear) {\r\n        onClear();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAnalyzeClick = () => {\r\n    if (onAnalyze) {\r\n      onAnalyze();\r\n    }\r\n  };\r\n\r\n  // Effect to handle keyboard events and click outside for confirmation dialog\r\n  useEffect(() => {\r\n    if (showConfirmDialog) {\r\n      const handleKeyDown = (e: KeyboardEvent) => {\r\n        if (e.key === 'Escape') {\r\n          handleCancelClear();\r\n        } else if (e.key === 'Enter') {\r\n          handleConfirmClear();\r\n        }\r\n      };\r\n\r\n      const handleClickOutside = (e: MouseEvent) => {\r\n        if (dialogRef.current && !dialogRef.current.contains(e.target as Node)) {\r\n          handleCancelClear();\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n        document.removeEventListener('mousedown', handleClickOutside);\r\n      };\r\n    }\r\n    // Return undefined for the else case to satisfy TypeScript\r\n    return undefined;\r\n  }, [showConfirmDialog, handleConfirmClear, handleCancelClear]);\r\n\r\n  const isAtLimit = value.length >= maxLength;\r\n  const isNearLimit = value.length >= maxLength * 0.8;\r\n  const characterCountColor = isAtLimit \r\n    ? 'text-red-500 font-semibold' \r\n    : isNearLimit \r\n      ? 'text-amber-500 font-medium' \r\n      : 'text-gray-500';\r\n\r\n  return (\r\n    <div className={`bg-white/90 backdrop-blur-sm rounded-xl shadow-lg border border-white/40 p-6 ${className}`}>\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <label \r\n            htmlFor=\"text-input\" \r\n            className=\"block text-sm font-semibold text-gray-700 mb-3\"\r\n          >\r\n            {label}\r\n          </label>\r\n          <textarea\r\n            id=\"text-input\"\r\n            value={value}\r\n            onChange={handleTextChange}\r\n            placeholder={placeholder}\r\n            maxLength={maxLength}\r\n            className=\"w-full h-40 px-4 py-3 border-2 border-gray-200 rounded-xl shadow-sm placeholder-gray-400 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none transition-all duration-200 bg-white/50\"\r\n            disabled={disabled || isAnalyzing}\r\n          />\r\n        </div>\r\n\r\n        {/* Controls */}\r\n        <div className=\"flex flex-col sm:flex-row gap-4 sm:justify-between sm:items-center\">\r\n          {showCharacterCount && (\r\n            <div className={`text-sm ${characterCountColor} flex items-center gap-1`}>\r\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n              </svg>\r\n              {value.length} / {maxLength} characters\r\n            </div>\r\n          )}\r\n          <div className=\"flex gap-3\">\r\n            {showClearButton && (\r\n              <button\r\n                onClick={handleClearClick}\r\n                disabled={!value || isAnalyzing}\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white/80 border border-gray-300 rounded-xl shadow-sm hover:bg-gray-50 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\r\n              >\r\n                {clearButtonText}\r\n              </button>\r\n            )}\r\n            {showAnalyzeButton && (\r\n              <button\r\n                onClick={handleAnalyzeClick}\r\n                disabled={!value.trim() || isAnalyzing || !isValid}\r\n                className=\"px-6 py-2 text-sm font-medium text-white bg-gradient-to-r from-blue-500 to-indigo-600 border border-transparent rounded-xl shadow-lg hover:from-blue-600 hover:to-indigo-700 hover:shadow-xl focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 transform hover:scale-105\"\r\n              >\r\n                {isAnalyzing ? (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\r\n                    Analyzing...\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\r\n                    </svg>\r\n                    {analyzeButtonText}\r\n                  </div>\r\n                )}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* External Error Display */}\r\n        {error && (\r\n          <div className=\"rounded-xl bg-gradient-to-r from-red-50 to-pink-50 p-4 border border-red-200/50\">\r\n            <div className=\"flex\">\r\n              <div className=\"flex-shrink-0\">\r\n                <svg className=\"h-5 w-5 text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n              </div>\r\n              <div className=\"ml-3\">\r\n                <h3 className=\"text-sm font-medium text-red-800\">\r\n                  Error\r\n                </h3>\r\n                <div className=\"mt-2 text-sm text-red-700\">\r\n                  {error}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Validation Errors Display */}\r\n        {validationErrors.length > 0 && validateOnChange && (\r\n          <div className=\"rounded-xl bg-gradient-to-r from-amber-50 to-orange-50 p-4 border border-amber-200/50\">\r\n            <div className=\"flex\">\r\n              <div className=\"flex-shrink-0\">\r\n                <svg className=\"h-5 w-5 text-amber-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n                </svg>\r\n              </div>\r\n              <div className=\"ml-3\">\r\n                <h3 className=\"text-sm font-medium text-amber-800\">\r\n                  Validation {validationErrors.length === 1 ? 'Error' : 'Errors'}\r\n                </h3>\r\n                <div className=\"mt-2\">\r\n                  {validationErrors.map((validationError, index) => (\r\n                    <div key={index} className=\"text-sm text-amber-700\">\r\n                      • {validationError}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Confirmation Dialog */}\r\n      {showConfirmDialog && (\r\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\">\r\n          <div ref={dialogRef} className=\"bg-white rounded-2xl p-6 max-w-md w-full mx-4 shadow-2xl border border-white/20\">\r\n            <div className=\"flex items-center gap-3 mb-4\">\r\n              <div className=\"w-10 h-10 bg-amber-100 rounded-full flex items-center justify-center\">\r\n                <svg className=\"w-5 h-5 text-amber-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n                </svg>\r\n              </div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                Confirm Clear Text\r\n              </h3>\r\n            </div>\r\n            <p className=\"text-gray-600 mb-6\">\r\n              You have {value.length} characters of text. Are you sure you want to clear all your text? This action cannot be undone.\r\n            </p>\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <button\r\n                onClick={handleCancelClear}\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-xl shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleConfirmClear}\r\n                className=\"px-4 py-2 text-sm font-medium text-white bg-gradient-to-r from-red-500 to-pink-600 border border-transparent rounded-xl shadow-lg hover:from-red-600 hover:to-pink-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-all duration-200\"\r\n              >\r\n                Clear Text\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 945, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/components/IssuesPanel.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { AnalysisResponse, FlaggedWord } from '@/types';\r\nimport { useState } from 'react';\r\n\r\ninterface IssuesPanelProps {\r\n  analysisResult: AnalysisResponse | null;\r\n  isAnalyzing: boolean;\r\n  onWordReplace: (originalWord: string, newWord: string) => void;\r\n  onIssueClick?: (issue: FlaggedWord) => void;\r\n}\r\n\r\nconst getCategoryColor = (category: string) => {\r\n  switch (category.toLowerCase()) {\r\n    case 'gender_bias':\r\n      return {\r\n        bg: 'bg-gradient-to-r from-pink-100 to-rose-100',\r\n        border: 'border-pink-300',\r\n        text: 'text-pink-800',\r\n        badge: 'bg-pink-500',\r\n        icon: '♀'\r\n      };\r\n    case 'racial_bias':\r\n      return {\r\n        bg: 'bg-gradient-to-r from-orange-100 to-amber-100',\r\n        border: 'border-orange-300',\r\n        text: 'text-orange-800',\r\n        badge: 'bg-orange-500',\r\n        icon: '⚡'\r\n      };\r\n    case 'age_bias':\r\n      return {\r\n        bg: 'bg-gradient-to-r from-purple-100 to-violet-100',\r\n        border: 'border-purple-300',\r\n        text: 'text-purple-800',\r\n        badge: 'bg-purple-500',\r\n        icon: '⏰'\r\n      };\r\n    case 'religious_bias':\r\n      return {\r\n        bg: 'bg-gradient-to-r from-emerald-100 to-teal-100',\r\n        border: 'border-emerald-300',\r\n        text: 'text-emerald-800',\r\n        badge: 'bg-emerald-500',\r\n        icon: '☪'\r\n      };\r\n    case 'disability_bias':\r\n      return {\r\n        bg: 'bg-gradient-to-r from-blue-100 to-indigo-100',\r\n        border: 'border-blue-300',\r\n        text: 'text-blue-800',\r\n        badge: 'bg-blue-500',\r\n        icon: '♿'\r\n      };\r\n    default:\r\n      return {\r\n        bg: 'bg-gradient-to-r from-gray-100 to-slate-100',\r\n        border: 'border-gray-300',\r\n        text: 'text-gray-800',\r\n        badge: 'bg-gray-500',\r\n        icon: '⚠'\r\n      };\r\n  }\r\n};\r\n\r\nconst getConfidenceColor = (confidence: number) => {\r\n  if (confidence >= 0.8) return 'text-red-600 bg-red-100';\r\n  if (confidence >= 0.6) return 'text-amber-600 bg-amber-100';\r\n  return 'text-green-600 bg-green-100';\r\n};\r\n\r\nexport function IssuesPanel({ \r\n  analysisResult, \r\n  isAnalyzing, \r\n  onWordReplace,\r\n  onIssueClick \r\n}: IssuesPanelProps) {\r\n  const [expandedIssues, setExpandedIssues] = useState<Set<number>>(new Set());\r\n\r\n  const toggleIssueExpansion = (index: number) => {\r\n    const newExpanded = new Set(expandedIssues);\r\n    if (newExpanded.has(index)) {\r\n      newExpanded.delete(index);\r\n    } else {\r\n      newExpanded.add(index);\r\n    }\r\n    setExpandedIssues(newExpanded);\r\n  };\r\n\r\n  const handleWordReplace = (originalWord: string, newWord: string) => {\r\n    onWordReplace(originalWord, newWord);\r\n  };\r\n\r\n  const handleIssueClick = (issue: FlaggedWord) => {\r\n    if (onIssueClick) {\r\n      onIssueClick(issue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full lg:w-96 h-full bg-gradient-to-b from-white via-slate-50/50 to-gray-100/30 border-l-2 border-gradient-to-b from-blue-200 to-indigo-300 shadow-2xl backdrop-blur-sm\">\r\n      <div className=\"h-full flex flex-col\">\r\n        {/* Header */}\r\n        <div className=\"sticky top-0 bg-gradient-to-r from-white via-blue-50/80 to-indigo-50/60 backdrop-blur-sm border-b-2 border-blue-100/50 p-6 shadow-lg\">\r\n          <div className=\"flex items-center gap-3 mb-4\">\r\n            <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-xl flex items-center justify-center shadow-lg\">\r\n              <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n              </svg>\r\n            </div>\r\n            <h2 className=\"text-xl font-bold text-gray-800\">\r\n              Issues Found\r\n            </h2>\r\n          </div>\r\n\r\n          {analysisResult && (\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center justify-between p-3 bg-white/60 rounded-xl border border-blue-200/50 shadow-sm\">\r\n                <span className=\"text-sm font-medium text-gray-700\">Analysis Confidence</span>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <div className=\"flex-1 bg-gray-200 rounded-full h-2 w-16\">\r\n                    <div \r\n                      className=\"bg-gradient-to-r from-blue-500 to-indigo-600 h-2 rounded-full transition-all duration-500\"\r\n                      style={{ width: `${analysisResult.confidence * 100}%` }}\r\n                    />\r\n                  </div>\r\n                  <span className={`text-xs font-semibold px-2 py-1 rounded-full ${getConfidenceColor(analysisResult.confidence)}`}>\r\n                    {Math.round(analysisResult.confidence * 100)}%\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-2 gap-3\">\r\n                <div className=\"bg-white/60 rounded-xl p-3 border border-emerald-200/50 shadow-sm\">\r\n                  <div className=\"text-lg font-bold text-emerald-700\">{analysisResult.flaggedWords.length}</div>\r\n                  <div className=\"text-xs text-emerald-600 font-medium\">Issues Found</div>\r\n                </div>\r\n                <div className=\"bg-white/60 rounded-xl p-3 border border-blue-200/50 shadow-sm\">\r\n                  <div className=\"text-lg font-bold text-blue-700\">\r\n                    {new Set(analysisResult.flaggedWords.map(fw => fw.category)).size}\r\n                  </div>\r\n                  <div className=\"text-xs text-blue-600 font-medium\">Categories</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"flex-1 overflow-y-auto p-6 space-y-4 custom-scrollbar\">\r\n          {isAnalyzing && (\r\n            <div className=\"flex items-center justify-center py-12\">\r\n              <div className=\"text-center\">\r\n                <div className=\"w-12 h-12 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin mx-auto mb-4\"></div>\r\n                <p className=\"text-gray-600 font-medium\">Analyzing text for bias...</p>\r\n                <p className=\"text-sm text-gray-500 mt-1\">This may take a moment</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {!isAnalyzing && (!analysisResult || analysisResult.flaggedWords.length === 0) && (\r\n            <div className=\"flex flex-col items-center justify-center py-12 text-center\">\r\n              <div className=\"w-20 h-20 bg-gradient-to-r from-green-100 to-emerald-100 rounded-full flex items-center justify-center mb-4 shadow-lg\">\r\n                <svg className=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                </svg>\r\n              </div>\r\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">\r\n                {analysisResult ? 'No Issues Found!' : 'Ready to Analyze'}\r\n              </h3>\r\n              <p className=\"text-gray-600 text-sm leading-relaxed\">\r\n                {analysisResult \r\n                  ? 'Your text looks great! No bias or problematic language detected.'\r\n                  : 'Enter some text and click \"Analyze Text\" to get started.'\r\n                }\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          {!isAnalyzing && analysisResult && analysisResult.flaggedWords.length > 0 && (\r\n            <div className=\"space-y-4\">\r\n              {analysisResult.flaggedWords.map((issue, index) => {\r\n                const categoryStyle = getCategoryColor(issue.category);\r\n                const isExpanded = expandedIssues.has(index);\r\n                \r\n                return (\r\n                  <div \r\n                    key={index} \r\n                    className={`${categoryStyle.bg} ${categoryStyle.border} border-2 rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 cursor-pointer overflow-hidden`}\r\n                    onClick={() => {\r\n                      toggleIssueExpansion(index);\r\n                      handleIssueClick(issue);\r\n                    }}\r\n                  >\r\n                    <div className=\"p-4\">\r\n                      <div className=\"flex items-start justify-between mb-3\">\r\n                        <div className=\"flex items-center gap-3\">\r\n                          <div className={`${categoryStyle.badge} w-8 h-8 rounded-full flex items-center justify-center text-white font-bold shadow-md`}>\r\n                            {categoryStyle.icon}\r\n                          </div>\r\n                          <div>\r\n                            <h4 className={`font-bold ${categoryStyle.text} text-sm`}>\r\n                              \"{issue.word}\"\r\n                            </h4>\r\n                            <p className={`text-xs ${categoryStyle.text} opacity-80 capitalize font-medium`}>\r\n                              {issue.category.replace('_', ' ')}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <span className={`text-xs font-bold px-2 py-1 rounded-full ${getConfidenceColor(issue.confidence)}`}>\r\n                            {Math.round(issue.confidence * 100)}%\r\n                          </span>\r\n                          <svg \r\n                            className={`w-5 h-5 ${categoryStyle.text} transition-transform duration-200 ${isExpanded ? 'rotate-180' : ''}`} \r\n                            fill=\"none\" \r\n                            stroke=\"currentColor\" \r\n                            viewBox=\"0 0 24 24\"\r\n                          >\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                          </svg>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {isExpanded && (\r\n                        <div className=\"space-y-4 animate-fadeIn\">\r\n                          <div className=\"bg-white/70 rounded-xl p-4 shadow-sm\">\r\n                            <h5 className=\"font-semibold text-gray-800 text-sm mb-2 flex items-center gap-2\">\r\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                              </svg>\r\n                              Why this is problematic:\r\n                            </h5>\r\n                            <p className=\"text-gray-700 text-sm leading-relaxed\">\r\n                              {issue.explanation}\r\n                            </p>\r\n                          </div>\r\n\r\n                          <div className=\"space-y-2\">\r\n                            <h5 className=\"font-semibold text-gray-800 text-sm flex items-center gap-2\">\r\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\r\n                              </svg>\r\n                              Suggested alternatives:\r\n                            </h5>\r\n                            <div className=\"space-y-2\">\r\n                              {issue.suggestions.map((suggestion, suggestionIndex) => (\r\n                                <button\r\n                                  key={suggestionIndex}\r\n                                  onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    handleWordReplace(issue.word, suggestion.word);\r\n                                  }}\r\n                                  className=\"w-full text-left p-3 bg-white/80 hover:bg-white rounded-xl border border-gray-200/50 hover:border-gray-300 transition-all duration-200 group shadow-sm hover:shadow-md\"\r\n                                >\r\n                                  <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex-1\">\r\n                                      <span className=\"font-semibold text-gray-800 text-sm\">\r\n                                        \"{suggestion.word}\"\r\n                                      </span>\r\n                                      <div className=\"flex items-center gap-2 mt-1\">\r\n                                        <span className={`text-xs font-medium px-2 py-1 rounded-full ${getConfidenceColor(suggestion.confidence)}`}>\r\n                                          {Math.round(suggestion.confidence * 100)}% match\r\n                                        </span>\r\n                                      </div>\r\n                                      <p className=\"text-xs text-gray-600 mt-1\">\r\n                                        {suggestion.reason}\r\n                                      </p>\r\n                                    </div>\r\n                                    <svg className=\"w-5 h-5 text-gray-400 group-hover:text-blue-600 transition-colors duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                                    </svg>\r\n                                  </div>\r\n                                </button>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1641, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/components/BiasDetectionApp.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useCallback } from 'react';\r\nimport { AnalysisResponse, AnalysisRequest, ClauseAnalysis } from '@/types';\r\nimport { analyzeText, convertToFlaggedWords } from '@/lib/api';\r\nimport Header from './Header';\r\nimport TextInput from './TextInput';\r\nimport { IssuesPanel } from './IssuesPanel';\r\n\r\nexport function BiasDetectionApp() {\r\n  const [text, setText] = useState('');\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResponse | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [highlightedClause, setHighlightedClause] = useState<ClauseAnalysis | null>(null);\r\n\r\n  const handleAnalyze = useCallback(async () => {\r\n    if (!text.trim()) {\r\n      setError('Please enter some text to analyze');\r\n      return;\r\n    }\r\n\r\n    setIsAnalyzing(true);\r\n    setError(null);\r\n    setHighlightedClause(null);\r\n\r\n    try {\r\n      const request: AnalysisRequest = {\r\n        text: text.trim(),\r\n        confidence_threshold: 0.6\r\n      };\r\n\r\n      const result = await analyzeText(request);\r\n      setAnalysisResult(result);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred during analysis');\r\n      setAnalysisResult(null);\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  }, [text]);\r\n\r\n  const handleClearText = useCallback(() => {\r\n    setText('');\r\n    setAnalysisResult(null);\r\n    setError(null);\r\n    setHighlightedClause(null);\r\n  }, []);\r\n\r\n  const handleClauseClick = useCallback((clause: ClauseAnalysis) => {\r\n    setHighlightedClause(clause);\r\n  }, []);\r\n\r\n  const handleRemoveClause = useCallback((clause: ClauseAnalysis) => {\r\n    const newText = text.replace(clause.clause, '[content removed]');\r\n    setText(newText);\r\n    \r\n    // Update analysis result to remove the clause\r\n    if (analysisResult) {\r\n      const updatedClauses = analysisResult.hate_speech_clauses.filter(\r\n        c => c.clause !== clause.clause\r\n      );\r\n      setAnalysisResult({\r\n        ...analysisResult,\r\n        hate_speech_clauses: updatedClauses,\r\n        original_text: newText,\r\n        summary: {\r\n          ...analysisResult.summary,\r\n          total_hate_speech_clauses: updatedClauses.length\r\n        }\r\n      });\r\n    }\r\n  }, [text, analysisResult]);\r\n\r\n  // Create highlighted text with proper formatting\r\n  const getHighlightedText = () => {\r\n    if (!analysisResult || analysisResult.hate_speech_clauses.length === 0) {\r\n      return text;\r\n    }\r\n\r\n    let highlightedText = text;\r\n    const hateSpeechClauses = [...analysisResult.hate_speech_clauses]\r\n      .filter(clause => clause.is_hate_speech)\r\n      .sort((a, b) => b.clause.length - a.clause.length); // Sort by length to avoid partial replacements\r\n    \r\n    hateSpeechClauses.forEach((clause) => {\r\n      const isHighlighted = highlightedClause?.clause === clause.clause;\r\n      const highlightClass = isHighlighted \r\n        ? 'bg-red-200 border-2 border-red-400 px-2 py-1 rounded font-medium cursor-pointer'\r\n        : 'bg-yellow-200 px-2 py-1 rounded cursor-pointer hover:bg-yellow-300';\r\n      \r\n      const regex = new RegExp(clause.clause.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'gi');\r\n      highlightedText = highlightedText.replace(regex, \r\n        `<span class=\"${highlightClass}\" data-clause=\"${clause.clause}\">${clause.clause}</span>`\r\n      );\r\n    });\r\n\r\n    return highlightedText;\r\n  };\r\n\r\n  const handleWordReplace = useCallback((originalWord: string, newWord: string) => {\r\n    const newText = text.replace(new RegExp(`\\\\b${originalWord}\\\\b`, 'g'), newWord);\r\n    setText(newText);\r\n    \r\n    // Update analysis result to reflect the change\r\n    if (analysisResult) {\r\n      const updatedClauses = analysisResult.hate_speech_clauses.map(clause => {\r\n        if (clause.clause.includes(originalWord)) {\r\n          return {\r\n            ...clause,\r\n            clause: clause.clause.replace(new RegExp(`\\\\b${originalWord}\\\\b`, 'g'), newWord)\r\n          };\r\n        }\r\n        return clause;\r\n      });\r\n      \r\n      setAnalysisResult({\r\n        ...analysisResult,\r\n        hate_speech_clauses: updatedClauses,\r\n        original_text: newText\r\n      });\r\n    }\r\n  }, [text, analysisResult]);\r\n\r\n  // Convert analysis result to flagged words format for IssuesPanel compatibility\r\n  const flaggedWords = analysisResult ? convertToFlaggedWords(analysisResult) : [];\r\n\r\n  const handleIssueClick = useCallback((issue: { word: string }) => {\r\n    // Find the corresponding clause for the flagged word\r\n    const clause = analysisResult?.hate_speech_clauses.find(c => \r\n      c.clause.includes(issue.word) && c.is_hate_speech\r\n    );\r\n    if (clause) {\r\n      setHighlightedClause(clause);\r\n    }\r\n  }, [analysisResult]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50\">\r\n      <Header />\r\n      \r\n      {/* Main Content - Two Column Layout */}\r\n      <main className=\"w-full h-[calc(100vh-80px)]\">\r\n        <div className=\"flex h-full\">\r\n          {/* Left Column - Input and Text Display */}\r\n          <div className=\"flex-1 overflow-y-auto\">\r\n            <div className=\"max-w-4xl mx-auto p-6 lg:p-8\">\r\n              {/* Description */}\r\n              <div className=\"mb-8\">\r\n                <p className=\"text-lg text-gray-600\">\r\n                  Analyze text for hate speech and get detailed explanations with AI-powered rationale\r\n                </p>\r\n              </div>\r\n\r\n              {/* Input Section */}\r\n              <div className=\"mb-8\">\r\n                <div className=\"bg-white/70 backdrop-blur-sm rounded-2xl shadow-lg border border-white/20 p-1\">\r\n                  <TextInput\r\n                    value={text}\r\n                    onChange={setText}\r\n                    onClear={handleClearText}\r\n                    onAnalyze={handleAnalyze}\r\n                    isAnalyzing={isAnalyzing}\r\n                    error={error}\r\n                    placeholder=\"Type or paste your text here...\"\r\n                    label=\"Enter text to analyze\"\r\n                    maxLength={5000}\r\n                    showCharacterCount={true}\r\n                    showClearButton={true}\r\n                    showAnalyzeButton={true}\r\n                    analyzeButtonText=\"Analyze for Hate Speech\"\r\n                    clearButtonText=\"Clear\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Analysis Results Summary */}\r\n              {analysisResult && (\r\n                <div className=\"mb-6 bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Analysis Results</h3>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold text-blue-600\">{analysisResult.total_clauses}</div>\r\n                      <div className=\"text-sm text-gray-600\">Total Clauses</div>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold text-red-600\">{analysisResult.summary.total_hate_speech_clauses}</div>\r\n                      <div className=\"text-sm text-gray-600\">Hate Speech Detected</div>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold text-yellow-600\">\r\n                        {(analysisResult.summary.highest_confidence * 100).toFixed(1)}%\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-600\">Highest Confidence</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Text Display with Highlighting */}\r\n              {text && (\r\n                <div className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl border border-white/30 p-8 transition-all duration-300 hover:shadow-2xl\">\r\n                  <div className=\"flex items-center justify-between mb-6\">\r\n                    <h3 className=\"text-xl font-semibold text-gray-800 flex items-center gap-2\">\r\n                      {analysisResult ? (\r\n                        <>\r\n                          <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\r\n                          Analyzed Text\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\r\n                          Current Text\r\n                        </>\r\n                      )}\r\n                    </h3>\r\n                    {analysisResult && (\r\n                      <button\r\n                        onClick={() => navigator.clipboard.writeText(text)}\r\n                        className=\"inline-flex items-center px-4 py-2 bg-gradient-to-r from-blue-500 to-indigo-600 text-white rounded-xl text-sm font-medium hover:from-blue-600 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-200 shadow-lg hover:shadow-xl\"\r\n                      >\r\n                        <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n                        </svg>\r\n                        Copy Text\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  <div className=\"prose max-w-none\">\r\n                    <div \r\n                      className=\"text-gray-900 leading-relaxed whitespace-pre-wrap\"\r\n                      dangerouslySetInnerHTML={{ __html: getHighlightedText() }}\r\n                      onClick={(e) => {\r\n                        const target = e.target as HTMLElement;\r\n                        if (target.hasAttribute('data-clause')) {\r\n                          const clauseText = target.getAttribute('data-clause');\r\n                          const clause = analysisResult?.hate_speech_clauses.find(c => c.clause === clauseText);\r\n                          if (clause) {\r\n                            handleClauseClick(clause);\r\n                          }\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Legend */}\r\n                  {analysisResult && analysisResult.hate_speech_clauses.some(c => c.is_hate_speech) && (\r\n                    <div className=\"mt-6 pt-6 border-t border-gray-200/50\">\r\n                      <div className=\"flex items-center gap-6 text-sm text-gray-600\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <span className=\"bg-gradient-to-r from-yellow-200 to-amber-200 px-3 py-1 rounded-full text-xs font-medium shadow-sm\">highlighted</span>\r\n                          <span className=\"font-medium\">Hate speech detected</span>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <span className=\"bg-gradient-to-r from-red-200 to-pink-200 border-2 border-red-400 px-3 py-1 rounded-full text-xs font-medium shadow-sm\">highlighted</span>\r\n                          <span className=\"font-medium\">Currently selected</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {/* Selected Clause Details */}\r\n              {highlightedClause && (\r\n                <div className=\"mt-6 bg-white/80 backdrop-blur-sm rounded-2xl shadow-lg border border-white/30 p-6\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Selected Clause Analysis</h3>\r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <div className=\"text-sm font-medium text-gray-700 mb-2\">Clause:</div>\r\n                      <div className=\"bg-gray-50 rounded-lg p-3 text-gray-900\">\"{highlightedClause.clause}\"</div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-sm font-medium text-gray-700 mb-2\">Justification:</div>\r\n                      <div className=\"bg-gray-50 rounded-lg p-3 text-gray-900\">{highlightedClause.justification}</div>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                      <div>\r\n                        <div className=\"text-sm font-medium text-gray-700 mb-2\">Confidence:</div>\r\n                        <div className=\"text-2xl font-bold text-red-600\">{(highlightedClause.confidence * 100).toFixed(1)}%</div>\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"text-sm font-medium text-gray-700 mb-2\">Hate Speech Probability:</div>\r\n                        <div className=\"text-2xl font-bold text-orange-600\">{(highlightedClause.hate_speech_probability * 100).toFixed(1)}%</div>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-sm font-medium text-gray-700 mb-2\">Key Rationale Tokens:</div>\r\n                      <div className=\"flex flex-wrap gap-2\">\r\n                        {highlightedClause.rationale_tokens\r\n                          .filter(token => token.is_rationale && token.confidence > 0.1)\r\n                          .map((token, index) => (\r\n                            <span\r\n                              key={index}\r\n                              className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800\"\r\n                            >\r\n                              {token.token.replace('##', '')} ({(token.confidence * 100).toFixed(0)}%)\r\n                            </span>\r\n                          ))}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex gap-2\">\r\n                      <button\r\n                        onClick={() => handleRemoveClause(highlightedClause)}\r\n                        className=\"px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors\"\r\n                      >\r\n                        Remove This Clause\r\n                      </button>\r\n                      <button\r\n                        onClick={() => setHighlightedClause(null)}\r\n                        className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400 transition-colors\"\r\n                      >\r\n                        Close Details\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Right Column - Issues Panel */}\r\n          <div className=\"hidden lg:block flex-shrink-0\">\r\n            <IssuesPanel\r\n              analysisResult={analysisResult ? {\r\n                originalText: analysisResult.original_text,\r\n                flaggedWords: flaggedWords,\r\n                analysisId: `analysis-${Date.now()}`,\r\n                timestamp: new Date().toISOString(),\r\n                confidence: analysisResult.summary.highest_confidence\r\n              } as any : null}\r\n              isAnalyzing={isAnalyzing}\r\n              onWordReplace={handleWordReplace}\r\n              onIssueClick={handleIssueClick}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Mobile Issues Panel */}\r\n        <div className=\"lg:hidden\">\r\n          {(analysisResult || isAnalyzing) && (\r\n            <div className=\"border-t border-gray-200 bg-white\">\r\n              <IssuesPanel\r\n                analysisResult={analysisResult ? {\r\n                  originalText: analysisResult.original_text,\r\n                  flaggedWords: flaggedWords,\r\n                  analysisId: `analysis-${Date.now()}`,\r\n                  timestamp: new Date().toISOString(),\r\n                  confidence: analysisResult.summary.highest_confidence\r\n                } as any : null}\r\n                isAnalyzing={isAnalyzing}\r\n                onWordReplace={handleWordReplace}\r\n                onIssueClick={handleIssueClick}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AACA;AAPA;;;;;;;AASO,SAAS;IACd,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA2B;IAC9E,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAyB;IAElF,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAChC,IAAI,CAAC,KAAK,IAAI,IAAI;YAChB,SAAS;YACT;QACF;QAEA,eAAe;QACf,SAAS;QACT,qBAAqB;QAErB,IAAI;YACF,MAAM,UAA2B;gBAC/B,MAAM,KAAK,IAAI;gBACf,sBAAsB;YACxB;YAEA,MAAM,SAAS,MAAM,CAAA,GAAA,iHAAA,CAAA,cAAW,AAAD,EAAE;YACjC,kBAAkB;QACpB,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,kBAAkB;QACpB,SAAU;YACR,eAAe;QACjB;IACF,GAAG;QAAC;KAAK;IAET,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAClC,QAAQ;QACR,kBAAkB;QAClB,SAAS;QACT,qBAAqB;IACvB,GAAG,EAAE;IAEL,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACrC,qBAAqB;IACvB,GAAG,EAAE;IAEL,MAAM,qBAAqB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACtC,MAAM,UAAU,KAAK,OAAO,CAAC,OAAO,MAAM,EAAE;QAC5C,QAAQ;QAER,8CAA8C;QAC9C,IAAI,gBAAgB;YAClB,MAAM,iBAAiB,eAAe,mBAAmB,CAAC,MAAM,CAC9D,CAAA,IAAK,EAAE,MAAM,KAAK,OAAO,MAAM;YAEjC,kBAAkB;gBAChB,GAAG,cAAc;gBACjB,qBAAqB;gBACrB,eAAe;gBACf,SAAS;oBACP,GAAG,eAAe,OAAO;oBACzB,2BAA2B,eAAe,MAAM;gBAClD;YACF;QACF;IACF,GAAG;QAAC;QAAM;KAAe;IAEzB,iDAAiD;IACjD,MAAM,qBAAqB;QACzB,IAAI,CAAC,kBAAkB,eAAe,mBAAmB,CAAC,MAAM,KAAK,GAAG;YACtE,OAAO;QACT;QAEA,IAAI,kBAAkB;QACtB,MAAM,oBAAoB;eAAI,eAAe,mBAAmB;SAAC,CAC9D,MAAM,CAAC,CAAA,SAAU,OAAO,cAAc,EACtC,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,MAAM,CAAC,MAAM,GAAG,EAAE,MAAM,CAAC,MAAM,GAAG,+CAA+C;QAErG,kBAAkB,OAAO,CAAC,CAAC;YACzB,MAAM,gBAAgB,mBAAmB,WAAW,OAAO,MAAM;YACjE,MAAM,iBAAiB,gBACnB,oFACA;YAEJ,MAAM,QAAQ,IAAI,OAAO,OAAO,MAAM,CAAC,OAAO,CAAC,uBAAuB,SAAS;YAC/E,kBAAkB,gBAAgB,OAAO,CAAC,OACxC,CAAC,aAAa,EAAE,eAAe,eAAe,EAAE,OAAO,MAAM,CAAC,EAAE,EAAE,OAAO,MAAM,CAAC,OAAO,CAAC;QAE5F;QAEA,OAAO;IACT;IAEA,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC,cAAsB;QAC3D,MAAM,UAAU,KAAK,OAAO,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,aAAa,GAAG,CAAC,EAAE,MAAM;QACvE,QAAQ;QAER,+CAA+C;QAC/C,IAAI,gBAAgB;YAClB,MAAM,iBAAiB,eAAe,mBAAmB,CAAC,GAAG,CAAC,CAAA;gBAC5D,IAAI,OAAO,MAAM,CAAC,QAAQ,CAAC,eAAe;oBACxC,OAAO;wBACL,GAAG,MAAM;wBACT,QAAQ,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,aAAa,GAAG,CAAC,EAAE,MAAM;oBAC1E;gBACF;gBACA,OAAO;YACT;YAEA,kBAAkB;gBAChB,GAAG,cAAc;gBACjB,qBAAqB;gBACrB,eAAe;YACjB;QACF;IACF,GAAG;QAAC;QAAM;KAAe;IAEzB,gFAAgF;IAChF,MAAM,eAAe,iBAAiB,CAAA,GAAA,iHAAA,CAAA,wBAAqB,AAAD,EAAE,kBAAkB,EAAE;IAEhF,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QACpC,qDAAqD;QACrD,MAAM,SAAS,gBAAgB,oBAAoB,KAAK,CAAA,IACtD,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,IAAI,KAAK,EAAE,cAAc;QAEnD,IAAI,QAAQ;YACV,qBAAqB;QACvB;IACF,GAAG;QAAC;KAAe;IAEnB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,4HAAA,CAAA,UAAM;;;;;0BAGP,8OAAC;gBAAK,WAAU;;kCACd,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,WAAU;;sDAEb,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC;gDAAE,WAAU;0DAAwB;;;;;;;;;;;sDAMvC,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC,+HAAA,CAAA,UAAS;oDACR,OAAO;oDACP,UAAU;oDACV,SAAS;oDACT,WAAW;oDACX,aAAa;oDACb,OAAO;oDACP,aAAY;oDACZ,OAAM;oDACN,WAAW;oDACX,oBAAoB;oDACpB,iBAAiB;oDACjB,mBAAmB;oDACnB,mBAAkB;oDAClB,iBAAgB;;;;;;;;;;;;;;;;wCAMrB,gCACC,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAG,WAAU;8DAA2C;;;;;;8DACzD,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAI,WAAU;8EAAoC,eAAe,aAAa;;;;;;8EAC/E,8OAAC;oEAAI,WAAU;8EAAwB;;;;;;;;;;;;sEAEzC,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAI,WAAU;8EAAmC,eAAe,OAAO,CAAC,yBAAyB;;;;;;8EAClG,8OAAC;oEAAI,WAAU;8EAAwB;;;;;;;;;;;;sEAEzC,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAI,WAAU;;wEACZ,CAAC,eAAe,OAAO,CAAC,kBAAkB,GAAG,GAAG,EAAE,OAAO,CAAC;wEAAG;;;;;;;8EAEhE,8OAAC;oEAAI,WAAU;8EAAwB;;;;;;;;;;;;;;;;;;;;;;;;wCAO9C,sBACC,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAG,WAAU;sEACX,+BACC;;kFACE,8OAAC;wEAAI,WAAU;;;;;;oEAAwD;;6FAIzE;;kFACE,8OAAC;wEAAI,WAAU;;;;;;oEAAyC;;;;;;;;wDAK7D,gCACC,8OAAC;4DACC,SAAS,IAAM,UAAU,SAAS,CAAC,SAAS,CAAC;4DAC7C,WAAU;;8EAEV,8OAAC;oEAAI,WAAU;oEAAe,MAAK;oEAAO,QAAO;oEAAe,SAAQ;8EACtE,cAAA,8OAAC;wEAAK,eAAc;wEAAQ,gBAAe;wEAAQ,aAAa;wEAAG,GAAE;;;;;;;;;;;gEACjE;;;;;;;;;;;;;8DAMZ,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDACC,WAAU;wDACV,yBAAyB;4DAAE,QAAQ;wDAAqB;wDACxD,SAAS,CAAC;4DACR,MAAM,SAAS,EAAE,MAAM;4DACvB,IAAI,OAAO,YAAY,CAAC,gBAAgB;gEACtC,MAAM,aAAa,OAAO,YAAY,CAAC;gEACvC,MAAM,SAAS,gBAAgB,oBAAoB,KAAK,CAAA,IAAK,EAAE,MAAM,KAAK;gEAC1E,IAAI,QAAQ;oEACV,kBAAkB;gEACpB;4DACF;wDACF;;;;;;;;;;;gDAKH,kBAAkB,eAAe,mBAAmB,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,cAAc,mBAC9E,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;wEAAK,WAAU;kFAAqG;;;;;;kFACrH,8OAAC;wEAAK,WAAU;kFAAc;;;;;;;;;;;;0EAEhC,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;wEAAK,WAAU;kFAAyH;;;;;;kFACzI,8OAAC;wEAAK,WAAU;kFAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCASzC,mCACC,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAG,WAAU;8DAA2C;;;;;;8DACzD,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;;8EACC,8OAAC;oEAAI,WAAU;8EAAyC;;;;;;8EACxD,8OAAC;oEAAI,WAAU;;wEAA0C;wEAAE,kBAAkB,MAAM;wEAAC;;;;;;;;;;;;;sEAEtF,8OAAC;;8EACC,8OAAC;oEAAI,WAAU;8EAAyC;;;;;;8EACxD,8OAAC;oEAAI,WAAU;8EAA2C,kBAAkB,aAAa;;;;;;;;;;;;sEAE3F,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;;sFACC,8OAAC;4EAAI,WAAU;sFAAyC;;;;;;sFACxD,8OAAC;4EAAI,WAAU;;gFAAmC,CAAC,kBAAkB,UAAU,GAAG,GAAG,EAAE,OAAO,CAAC;gFAAG;;;;;;;;;;;;;8EAEpG,8OAAC;;sFACC,8OAAC;4EAAI,WAAU;sFAAyC;;;;;;sFACxD,8OAAC;4EAAI,WAAU;;gFAAsC,CAAC,kBAAkB,uBAAuB,GAAG,GAAG,EAAE,OAAO,CAAC;gFAAG;;;;;;;;;;;;;;;;;;;sEAGtH,8OAAC;;8EACC,8OAAC;oEAAI,WAAU;8EAAyC;;;;;;8EACxD,8OAAC;oEAAI,WAAU;8EACZ,kBAAkB,gBAAgB,CAChC,MAAM,CAAC,CAAA,QAAS,MAAM,YAAY,IAAI,MAAM,UAAU,GAAG,KACzD,GAAG,CAAC,CAAC,OAAO,sBACX,8OAAC;4EAEC,WAAU;;gFAET,MAAM,KAAK,CAAC,OAAO,CAAC,MAAM;gFAAI;gFAAG,CAAC,MAAM,UAAU,GAAG,GAAG,EAAE,OAAO,CAAC;gFAAG;;2EAHjE;;;;;;;;;;;;;;;;sEAQf,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEACC,SAAS,IAAM,mBAAmB;oEAClC,WAAU;8EACX;;;;;;8EAGD,8OAAC;oEACC,SAAS,IAAM,qBAAqB;oEACpC,WAAU;8EACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAWb,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,iIAAA,CAAA,cAAW;oCACV,gBAAgB,iBAAiB;wCAC/B,cAAc,eAAe,aAAa;wCAC1C,cAAc;wCACd,YAAY,CAAC,SAAS,EAAE,KAAK,GAAG,IAAI;wCACpC,WAAW,IAAI,OAAO,WAAW;wCACjC,YAAY,eAAe,OAAO,CAAC,kBAAkB;oCACvD,IAAW;oCACX,aAAa;oCACb,eAAe;oCACf,cAAc;;;;;;;;;;;;;;;;;kCAMpB,8OAAC;wBAAI,WAAU;kCACZ,CAAC,kBAAkB,WAAW,mBAC7B,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,iIAAA,CAAA,cAAW;gCACV,gBAAgB,iBAAiB;oCAC/B,cAAc,eAAe,aAAa;oCAC1C,cAAc;oCACd,YAAY,CAAC,SAAS,EAAE,KAAK,GAAG,IAAI;oCACpC,WAAW,IAAI,OAAO,WAAW;oCACjC,YAAY,eAAe,OAAO,CAAC,kBAAkB;gCACvD,IAAW;gCACX,aAAa;gCACb,eAAe;gCACf,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ9B","debugId":null}}]
}