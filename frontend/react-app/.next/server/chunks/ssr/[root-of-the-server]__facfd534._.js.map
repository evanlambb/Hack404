{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/lib/api.ts"],"sourcesContent":["/**\r\n * API Service Layer for Bias Detection App\r\n * \r\n * This module handles all communication with the backend API.\r\n * It provides a clean interface for our React components to use.\r\n */\r\n\r\nimport { AnalysisRequest, AnalysisResponse } from '@/types';\r\n\r\n// Configuration for API endpoints\r\nconst API_CONFIG = {\r\n  baseUrl: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000',\r\n  endpoints: {\r\n    analyze: '/analyze',\r\n    health: '/health'\r\n  },\r\n  timeout: 30000, // 30 seconds timeout\r\n} as const;\r\n\r\n/**\r\n * Custom error class for API-related errors\r\n * This helps us handle different types of errors appropriately\r\n */\r\nexport class ApiError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public status?: number,\r\n    public code?: string\r\n  ) {\r\n    super(message);\r\n    this.name = 'ApiError';\r\n  }\r\n}\r\n\r\n/**\r\n * Generic API request function with error handling\r\n * This is a utility function that handles common API patterns\r\n */\r\nasync function apiRequest<T>(\r\n  endpoint: string,\r\n  options: RequestInit = {}\r\n): Promise<T> {\r\n  const url = `${API_CONFIG.baseUrl}${endpoint}`;\r\n  \r\n  // Set default headers\r\n  const defaultHeaders = {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      ...options,\r\n      headers: {\r\n        ...defaultHeaders,\r\n        ...options.headers,\r\n      },\r\n    });\r\n\r\n    // Check if response is ok\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      throw new ApiError(\r\n        errorData.message || `HTTP ${response.status}: ${response.statusText}`,\r\n        response.status,\r\n        errorData.code\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    // Handle network errors\r\n    if (error instanceof ApiError) {\r\n      throw error;\r\n    }\r\n    \r\n    throw new ApiError(\r\n      error instanceof Error ? error.message : 'Network error occurred',\r\n      0,\r\n      'NETWORK_ERROR'\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Analyze text for bias and hate speech\r\n * \r\n * @param request - The analysis request containing text and options\r\n * @returns Promise resolving to analysis results\r\n */\r\nexport async function analyzeText(\r\n  request: AnalysisRequest\r\n): Promise<AnalysisResponse> {\r\n  // For development/demo purposes, use mock data\r\n  // In production, this would make a real API call\r\n  if (process.env.NODE_ENV === 'development' || !process.env.NEXT_PUBLIC_API_URL) {\r\n    // Simulate API delay\r\n    await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 1000));\r\n    return createMockAnalysisResponse(request.text);\r\n  }\r\n\r\n  return apiRequest<AnalysisResponse>(API_CONFIG.endpoints.analyze, {\r\n    method: 'POST',\r\n    body: JSON.stringify(request),\r\n  });\r\n}\r\n\r\n/**\r\n * Check if the API is healthy and responding\r\n * Useful for showing connection status to users\r\n */\r\nexport async function checkApiHealth(): Promise<{ status: string; timestamp: string }> {\r\n  return apiRequest<{ status: string; timestamp: string }>(\r\n    API_CONFIG.endpoints.health,\r\n    { method: 'GET' }\r\n  );\r\n}\r\n\r\n/**\r\n * Utility function to validate text input\r\n * Checks for common issues before sending to API\r\n */\r\nexport function validateTextInput(text: string): {\r\n  isValid: boolean;\r\n  errors: string[];\r\n} {\r\n  const errors: string[] = [];\r\n  \r\n  if (!text.trim()) {\r\n    errors.push('Text cannot be empty');\r\n  }\r\n  \r\n  if (text.length > 10000) {\r\n    errors.push('Text is too long (maximum 10,000 characters)');\r\n  }\r\n  \r\n  if (text.length < 5) {\r\n    errors.push('Text is too short (minimum 5 characters)');\r\n  }\r\n  \r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors\r\n  };\r\n}\r\n\r\n/**\r\n * Create a mock analysis response for development/testing\r\n * This is useful when the backend isn't available\r\n */\r\nexport function createMockAnalysisResponse(text: string): AnalysisResponse {\r\n  // Simple mock that flags potentially problematic words\r\n  const mockWords = ['stupid', 'dumb', 'crazy', 'insane', 'lame'];\r\n  const flaggedWords = mockWords\r\n    .map(word => {\r\n      const index = text.toLowerCase().indexOf(word);\r\n      if (index === -1) return null;\r\n      \r\n      return {\r\n        word,\r\n        startIndex: index,\r\n        endIndex: index + word.length,\r\n        category: 'general_bias' as const,\r\n        confidence: 0.75,\r\n        suggestions: [\r\n          { word: 'unclear', confidence: 0.8, reason: 'More neutral language' },\r\n          { word: 'confusing', confidence: 0.7, reason: 'Describes the issue without judgment' },\r\n        ],\r\n        explanation: 'This word may be perceived as ableist or judgmental'\r\n      };\r\n    })\r\n    .filter((item): item is NonNullable<typeof item> => item !== null);\r\n\r\n  return {\r\n    originalText: text,\r\n    flaggedWords,\r\n    analysisId: `mock-${Date.now()}`,\r\n    timestamp: new Date().toISOString(),\r\n    confidence: 0.85\r\n  };\r\n} "],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;;AAID,kCAAkC;AAClC,MAAM,aAAa;IACjB,SAAS,QAAQ,GAAG,CAAC,mBAAmB,IAAI;IAC5C,WAAW;QACT,SAAS;QACT,QAAQ;IACV;IACA,SAAS;AACX;AAMO,MAAM,iBAAiB;;;IAC5B,YACE,OAAe,EACf,AAAO,MAAe,EACtB,AAAO,IAAa,CACpB;QACA,KAAK,CAAC,eAHC,SAAA,aACA,OAAA;QAGP,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEA;;;CAGC,GACD,eAAe,WACb,QAAgB,EAChB,UAAuB,CAAC,CAAC;IAEzB,MAAM,MAAM,GAAG,WAAW,OAAO,GAAG,UAAU;IAE9C,sBAAsB;IACtB,MAAM,iBAAiB;QACrB,gBAAgB;QAChB,UAAU;IACZ;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,GAAG,OAAO;YACV,SAAS;gBACP,GAAG,cAAc;gBACjB,GAAG,QAAQ,OAAO;YACpB;QACF;QAEA,0BAA0B;QAC1B,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;YACvD,MAAM,IAAI,SACR,UAAU,OAAO,IAAI,CAAC,KAAK,EAAE,SAAS,MAAM,CAAC,EAAE,EAAE,SAAS,UAAU,EAAE,EACtE,SAAS,MAAM,EACf,UAAU,IAAI;QAElB;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,wBAAwB;QACxB,IAAI,iBAAiB,UAAU;YAC7B,MAAM;QACR;QAEA,MAAM,IAAI,SACR,iBAAiB,QAAQ,MAAM,OAAO,GAAG,0BACzC,GACA;IAEJ;AACF;AAQO,eAAe,YACpB,OAAwB;IAExB,+CAA+C;IAC/C,iDAAiD;IACjD,wCAAgF;QAC9E,qBAAqB;QACrB,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,OAAO,KAAK,MAAM,KAAK;QACxE,OAAO,2BAA2B,QAAQ,IAAI;IAChD;;AAMF;AAMO,eAAe;IACpB,OAAO,WACL,WAAW,SAAS,CAAC,MAAM,EAC3B;QAAE,QAAQ;IAAM;AAEpB;AAMO,SAAS,kBAAkB,IAAY;IAI5C,MAAM,SAAmB,EAAE;IAE3B,IAAI,CAAC,KAAK,IAAI,IAAI;QAChB,OAAO,IAAI,CAAC;IACd;IAEA,IAAI,KAAK,MAAM,GAAG,OAAO;QACvB,OAAO,IAAI,CAAC;IACd;IAEA,IAAI,KAAK,MAAM,GAAG,GAAG;QACnB,OAAO,IAAI,CAAC;IACd;IAEA,OAAO;QACL,SAAS,OAAO,MAAM,KAAK;QAC3B;IACF;AACF;AAMO,SAAS,2BAA2B,IAAY;IACrD,uDAAuD;IACvD,MAAM,YAAY;QAAC;QAAU;QAAQ;QAAS;QAAU;KAAO;IAC/D,MAAM,eAAe,UAClB,GAAG,CAAC,CAAA;QACH,MAAM,QAAQ,KAAK,WAAW,GAAG,OAAO,CAAC;QACzC,IAAI,UAAU,CAAC,GAAG,OAAO;QAEzB,OAAO;YACL;YACA,YAAY;YACZ,UAAU,QAAQ,KAAK,MAAM;YAC7B,UAAU;YACV,YAAY;YACZ,aAAa;gBACX;oBAAE,MAAM;oBAAW,YAAY;oBAAK,QAAQ;gBAAwB;gBACpE;oBAAE,MAAM;oBAAa,YAAY;oBAAK,QAAQ;gBAAuC;aACtF;YACD,aAAa;QACf;IACF,GACC,MAAM,CAAC,CAAC,OAA2C,SAAS;IAE/D,OAAO;QACL,cAAc;QACd;QACA,YAAY,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI;QAChC,WAAW,IAAI,OAAO,WAAW;QACjC,YAAY;IACd;AACF","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/components/Header.tsx"],"sourcesContent":["interface HeaderProps {\r\n  title?: string;\r\n  className?: string;\r\n}\r\n\r\nexport default function Header({ \r\n  title = \"Bias Detection Tool\",\r\n  className = \"\" \r\n}: HeaderProps) {\r\n  return (\r\n    <header className={`bg-white shadow-sm border-b border-gray-200 ${className}`}>\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"flex items-center justify-between h-16\">\r\n          <div className=\"flex items-center\">\r\n            <h1 className=\"text-xl font-semibold text-gray-900\">\r\n              {title}\r\n            </h1>\r\n          </div>\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"text-sm text-gray-500\">\r\n              AI-Powered Text Analysis\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n} "],"names":[],"mappings":";;;;;AAKe,SAAS,OAAO,EAC7B,QAAQ,qBAAqB,EAC7B,YAAY,EAAE,EACF;IACZ,qBACE,8OAAC;QAAO,WAAW,CAAC,4CAA4C,EAAE,WAAW;kBAC3E,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAG,WAAU;sCACX;;;;;;;;;;;kCAGL,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;sCAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQnD","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/components/TextInput.tsx"],"sourcesContent":["import { ChangeEvent, useState, useEffect, useCallback, useMemo, useRef } from 'react';\r\n\r\nexport interface ValidationRule {\r\n  type: 'minLength' | 'maxLength' | 'required' | 'custom';\r\n  value?: number;\r\n  message: string;\r\n  validator?: (text: string) => boolean;\r\n}\r\n\r\nexport interface TextInputProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  onClear?: () => void;\r\n  onAnalyze?: () => void;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  isAnalyzing?: boolean;\r\n  error?: string | null;\r\n  label?: string;\r\n  maxLength?: number;\r\n  minLength?: number;\r\n  className?: string;\r\n  showCharacterCount?: boolean;\r\n  showClearButton?: boolean;\r\n  showAnalyzeButton?: boolean;\r\n  analyzeButtonText?: string;\r\n  clearButtonText?: string;\r\n  validateOnChange?: boolean;\r\n  validationRules?: ValidationRule[];\r\n  onValidationChange?: (isValid: boolean, errors: string[]) => void;\r\n  confirmClearThreshold?: number; // Characters threshold for showing confirmation dialog\r\n  showClearConfirmation?: boolean;\r\n}\r\n\r\n// Default empty validation rules (stable reference)\r\nconst DEFAULT_VALIDATION_RULES: ValidationRule[] = [];\r\n\r\nexport default function TextInput({\r\n  value,\r\n  onChange,\r\n  onClear,\r\n  onAnalyze,\r\n  placeholder = \"Type or paste your text here...\",\r\n  disabled = false,\r\n  isAnalyzing = false,\r\n  error = null,\r\n  label = \"Enter text to analyze\",\r\n  maxLength = 5000,\r\n  minLength = 5,\r\n  className = \"\",\r\n  showCharacterCount = true,\r\n  showClearButton = true,\r\n  showAnalyzeButton = true,\r\n  analyzeButtonText = \"Analyze Text\",\r\n  clearButtonText = \"Clear\",\r\n  validateOnChange = true,\r\n  validationRules = DEFAULT_VALIDATION_RULES,\r\n  onValidationChange,\r\n  confirmClearThreshold = 50,\r\n  showClearConfirmation = true\r\n}: TextInputProps) {\r\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n  const [isValid, setIsValid] = useState(true);\r\n  const [showConfirmDialog, setShowConfirmDialog] = useState<boolean>(false);\r\n  const dialogRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Combine default rules with custom rules\r\n  const allRules = useMemo(() => {\r\n    const defaultRules: ValidationRule[] = [\r\n      {\r\n        type: 'required',\r\n        message: 'Text is required',\r\n        validator: (text: string) => text.trim().length > 0\r\n      },\r\n      {\r\n        type: 'minLength',\r\n        value: minLength,\r\n        message: `Text must be at least ${minLength} characters long`,\r\n        validator: (text: string) => text.trim().length >= minLength\r\n      },\r\n      {\r\n        type: 'maxLength',\r\n        value: maxLength,\r\n        message: `Text must not exceed ${maxLength} characters`,\r\n        validator: (text: string) => text.length <= maxLength\r\n      }\r\n    ];\r\n\r\n    return [...defaultRules, ...validationRules];\r\n  }, [minLength, maxLength, validationRules]);\r\n\r\n  // Validation function\r\n  const validateText = useCallback((text: string): { isValid: boolean; errors: string[] } => {\r\n    const errors: string[] = [];\r\n    \r\n    for (const rule of allRules) {\r\n      let isRuleValid = false;\r\n      \r\n      switch (rule.type) {\r\n        case 'required':\r\n          isRuleValid = text.trim().length > 0;\r\n          break;\r\n        case 'minLength':\r\n          isRuleValid = text.trim().length === 0 || text.trim().length >= (rule.value || minLength);\r\n          break;\r\n        case 'maxLength':\r\n          isRuleValid = text.length <= (rule.value || maxLength);\r\n          break;\r\n        case 'custom':\r\n          isRuleValid = rule.validator ? rule.validator(text) : true;\r\n          break;\r\n        default:\r\n          isRuleValid = true;\r\n      }\r\n      \r\n      if (!isRuleValid) {\r\n        errors.push(rule.message);\r\n      }\r\n    }\r\n    \r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }, [allRules, minLength, maxLength]);\r\n\r\n  // Effect to validate on value change\r\n  useEffect(() => {\r\n    if (validateOnChange) {\r\n      const { isValid: valid, errors } = validateText(value);\r\n      setIsValid(valid);\r\n      setValidationErrors(errors);\r\n    }\r\n  }, [value, validateOnChange, validateText]);\r\n\r\n  // Effect to notify parent of validation changes\r\n  useEffect(() => {\r\n    if (onValidationChange && validateOnChange) {\r\n      onValidationChange(isValid, validationErrors);\r\n    }\r\n  }, [isValid, validationErrors, onValidationChange, validateOnChange]);\r\n\r\n  const handleTextChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  const handleConfirmClear = useCallback(() => {\r\n    setShowConfirmDialog(false);\r\n    if (onClear) {\r\n      onClear();\r\n    }\r\n  }, [onClear]);\r\n\r\n  const handleCancelClear = useCallback(() => {\r\n    setShowConfirmDialog(false);\r\n  }, []);\r\n\r\n  const handleClearClick = () => {\r\n    // Check if we need to show confirmation dialog\r\n    if (showClearConfirmation && value.length >= confirmClearThreshold) {\r\n      setShowConfirmDialog(true);\r\n    } else {\r\n      // Clear immediately if no confirmation needed\r\n      if (onClear) {\r\n        onClear();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAnalyzeClick = () => {\r\n    if (onAnalyze) {\r\n      onAnalyze();\r\n    }\r\n  };\r\n\r\n  // Effect to handle keyboard events and click outside for confirmation dialog\r\n  useEffect(() => {\r\n    if (showConfirmDialog) {\r\n      const handleKeyDown = (e: KeyboardEvent) => {\r\n        if (e.key === 'Escape') {\r\n          handleCancelClear();\r\n        } else if (e.key === 'Enter') {\r\n          handleConfirmClear();\r\n        }\r\n      };\r\n\r\n      const handleClickOutside = (e: MouseEvent) => {\r\n        if (dialogRef.current && !dialogRef.current.contains(e.target as Node)) {\r\n          handleCancelClear();\r\n        }\r\n      };\r\n\r\n      document.addEventListener('keydown', handleKeyDown);\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n\r\n      return () => {\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n        document.removeEventListener('mousedown', handleClickOutside);\r\n      };\r\n    }\r\n    // Return undefined for the else case to satisfy TypeScript\r\n    return undefined;\r\n  }, [showConfirmDialog, handleConfirmClear, handleCancelClear]);\r\n\r\n  const isAtLimit = value.length >= maxLength;\r\n  const isNearLimit = value.length >= maxLength * 0.8;\r\n  const characterCountColor = isAtLimit \r\n    ? 'text-red-600' \r\n    : isNearLimit \r\n      ? 'text-yellow-600' \r\n      : 'text-gray-500';\r\n\r\n  return (\r\n    <div className={`bg-white rounded-lg shadow-sm border border-gray-200 p-6 ${className}`}>\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <label \r\n            htmlFor=\"text-input\" \r\n            className=\"block text-sm font-medium text-gray-700 mb-2\"\r\n          >\r\n            {label}\r\n          </label>\r\n          <textarea\r\n            id=\"text-input\"\r\n            value={value}\r\n            onChange={handleTextChange}\r\n            placeholder={placeholder}\r\n            maxLength={maxLength}\r\n            className=\"w-full h-40 px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 resize-none\"\r\n            disabled={disabled || isAnalyzing}\r\n          />\r\n        </div>\r\n\r\n        {/* Controls */}\r\n        <div className=\"flex flex-col sm:flex-row gap-3 sm:justify-between sm:items-center\">\r\n          {showCharacterCount && (\r\n            <div className={`text-sm ${characterCountColor}`}>\r\n              {value.length} / {maxLength} characters\r\n            </div>\r\n          )}\r\n          <div className=\"flex gap-3\">\r\n            {showClearButton && (\r\n              <button\r\n                onClick={handleClearClick}\r\n                disabled={!value || isAnalyzing}\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {clearButtonText}\r\n              </button>\r\n            )}\r\n            {showAnalyzeButton && (\r\n              <button\r\n                onClick={handleAnalyzeClick}\r\n                disabled={!value.trim() || isAnalyzing || !isValid}\r\n                className=\"px-6 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {isAnalyzing ? 'Analyzing...' : analyzeButtonText}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* External Error Display */}\r\n        {error && (\r\n          <div className=\"rounded-md bg-red-50 p-4\">\r\n            <div className=\"flex\">\r\n              <div className=\"ml-3\">\r\n                <h3 className=\"text-sm font-medium text-red-800\">\r\n                  Error\r\n                </h3>\r\n                <div className=\"mt-2 text-sm text-red-700\">\r\n                  {error}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Validation Errors Display */}\r\n        {validationErrors.length > 0 && validateOnChange && (\r\n          <div className=\"rounded-md bg-orange-50 p-4\">\r\n            <div className=\"flex\">\r\n              <div className=\"ml-3\">\r\n                <h3 className=\"text-sm font-medium text-orange-800\">\r\n                  Validation {validationErrors.length === 1 ? 'Error' : 'Errors'}\r\n                </h3>\r\n                <div className=\"mt-2\">\r\n                  {validationErrors.map((validationError, index) => (\r\n                    <div key={index} className=\"text-sm text-orange-700\">\r\n                      • {validationError}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Confirmation Dialog */}\r\n      {showConfirmDialog && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div ref={dialogRef} className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\r\n              Confirm Clear Text\r\n            </h3>\r\n            <p className=\"text-gray-600 mb-6\">\r\n              You have {value.length} characters of text. Are you sure you want to clear all your text? This action cannot be undone.\r\n            </p>\r\n            <div className=\"flex justify-end space-x-3\">\r\n              <button\r\n                onClick={handleCancelClear}\r\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                onClick={handleConfirmClear}\r\n                className=\"px-4 py-2 text-sm font-medium text-white bg-red-600 border border-transparent rounded-md shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\r\n              >\r\n                Clear Text\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/src/components/BiasDetectionApp.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useCallback } from 'react';\r\nimport { AnalysisResponse, AnalysisRequest } from '@/types';\r\nimport { analyzeText } from '@/lib/api';\r\nimport Header from './Header';\r\nimport TextInput from './TextInput';\r\n\r\nexport function BiasDetectionApp() {\r\n  const [text, setText] = useState('');\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [analysisResult, setAnalysisResult] = useState<AnalysisResponse | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const handleAnalyze = useCallback(async () => {\r\n    if (!text.trim()) {\r\n      setError('Please enter some text to analyze');\r\n      return;\r\n    }\r\n\r\n    setIsAnalyzing(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const request: AnalysisRequest = {\r\n        text: text.trim(),\r\n        options: {\r\n          sensitivity: 'medium',\r\n          categories: ['gender_bias', 'racial_bias', 'religious_bias', 'general_bias']\r\n        }\r\n      };\r\n\r\n      const result = await analyzeText(request);\r\n      setAnalysisResult(result);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred during analysis');\r\n      setAnalysisResult(null);\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n    }\r\n  }, [text]);\r\n\r\n  const handleClearText = useCallback(() => {\r\n    setText('');\r\n    setAnalysisResult(null);\r\n    setError(null);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <Header />\r\n\r\n      {/* Main Content */}\r\n      <main className=\"max-w-7xl mx-auto px-4 py-8\">\r\n        {/* Description */}\r\n        <div className=\"text-center mb-8\">\r\n          <p className=\"text-lg text-gray-600\">\r\n            Analyze text for potential bias and get suggestions for improvement\r\n          </p>\r\n        </div>\r\n          \r\n          <div className=\"space-y-8\">\r\n          {/* Input Section */}\r\n          <TextInput\r\n            value={text}\r\n            onChange={setText}\r\n            onClear={handleClearText}\r\n            onAnalyze={handleAnalyze}\r\n            isAnalyzing={isAnalyzing}\r\n            error={error}\r\n            placeholder=\"Type or paste your text here...\"\r\n            label=\"Enter text to analyze\"\r\n            maxLength={5000}\r\n            showCharacterCount={true}\r\n            showClearButton={true}\r\n            showAnalyzeButton={true}\r\n            analyzeButtonText=\"Analyze Text\"\r\n            clearButtonText=\"Clear\"\r\n          />\r\n\r\n          {/* Results Section */}\r\n          {analysisResult && (\r\n            <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\r\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\r\n                Analysis Results\r\n              </h2>\r\n              \r\n              {/* Overall Score */}\r\n              <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-sm font-medium text-gray-700\">\r\n                    Analysis Confidence:\r\n                  </span>\r\n                  <span className={`text-lg font-bold ${\r\n                    (analysisResult.confidence || 0) > 0.7 \r\n                      ? 'text-green-600' \r\n                      : (analysisResult.confidence || 0) > 0.5 \r\n                        ? 'text-yellow-600' \r\n                        : 'text-red-600'\r\n                  }`}>\r\n                    {Math.round((analysisResult.confidence || 0) * 100)}%\r\n                  </span>\r\n                </div>\r\n                <div className=\"mt-2 text-sm text-gray-600\">\r\n                  {analysisResult.flaggedWords.length === 0 && 'No issues detected'}\r\n                  {analysisResult.flaggedWords.length > 0 && `${analysisResult.flaggedWords.length} potential issue${analysisResult.flaggedWords.length > 1 ? 's' : ''} found`}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Detected Issues */}\r\n              {analysisResult.flaggedWords.length > 0 ? (\r\n                <div>\r\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-3\">\r\n                    Detected Issues ({analysisResult.flaggedWords.length})\r\n                  </h3>\r\n                  <div className=\"space-y-3\">\r\n                    {analysisResult.flaggedWords.map((flaggedWord, index) => (\r\n                      <div \r\n                        key={index}\r\n                        className=\"p-4 border border-gray-200 rounded-lg\"\r\n                      >\r\n                        <div className=\"flex items-start justify-between mb-2\">\r\n                          <div>\r\n                            <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\r\n                              {flaggedWord.category}\r\n                            </span>\r\n                            <span className=\"ml-2 text-sm text-gray-600\">\r\n                              Confidence: {Math.round(flaggedWord.confidence * 100)}%\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"mb-2\">\r\n                          <span className=\"text-sm font-medium text-gray-700\">Flagged text: </span>\r\n                          <span className=\"text-sm bg-yellow-100 px-1 rounded\">\r\n                            &quot;{flaggedWord.word}&quot;\r\n                          </span>\r\n                        </div>\r\n                        \r\n                        {flaggedWord.explanation && (\r\n                          <div className=\"mb-2 text-sm text-gray-600\">\r\n                            <span className=\"font-medium\">Explanation: </span>\r\n                            {flaggedWord.explanation}\r\n                          </div>\r\n                        )}\r\n                        \r\n                        {flaggedWord.suggestions && flaggedWord.suggestions.length > 0 && (\r\n                          <div>\r\n                            <span className=\"text-sm font-medium text-gray-700\">Suggestions: </span>\r\n                            <div className=\"mt-1 flex flex-wrap gap-1\">\r\n                              {flaggedWord.suggestions.map((suggestion, idx) => (\r\n                                <button\r\n                                  key={idx}\r\n                                  className=\"inline-flex items-center px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded hover:bg-blue-200 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                                  onClick={() => {\r\n                                    const newText = text.replace(flaggedWord.word, suggestion.word);\r\n                                    setText(newText);\r\n                                  }}\r\n                                                                  >\r\n                                    &quot;{suggestion.word}&quot;\r\n                                  </button>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-8\">\r\n                  <div className=\"text-green-600 text-lg font-medium mb-2\">\r\n                    ✓ No bias detected\r\n                  </div>\r\n                  <div className=\"text-gray-600\">\r\n                    The text appears to be free from detectable bias patterns.\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          </div>\r\n      </main>\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1018, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1041, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1048, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thedi/OneDrive/Documents/GitHub/Hack404/frontend/react-app/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}}]
}