{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/AuthContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { User } from '../lib/auth';\n\ninterface AuthContextType {\n  user: User | null;\n  isLoading: boolean;\n  login: (user: User) => void;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for saved user in localStorage\n    const savedUser = localStorage.getItem('user');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = (userData: User) => {\n    setUser(userData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, isLoading, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAYA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAAiC;;IACtE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,uCAAuC;YACvC,MAAM,YAAY,aAAa,OAAO,CAAC;YACvC,IAAI,WAAW;gBACb,IAAI;oBACF,QAAQ,KAAK,KAAK,CAAC;gBACrB,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,6BAA6B;oBAC3C,aAAa,UAAU,CAAC;gBAC1B;YACF;YACA,aAAa;QACf;iCAAG,EAAE;IAEL,MAAM,QAAQ,CAAC;QACb,QAAQ;QACR,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;IAC9C;IAEA,MAAM,SAAS;QACb,QAAQ;QACR,aAAa,UAAU,CAAC;IAC1B;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAW;YAAO;QAAO;kBAC3D;;;;;;AAGP;GAjCgB;KAAA;AAmCT,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/lib/auth.ts"],"sourcesContent":["const API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\n\nexport interface AuthResponse {\n  success: boolean;\n  message: string;\n  user_id?: number;\n  token?: string;\n}\n\nexport interface User {\n  id: number;\n  email: string;\n  name: string;\n  token: string;\n}\n\nexport async function signup(email: string, password: string, name: string): Promise<AuthResponse> {\n  try {\n    const response = await fetch(`${API_URL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password, name }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Signup failed');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Signup error:', error);\n    return {\n      success: false,\n      message: 'Network error during signup',\n    };\n  }\n}\n\nexport async function login(email: string, password: string): Promise<AuthResponse> {\n  try {\n    const response = await fetch(`${API_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Login failed');\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Login error:', error);\n    return {\n      success: false,\n      message: 'Network error during login',\n    };\n  }\n}\n"],"names":[],"mappings":";;;;AAAgB;AAAhB,MAAM,UAAU,6DAAmC;AAgB5C,eAAe,OAAO,KAAa,EAAE,QAAgB,EAAE,IAAY;IACxE,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,OAAO,CAAC,EAAE;YAChD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;gBAAU;YAAK;QAC/C;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;AACF;AAEO,eAAe,MAAM,KAAa,EAAE,QAAgB;IACzD,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,MAAM,CAAC,EAAE;YAC/C,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAS;QACzC;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,MAAM,SAAS,IAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO;YACL,SAAS;YACT,SAAS;QACX;IACF;AACF","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/AuthForm.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { signup, login as apiLogin } from '../lib/auth';\nimport { useAuth } from './AuthContext';\n\ninterface AuthFormProps {\n  onClose: () => void;\n}\n\nexport default function AuthForm({ onClose }: AuthFormProps) {\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { login } = useAuth();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n\n    try {\n      if (isLogin) {\n        const response = await apiLogin(email, password);\n        if (response.success && response.user_id && response.token) {\n          login({\n            id: response.user_id,\n            email,\n            name: email.split('@')[0] || 'User', // Simple name extraction\n            token: response.token,\n          });\n          onClose();\n        } else {\n          setError(response.message || 'Login failed');\n        }\n      } else {\n        const response = await signup(email, password, name);\n        if (response.success && response.user_id && response.token) {\n          login({\n            id: response.user_id,\n            email,\n            name,\n            token: response.token,\n          });\n          onClose();\n        } else {\n          setError(response.message || 'Signup failed');\n        }\n      }\n    } catch (err) {\n      setError('An unexpected error occurred');\n      console.error('Auth error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-gray-50 bg-opacity-95 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-xl shadow-2xl p-8 max-w-md w-full mx-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-8 h-8 bg-red-500 rounded-lg flex items-center justify-center\">\n              <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n              </svg>\n            </div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">\n              {isLogin ? 'Sign In' : 'Sign Up'}\n            </h2>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 text-2xl w-8 h-8 flex items-center justify-center rounded-full hover:bg-gray-100 transition-colors\"\n          >\n            ×\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          {!isLogin && (\n            <div>\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Name\n              </label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required={!isLogin}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 placeholder-gray-500 text-gray-900\"\n                placeholder=\"Enter your name\"\n              />\n            </div>\n          )}\n\n          <div>\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Email\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 placeholder-gray-500 text-gray-900\"\n              placeholder=\"Enter your email\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500 placeholder-gray-500 text-gray-900\"\n              placeholder=\"Enter your password\"\n            />\n          </div>\n\n          {error && (\n            <div className=\"text-red-600 text-sm bg-red-50 p-3 rounded-md\">\n              {error}\n            </div>\n          )}\n\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"w-full bg-red-500 text-white py-3 px-4 rounded-md hover:bg-red-600 disabled:opacity-50 disabled:cursor-not-allowed font-medium transition-all duration-200\"\n          >\n            {isLoading ? (\n              <div className=\"flex items-center justify-center gap-2\">\n                <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                Loading...\n              </div>\n            ) : (isLogin ? 'Sign In' : 'Sign Up')}\n          </button>\n        </form>\n\n        <div className=\"mt-6 text-center\">\n          <div className=\"relative\">\n            <div className=\"absolute inset-0 flex items-center\">\n              <div className=\"w-full border-t border-gray-300\"></div>\n            </div>\n            <div className=\"relative flex justify-center text-sm\">\n              <span className=\"px-2 bg-white text-gray-500\">or</span>\n            </div>\n          </div>\n          <button\n            onClick={() => setIsLogin(!isLogin)}\n            className=\"mt-4 text-red-500 hover:text-red-700 text-sm font-medium\"\n          >\n            {isLogin ? \"Don't have an account? Sign up\" : \"Already have an account? Sign in\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/types/index.ts"],"sourcesContent":["/**\n * Core Types for Hate Speech Detection App\n *\n * These interfaces define the shape of data flowing through our application.\n * TypeScript helps us catch errors early and provides better IDE support.\n */\n\n// Main interface for text analysis requests\nexport interface AnalysisRequest {\n  text: string;\n}\n\n// Individual rationale token from the model\nexport interface RationaleToken {\n  token: string;\n  is_rationale: boolean;\n  confidence: number;\n}\n\n// Individual clause analysis from the backend\nexport interface ClauseAnalysis {\n  clause: string;\n  is_hate_speech: boolean;\n  confidence: number;\n  hate_speech_probability: number;\n  rationale_tokens: RationaleToken[];\n  justification: string;\n}\n\n// Response from the backend API\nexport interface AnalysisResponse {\n  original_text: string;\n  total_clauses: number;\n  hate_speech_clauses: ClauseAnalysis[];\n  summary: {\n    total_clauses_analyzed: number;\n    hate_speech_clauses_found: number;\n    hate_speech_percentage: number;\n    confidence_threshold_used: number;\n    overall_assessment: string;\n    risk_level: string;\n  };\n}\n\n// Simplified response for basic analysis\nexport interface SimpleAnalysisResponse {\n  text: string;\n  hate_speech_detected: boolean;\n  confidence: number;\n  hate_speech_clauses: Array<{\n    text: string;\n    confidence: number;\n    justification: string;\n  }>;\n}\n\n// Bias detection types\nexport interface BiasSpan {\n  text: string;\n  category: string;\n  explanation: string;\n  suggested_revision: string;\n  start_index: number;\n  end_index: number;\n}\n\nexport interface BiasAnalysisResponse {\n  original_text: string;\n  bias_spans: BiasSpan[];\n  summary: {\n    total_bias_instances: number;\n    categories_detected: string[];\n    overall_assessment: string;\n    risk_level: string;\n    text_length: number;\n    bias_density: number;\n  };\n}\n\n// Legacy compatibility for existing UI components\nexport interface FlaggedWord {\n  word: string;\n  startIndex: number;\n  endIndex: number;\n  category: string;\n  confidence?: number;\n  suggestions: {\n    word: string;\n    confidence: number;\n    reason: string;\n  }[];\n  explanation: string;\n}\n\nexport interface AnalysisResult {\n  analysisId: string;\n  timestamp: string;\n  flaggedWords: FlaggedWord[];\n  original_text: string;\n  bias_spans: BiasSpan[];\n  summary: BiasAnalysisResponse[\"summary\"];\n}\n\n// Bias categories with their display colors\nexport const BIAS_CATEGORIES = {\n  \"Race / Ethnicity\": { color: \"#ff4444\", lightColor: \"#ffebee\" },\n  \"Gender / Gender Identity\": { color: \"#ff6b35\", lightColor: \"#fff3e0\" },\n  Age: { color: \"#ffa726\", lightColor: \"#fff8e1\" },\n  \"Religion / Belief System\": { color: \"#ffcc02\", lightColor: \"#fffde7\" },\n  \"Sexual Orientation\": { color: \"#66bb6a\", lightColor: \"#e8f5e8\" },\n  \"Socioeconomic Status\": { color: \"#42a5f5\", lightColor: \"#e3f2fd\" },\n  \"Nationality / Immigration Status\": {\n    color: \"#ab47bc\",\n    lightColor: \"#f3e5f5\",\n  },\n  \"Disability (Visible & Invisible)\": {\n    color: \"#ef5350\",\n    lightColor: \"#ffebee\",\n  },\n  \"Education Level\": { color: \"#26c6da\", lightColor: \"#e0f2f1\" },\n  \"Political Ideology\": { color: \"#ff7043\", lightColor: \"#fbe9e7\" },\n  \"Physical Appearance\": {\n    color: \"#8d6e63\",\n    lightColor: \"#efebe9\",\n  },\n} as const;\n\nexport type BiasCategory = keyof typeof BIAS_CATEGORIES;\n\n// UI State management types\nexport interface AppState {\n  inputText: string;\n  analysisResult: AnalysisResponse | null;\n  isLoading: boolean;\n  error: string | null;\n  interactedClauses: Set<string>;\n}\n\n// For managing the text segments in our UI\nexport interface TextSegment {\n  text: string;\n  isFlagged: boolean;\n  clauseAnalysis?: ClauseAnalysis;\n  key: string;\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC,GAED,4CAA4C;;;;AAiGrC,MAAM,kBAAkB;IAC7B,oBAAoB;QAAE,OAAO;QAAW,YAAY;IAAU;IAC9D,4BAA4B;QAAE,OAAO;QAAW,YAAY;IAAU;IACtE,KAAK;QAAE,OAAO;QAAW,YAAY;IAAU;IAC/C,4BAA4B;QAAE,OAAO;QAAW,YAAY;IAAU;IACtE,sBAAsB;QAAE,OAAO;QAAW,YAAY;IAAU;IAChE,wBAAwB;QAAE,OAAO;QAAW,YAAY;IAAU;IAClE,oCAAoC;QAClC,OAAO;QACP,YAAY;IACd;IACA,oCAAoC;QAClC,OAAO;QACP,YAAY;IACd;IACA,mBAAmB;QAAE,OAAO;QAAW,YAAY;IAAU;IAC7D,sBAAsB;QAAE,OAAO;QAAW,YAAY;IAAU;IAChE,uBAAuB;QACrB,OAAO;QACP,YAAY;IACd;AACF","debugId":null}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/lib/api.ts"],"sourcesContent":["import {\n  AnalysisRequest,\n  BiasAnalysisResponse,\n  FlaggedWord,\n  BiasSpan,\n  BIAS_CATEGORIES,\n} from \"@/types\";\n\n// Base URL for the backend API\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8000\";\n\n/**\n * Analyzes text for bias using the backend API\n * @param request - The analysis request containing text\n * @returns Promise<BiasAnalysisResponse> - The bias analysis results\n */\nexport async function analyzeText(\n  request: AnalysisRequest\n): Promise<BiasAnalysisResponse> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/analyze`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        text: request.text,\n      }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(\n        errorData.detail || `HTTP error! status: ${response.status}`\n      );\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error analyzing text:\", error);\n    throw error instanceof Error ? error : new Error(\"Failed to analyze text\");\n  }\n}\n\n/**\n * Converts bias spans to flagged words format for backward compatibility\n * @param biasSpans - The bias spans from the backend\n * @param originalText - The original text that was analyzed\n * @returns FlaggedWord[] - Array of flagged words for UI display\n */\nexport function convertBiasSpansToFlaggedWords(\n  biasSpans: BiasSpan[],\n  originalText: string\n): FlaggedWord[] {\n  const flaggedWords: FlaggedWord[] = [];\n\n  biasSpans.forEach((span) => {\n    // Find the position of this span in the original text\n    const startIndex = span.start_index;\n    const endIndex = span.end_index;\n\n    // Validate indices\n    if (\n      startIndex >= 0 &&\n      endIndex <= originalText.length &&\n      startIndex < endIndex\n    ) {\n      flaggedWords.push({\n        word: span.text,\n        startIndex,\n        endIndex,\n        category: span.category,\n        confidence: 1.0, // LLM doesn't provide confidence, so we assume high confidence\n        suggestions: [\n          {\n            word: span.suggested_revision,\n            confidence: 1.0,\n            reason: span.explanation,\n          },\n        ],\n        explanation: span.explanation,\n      });\n    }\n  });\n\n  return flaggedWords;\n}\n\n/**\n * Converts analysis results to flagged words format for backward compatibility\n * @param analysisResult - The analysis response from the backend\n * @returns FlaggedWord[] - Array of flagged words\n */\nexport function convertToFlaggedWords(\n  analysisResult: BiasAnalysisResponse\n): FlaggedWord[] {\n  return convertBiasSpansToFlaggedWords(\n    analysisResult.bias_spans,\n    analysisResult.original_text\n  );\n}\n\n/**\n * Health check for the API\n * @returns Promise<boolean> - True if API is healthy\n */\nexport async function checkApiHealth(): Promise<boolean> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/`);\n    const data = await response.json();\n    return response.ok && data.analyzer_loaded;\n  } catch (error) {\n    console.error(\"API health check failed:\", error);\n    return false;\n  }\n}\n\n/**\n * Simple analysis endpoint for basic use cases\n * @param text - The text to analyze\n * @returns Promise<unknown> - Simplified analysis results\n */\nexport async function analyzeSimple(text: string): Promise<unknown> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/analyze-simple`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ text }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(\n        errorData.detail || `HTTP error! status: ${response.status}`\n      );\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error in simple analysis:\", error);\n    throw error instanceof Error ? error : new Error(\"Failed to analyze text\");\n  }\n}\n\n/**\n * Save analysis result to the database\n * @param text - The analyzed text\n * @param result - The analysis result\n * @param title - Optional title for the analysis\n * @returns Promise<boolean> - Success status\n */\nexport async function saveAnalysis(\n  text: string,\n  result: any,\n  title?: string\n): Promise<boolean> {\n  try {\n    console.log(\"saveAnalysis called with:\", {\n      text: text.slice(0, 50) + \"...\",\n      title,\n      hasResult: !!result,\n    });\n    const headers = createAuthHeaders();\n    console.log(\"Auth headers:\", headers);\n\n    const response = await fetch(`${API_BASE_URL}/save-analysis`, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify({ text, result, title }),\n    });\n\n    console.log(\"Response status:\", response.status);\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      console.error(\"Save analysis error:\", errorData);\n      throw new Error(\n        errorData.detail || `HTTP error! status: ${response.status}`\n      );\n    }\n\n    const data = await response.json();\n    console.log(\"Save analysis response:\", data);\n    return data.success;\n  } catch (error) {\n    console.error(\"Error saving analysis:\", error);\n    return false;\n  }\n}\n\n/**\n * Get saved analyses for the authenticated user\n * @returns Promise<SavedAnalysis[]> - Array of saved analyses\n */\nexport async function getSavedAnalyses(): Promise<SavedAnalysis[]> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/saved-analyses`, {\n      method: \"GET\",\n      headers: createAuthHeaders(),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(\n        errorData.detail || `HTTP error! status: ${response.status}`\n      );\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error getting saved analyses:\", error);\n    return [];\n  }\n}\n\n/**\n * Delete a saved analysis\n * @param analysisId - The ID of the analysis to delete\n * @returns Promise<boolean> - Success status\n */\nexport async function deleteAnalysis(analysisId: number): Promise<boolean> {\n  try {\n    const response = await fetch(\n      `${API_BASE_URL}/delete-analysis/${analysisId}`,\n      {\n        method: \"DELETE\",\n        headers: createAuthHeaders(),\n      }\n    );\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(\n        errorData.detail || `HTTP error! status: ${response.status}`\n      );\n    }\n\n    const data = await response.json();\n    return data.success;\n  } catch (error) {\n    console.error(\"Error deleting analysis:\", error);\n    return false;\n  }\n}\n\n// Auth interfaces\ninterface AuthRequest {\n  email: string;\n  password: string;\n  name?: string;\n}\n\ninterface AuthResponse {\n  success: boolean;\n  message: string;\n  user_id?: number;\n  token?: string;\n}\n\ninterface SavedAnalysis {\n  id: number;\n  user_id: number;\n  text: string;\n  result: any;\n  title?: string;\n  created_at: string;\n}\n\n/**\n * Get auth token from localStorage\n */\nfunction getAuthToken(): string | null {\n  if (typeof window !== \"undefined\") {\n    // First try to get token from direct storage\n    const token = localStorage.getItem(\"auth_token\");\n    if (token) return token;\n\n    // Fallback to getting token from user object\n    const userStr = localStorage.getItem(\"user\");\n    if (userStr) {\n      try {\n        const user = JSON.parse(userStr);\n        return user.token || null;\n      } catch (error) {\n        console.error(\"Error parsing user data:\", error);\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Create auth headers\n */\nfunction createAuthHeaders(): HeadersInit {\n  const token = getAuthToken();\n  const headers: HeadersInit = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  return headers;\n}\n\n/**\n * Get the display color for a bias category\n * @param category - The bias category\n * @returns Object with color and lightColor properties\n */\nexport function getBiasCategoryColor(category: string): {\n  color: string;\n  lightColor: string;\n} {\n  const categoryColors =\n    BIAS_CATEGORIES[category as keyof typeof BIAS_CATEGORIES];\n  return categoryColors || { color: \"#757575\", lightColor: \"#f5f5f5\" }; // Default gray\n}\n\n/**\n * Get all bias categories with their colors\n * @returns Array of bias categories with their display information\n */\nexport function getAllBiasCategories(): Array<{\n  name: string;\n  color: string;\n  lightColor: string;\n}> {\n  return Object.entries(BIAS_CATEGORIES).map(([name, colors]) => ({\n    name,\n    ...colors,\n  }));\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 775, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/TextInput.tsx"],"sourcesContent":["import {\n  ChangeEvent,\n  useState,\n  useEffect,\n  useCallback,\n  useMemo,\n  useRef,\n} from \"react\";\nimport type { MouseEvent } from \"react\";\nimport { getBiasCategoryColor } from \"@/lib/api\";\nimport { BiasAnalysisResponse } from \"@/types\";\n\nexport interface FlaggedWord {\n  word: string;\n  startIndex: number;\n  endIndex: number;\n  category: string;\n  explanation?: string;\n  suggestions?: Array<{\n    word: string;\n    confidence: number;\n    reason: string;\n  }>;\n}\n\nexport interface ValidationRule {\n  type: \"minLength\" | \"maxLength\" | \"required\" | \"custom\";\n  value?: number;\n  message: string;\n  validator?: (text: string) => boolean;\n}\n\nexport interface TextInputProps {\n  value: string;\n  onChange: (value: string) => void;\n  onClear?: () => void;\n  onAnalyze?: () => void;\n  placeholder?: string;\n  disabled?: boolean;\n  isAnalyzing?: boolean;\n  error?: string | null;\n  label?: string;\n  maxLength?: number;\n  minLength?: number;\n  className?: string;\n  showCharacterCount?: boolean;\n  showClearButton?: boolean;\n  showAnalyzeButton?: boolean;\n  analyzeButtonText?: string;\n  clearButtonText?: string;\n  validateOnChange?: boolean;\n  validationRules?: ValidationRule[];\n  onValidationChange?: (isValid: boolean, errors: string[]) => void;\n  confirmClearThreshold?: number;\n  showClearConfirmation?: boolean;\n  flaggedWords?: FlaggedWord[];\n  onClearHighlights?: () => void;\n  // New props for analysis display\n  analysisText?: string;\n  showAnalysisOutput?: boolean;\n  analysisResults?: BiasAnalysisResponse | null;\n}\n\n// Default empty validation rules (stable reference)\nconst DEFAULT_VALIDATION_RULES: ValidationRule[] = [];\n\n// Enhanced text segment interface with direct word index tracking\ninterface TextSegment {\n  text: string;\n  categories: string[];\n  explanations: string[];\n  originalWordIndices: number[]; // Direct references to flagged word indices\n}\n\nfunction createTextSegments(\n  text: string,\n  flaggedWords: FlaggedWord[]\n): TextSegment[] {\n  if (!flaggedWords || flaggedWords.length === 0) {\n    return [\n      {\n        text,\n        categories: [] as string[],\n        explanations: [] as string[],\n        originalWordIndices: [] as number[],\n      },\n    ];\n  }\n\n  // Create arrays to track categories, explanations, and word indices at each character position\n  const charCategories: string[][] = Array(text.length)\n    .fill(null)\n    .map(() => []);\n  const charExplanations: string[][] = Array(text.length)\n    .fill(null)\n    .map(() => []);\n  const charWordIndices: number[][] = Array(text.length)\n    .fill(null)\n    .map(() => []);\n\n  // Helper function to find text in the original text when indices are invalid\n  const findTextInOriginal = (searchText: string): { start: number; end: number } | null => {\n    if (!searchText || !searchText.trim()) return null;\n    \n    // Clean the search text\n    const cleanSearchText = searchText.trim();\n    \n    // Try exact match first (case-sensitive)\n    let index = text.indexOf(cleanSearchText);\n    if (index !== -1) {\n      return { start: index, end: index + cleanSearchText.length };\n    }\n    \n    // Try case-insensitive match\n    index = text.toLowerCase().indexOf(cleanSearchText.toLowerCase());\n    if (index !== -1) {\n      return { start: index, end: index + cleanSearchText.length };\n    }\n    \n    // Try word-based matching for partial matches\n    const words = cleanSearchText.split(/\\s+/);\n    if (words.length > 1) {\n      const firstWord = words[0];\n      const lastWord = words[words.length - 1];\n      \n      const firstIndex = text.toLowerCase().indexOf(firstWord.toLowerCase());\n      const lastIndex = text.toLowerCase().lastIndexOf(lastWord.toLowerCase());\n      \n      if (firstIndex !== -1 && lastIndex !== -1 && lastIndex >= firstIndex) {\n        return { \n          start: firstIndex, \n          end: lastIndex + lastWord.length \n        };\n      }\n    }\n    \n    return null;\n  };\n\n  // Mark categories, explanations, and word indices for each character position\n  flaggedWords.forEach((flagged, wordIndex) => {\n    let start = flagged.startIndex;\n    let end = flagged.endIndex;\n    \n    // Validate and fix indices\n    const isValidIndices = (\n      typeof start === 'number' && \n      typeof end === 'number' && \n      start >= 0 && \n      end > start && \n      start < text.length &&\n      end <= text.length\n    );\n    \n    if (!isValidIndices) {\n      console.warn(`Invalid indices for flagged word \"${flagged.word}\": start=${start}, end=${end}, text.length=${text.length}`);\n      \n      // Try to find the text in the original\n      const found = findTextInOriginal(flagged.word);\n      if (found) {\n        start = found.start;\n        end = found.end;\n        console.log(`Recovered indices for \"${flagged.word}\": ${start}-${end}`);\n      } else {\n        console.warn(`Could not find \"${flagged.word}\" in text, skipping highlighting`);\n        return; // Skip this span if we can't locate it\n      }\n    }\n    \n    // Double-check bounds after potential recovery\n    start = Math.max(0, Math.min(start, text.length - 1));\n    end = Math.max(start + 1, Math.min(end, text.length));\n    \n    // Ensure we have at least one character to highlight\n    if (start >= end) {\n      end = Math.min(start + 1, text.length);\n    }\n\n    for (let i = start; i < end; i++) {\n      const categoryArray = charCategories[i];\n      const explanationArray = charExplanations[i];\n      const wordIndexArray = charWordIndices[i];\n\n      if (categoryArray && !categoryArray.includes(flagged.category)) {\n        categoryArray.push(flagged.category);\n        if (flagged.explanation && explanationArray) {\n          explanationArray.push(flagged.explanation);\n        }\n        if (wordIndexArray) {\n          wordIndexArray.push(wordIndex);\n        }\n      }\n    }\n  });\n\n  // Group consecutive characters with same category sets and word indices\n  const segments: TextSegment[] = [];\n\n  let currentStart = 0;\n  let currentCategories = charCategories[0] || [];\n  let currentExplanations = charExplanations[0] || [];\n  let currentWordIndices = charWordIndices[0] || [];\n\n  for (let i = 1; i <= text.length; i++) {\n    const nextCategories = i < text.length ? charCategories[i] || [] : [];\n    const nextExplanations = i < text.length ? charExplanations[i] || [] : [];\n    const nextWordIndices = i < text.length ? charWordIndices[i] || [] : [];\n\n    // Check if categories or word indices changed\n    const categoriesChanged =\n      currentCategories.length !== nextCategories.length ||\n      !currentCategories.every((cat) => nextCategories.includes(cat));\n\n    const wordIndicesChanged =\n      currentWordIndices.length !== nextWordIndices.length ||\n      !currentWordIndices.every((idx) => nextWordIndices.includes(idx));\n\n    if (categoriesChanged || wordIndicesChanged || i === text.length) {\n      segments.push({\n        text: text.slice(currentStart, i),\n        categories: [...currentCategories],\n        explanations: [...currentExplanations],\n        originalWordIndices: [...currentWordIndices],\n      });\n\n      currentStart = i;\n      currentCategories = nextCategories;\n      currentExplanations = nextExplanations;\n      currentWordIndices = nextWordIndices;\n    }\n  }\n\n  return segments;\n}\n\n// Generate gradient CSS for multiple categories\nfunction generateGradientStyle(categories: string[]): React.CSSProperties {\n  if (categories.length === 0) return {};\n\n  if (categories.length === 1 && categories[0]) {\n    const colors = getBiasCategoryColor(categories[0]);\n    return {\n      backgroundColor: colors.lightColor,\n      borderBottom: `2px solid ${colors.color}`,\n      color: colors.color,\n      fontWeight: \"600\",\n    };\n  }\n\n  // Create gradient for multiple categories\n  const colorStops = categories\n    .map((category, index) => {\n      const colors = getBiasCategoryColor(category);\n      const position1 = (index / categories.length) * 100;\n      const position2 = ((index + 1) / categories.length) * 100;\n      return `${colors.lightColor} ${position1}%, ${colors.lightColor} ${position2}%`;\n    })\n    .join(\", \");\n\n  return {\n    background: `linear-gradient(to right, ${colorStops})`,\n    borderBottom: `3px solid transparent`,\n    borderImage: `linear-gradient(to right, ${categories\n      .map((cat) => getBiasCategoryColor(cat).color)\n      .join(\", \")}) 1`,\n    borderImageSlice: 1,\n    color: \"#333\",\n    fontWeight: \"600\",\n  };\n}\n\n// Smart tooltip positioning component\nconst SmartTooltip: React.FC<{\n  children: React.ReactNode;\n  categories: string[];\n  explanations: string[];\n}> = ({ children, categories, explanations }) => {\n  const [position, setPosition] = useState<\"top\" | \"bottom\">(\"top\");\n  const [isVisible, setIsVisible] = useState(false);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  const triggerRef = useRef<HTMLSpanElement>(null);\n\n  const updatePosition = useCallback(() => {\n    if (!triggerRef.current || !tooltipRef.current) return;\n\n    const triggerRect = triggerRef.current.getBoundingClientRect();\n    const viewportHeight = window.innerHeight;\n\n    // Calculate space available above and below\n    const spaceAbove = triggerRect.top;\n    const spaceBelow = viewportHeight - triggerRect.bottom;\n    const tooltipHeight = 80; // simplified content means smaller height\n\n    // Prefer top, but switch to bottom if not enough space above\n    if (spaceAbove >= tooltipHeight + 20) {\n      setPosition(\"top\");\n    } else if (spaceBelow >= tooltipHeight + 20) {\n      setPosition(\"bottom\");\n    } else {\n      // If neither position has enough space, choose the one with more space\n      setPosition(spaceAbove > spaceBelow ? \"top\" : \"bottom\");\n    }\n  }, []);\n\n  const handleMouseEnter = useCallback(() => {\n    setIsVisible(true);\n    // Update position after tooltip becomes visible\n    setTimeout(updatePosition, 0);\n  }, [updatePosition]);\n\n  const handleMouseLeave = useCallback(() => {\n    setIsVisible(false);\n  }, []);\n\n  // Position classes and styles\n  const positionClass =\n    position === \"top\" ? \"bottom-full mb-2\" : \"top-full mt-2\";\n\n  const arrowClass =\n    position === \"top\"\n      ? \"absolute top-full left-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"\n      : \"absolute bottom-full left-1/2 w-0 h-0 border-l-4 border-r-4 border-b-4 border-transparent border-b-gray-900\";\n\n  // Simplified tooltip content\n  const getTooltipContent = () => {\n    if (categories.length === 1) {\n      return categories[0];\n    } else if (categories.length > 1) {\n      return `Multiple biases (${categories.length})`;\n    }\n    return \"Bias detected\";\n  };\n\n  return (\n    <span\n      ref={triggerRef}\n      className=\"relative cursor-help transition-all duration-200 hover:shadow-md\"\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      style={{\n        ...generateGradientStyle(categories),\n        borderRadius: \"3px\",\n        padding: \"2px 3px\",\n        margin: \"0 1px\",\n      }}\n    >\n      {children}\n\n      {/* Simplified smart positioned tooltip */}\n      <div\n        ref={tooltipRef}\n        className={`absolute left-1/2 ${positionClass} bg-gray-900 text-white text-sm px-3 py-2 rounded-md shadow-lg transition-opacity duration-200 z-[10000] pointer-events-none ${\n          isVisible ? \"opacity-100\" : \"opacity-0\"\n        }`}\n        style={{\n          transform: \"translateX(-50%)\",\n          minWidth: \"auto\",\n          maxWidth: \"none\",\n          whiteSpace: \"nowrap\",\n        }}\n      >\n        <div className=\"font-medium text-center\">{getTooltipContent()}</div>\n\n        {/* Dynamic arrow */}\n        <div\n          className={arrowClass}\n          style={{\n            transform: \"translateX(-50%)\",\n          }}\n        ></div>\n      </div>\n    </span>\n  );\n};\n\n// Loading Spinner Component\nconst LoadingSpinner: React.FC<{ size?: number }> = ({ size = 24 }) => {\n  return (\n    <div className=\"flex items-center justify-center\">\n      <svg\n        className=\"animate-spin\"\n        width={size}\n        height={size}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle\n          cx=\"12\"\n          cy=\"12\"\n          r=\"10\"\n          stroke=\"currentColor\"\n          strokeWidth=\"4\"\n          strokeLinecap=\"round\"\n          strokeDasharray=\"31.416\"\n          strokeDashoffset=\"31.416\"\n          className=\"opacity-25\"\n        />\n        <path\n          fill=\"currentColor\"\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        />\n      </svg>\n    </div>\n  );\n};\n\n// Analysis Output Component (Read-only display with highlighting)\nconst AnalysisOutput: React.FC<{\n  text: string;\n  flaggedWords: FlaggedWord[];\n  isAnalyzing: boolean;\n  onWordClick?: (word: FlaggedWord) => void;\n  analysisResults?: BiasAnalysisResponse | null;\n  onToggleReasoning?: (wordIndex: number) => void;\n}> = ({\n  text,\n  flaggedWords,\n  isAnalyzing,\n  onWordClick,\n  analysisResults,\n  onToggleReasoning,\n}) => {\n  const renderContent = useCallback(() => {\n    if (isAnalyzing) {\n      return (\n        <div className=\"flex flex-col items-center justify-center h-32 space-y-4\">\n          <LoadingSpinner size={32} />\n          <div className=\"text-gray-500 text-center\">\n            <div className=\"font-medium\">Analyzing for bias...</div>\n            <div className=\"text-sm text-gray-400 mt-1\">\n              This may take a few moments\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    if (!text) {\n      return (\n        <div className=\"text-gray-400 italic\">\n          Analysis results will appear here after you click \"Analyze for Bias\"\n        </div>\n      );\n    }\n\n    if (!flaggedWords || flaggedWords.length === 0) {\n      return (\n        <div className=\"text-gray-900\">\n          <div className=\"text-green-600 font-medium mb-2\">\n            ✓ No bias detected\n          </div>\n          <div>{text}</div>\n        </div>\n      );\n    }\n\n    const segments = createTextSegments(text, flaggedWords);\n\n    return (\n      <div className=\"text-gray-900\">\n        <div className=\"leading-relaxed\">\n          {segments.map((segment, index) => {\n            const segmentKey = `${index}-${segment.text.slice(\n              0,\n              10\n            )}-${segment.categories.join(\"-\")}`;\n\n            if (\n              segment.categories.length > 0 &&\n              segment.originalWordIndices.length > 0\n            ) {\n              // Use the first word index for click handling (after backend deduplication, there should typically be only one)\n              const primaryWordIndex = segment.originalWordIndices[0];\n\n              const handleClick = () => {\n                if (onToggleReasoning && primaryWordIndex !== undefined) {\n                  onToggleReasoning(primaryWordIndex);\n                }\n              };\n\n              return (\n                <SmartTooltip\n                  key={segmentKey}\n                  categories={segment.categories}\n                  explanations={segment.explanations}\n                >\n                  <span\n                    className=\"cursor-pointer hover:opacity-80 transition-opacity\"\n                    onClick={handleClick}\n                    style={{\n                      ...generateGradientStyle(segment.categories),\n                      borderRadius: \"3px\",\n                      padding: \"2px 3px\",\n                      margin: \"0 1px\",\n                    }}\n                  >\n                    {segment.text}\n                  </span>\n                </SmartTooltip>\n              );\n            } else {\n              return <span key={segmentKey}>{segment.text}</span>;\n            }\n          })}\n        </div>\n      </div>\n    );\n  }, [\n    text,\n    flaggedWords,\n    isAnalyzing,\n    onWordClick,\n    analysisResults,\n    onToggleReasoning,\n  ]);\n\n  const getBiasCountDisplay = () => {\n    if (!flaggedWords || flaggedWords.length === 0) return null;\n\n    const categoryCount =\n      analysisResults?.summary?.categories_detected?.length || 0;\n    return (\n      <div className=\"text-sm text-orange-600 font-medium\">\n        ⚠️ {flaggedWords.length} bias issue\n        {flaggedWords.length !== 1 ? \"s\" : \"\"} detected\n        {categoryCount > 0 &&\n          ` (${categoryCount} ${\n            categoryCount === 1 ? \"category\" : \"categories\"\n          })`}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"w-full h-full p-6 bg-white overflow-y-auto\">\n      <div className=\"mb-4 flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold text-gray-800\">\n          Analysis Results\n        </h3>\n        {getBiasCountDisplay()}\n      </div>\n      {renderContent()}\n    </div>\n  );\n};\n\n// Reasoning Panel Component\nconst ReasoningPanel: React.FC<{\n  selectedWord: FlaggedWord | null;\n  flaggedWords: FlaggedWord[];\n  onWordSelect: (word: FlaggedWord) => void;\n  expandedItems: Set<number>;\n  onToggleExpanded: (index: number) => void;\n  isAnalyzing?: boolean;\n}> = ({\n  selectedWord,\n  flaggedWords,\n  onWordSelect,\n  expandedItems,\n  onToggleExpanded,\n  isAnalyzing = false,\n}) => {\n  return (\n    <div className=\"w-full h-full p-6 bg-white border-l border-gray-200 overflow-y-auto\">\n      <div className=\"mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-800\">\n          Reasoning & Suggestions\n        </h3>\n      </div>\n\n      {isAnalyzing ? (\n        <div className=\"flex flex-col items-center justify-center h-32 space-y-4\">\n          <LoadingSpinner size={28} />\n          <div className=\"text-gray-500 text-center\">\n            <div className=\"font-medium\">Preparing analysis...</div>\n            <div className=\"text-sm text-gray-400 mt-1\">\n              Detailed explanations will appear here\n            </div>\n          </div>\n        </div>\n      ) : flaggedWords.length === 0 ? (\n        <div className=\"text-gray-400 italic\">\n          Bias explanations and suggested revisions will appear here\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          <div className=\"text-sm text-gray-600 mb-3\">\n            Click on highlighted text or boxes to expand details:\n          </div>\n          <div className=\"space-y-2\">\n            {flaggedWords.map((word, index) => {\n              const colors = getBiasCategoryColor(word.category);\n              const isExpanded = expandedItems.has(index);\n\n              return (\n                <div\n                  key={index}\n                  className={`w-full text-left p-3 rounded-lg border transition-all cursor-pointer ${\n                    isExpanded\n                      ? \"border-blue-300 bg-blue-50\"\n                      : \"border-gray-200 hover:border-gray-300 hover:bg-gray-50\"\n                  }`}\n                  onClick={() => onToggleExpanded(index)}\n                >\n                  {/* Header - always visible */}\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <div\n                        className=\"w-3 h-3 rounded-full\"\n                        style={{ backgroundColor: colors.color }}\n                      />\n                      <span className=\"text-sm font-medium text-gray-900\">\n                        \"{word.word}\"\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"text-xs text-gray-600\">\n                        {word.category}\n                      </div>\n                      <svg\n                        className={`w-4 h-4 text-gray-400 transition-transform ${\n                          isExpanded ? \"rotate-180\" : \"\"\n                        }`}\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M19 9l-7 7-7-7\"\n                        />\n                      </svg>\n                    </div>\n                  </div>\n\n                  {/* Expanded details */}\n                  {isExpanded && (\n                    <div className=\"mt-3 pt-3 border-t border-gray-200 space-y-3\">\n                      {/* Category badge */}\n                      <div>\n                        <div className=\"text-xs font-medium text-gray-700 mb-1\">\n                          Bias Category:\n                        </div>\n                        <div\n                          className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium\"\n                          style={{\n                            backgroundColor: colors.lightColor,\n                            color: colors.color,\n                          }}\n                        >\n                          {word.category}\n                        </div>\n                      </div>\n\n                      {/* Explanation */}\n                      {word.explanation && (\n                        <div>\n                          <div className=\"text-xs font-medium text-gray-700 mb-1\">\n                            Why this is problematic:\n                          </div>\n                          <div className=\"text-xs text-gray-600 leading-relaxed bg-gray-100 p-2 rounded\">\n                            {word.explanation}\n                          </div>\n                        </div>\n                      )}\n\n                      {/* Suggestions */}\n                      {word.suggestions && word.suggestions.length > 0 && (\n                        <div>\n                          <div className=\"text-xs font-medium text-gray-700 mb-1\">\n                            Suggested revisions:\n                          </div>\n                          <div className=\"space-y-1\">\n                            {word.suggestions.map((suggestion, sugIndex) => (\n                              <div\n                                key={sugIndex}\n                                className=\"bg-green-50 border border-green-200 p-2 rounded\"\n                              >\n                                <div className=\"text-xs font-medium text-green-800\">\n                                  \"{suggestion.word}\"\n                                </div>\n                                {suggestion.reason && (\n                                  <div className=\"text-xs text-green-600 mt-1\">\n                                    {suggestion.reason}\n                                  </div>\n                                )}\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Resize Handle Component\nconst ResizeHandle: React.FC<{\n  onMouseDown: (e: MouseEvent<HTMLDivElement>) => void;\n}> = ({ onMouseDown }) => {\n  return (\n    <div\n      className=\"w-1 bg-gray-300 hover:bg-blue-500 cursor-col-resize transition-colors relative group\"\n      onMouseDown={onMouseDown}\n    >\n      <div className=\"absolute inset-y-0 -left-1 -right-1\" />\n      <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-1 h-8 bg-gray-400 group-hover:bg-blue-600 rounded-full opacity-0 group-hover:opacity-100 transition-opacity\" />\n    </div>\n  );\n};\n\nexport default function TextInput({\n  value,\n  onChange,\n  onClear,\n  onAnalyze,\n  placeholder = \"Type or paste your text here...\",\n  disabled = false,\n  isAnalyzing = false,\n  error = null,\n  label = \"Enter text to analyze\",\n  maxLength = 5000,\n  minLength = 5,\n  className = \"\",\n  showCharacterCount = true,\n  showClearButton = true,\n  showAnalyzeButton = true,\n  analyzeButtonText = \"Analyze for Bias\",\n  clearButtonText = \"Clear\",\n  validateOnChange = true,\n  validationRules = DEFAULT_VALIDATION_RULES,\n  onValidationChange,\n  confirmClearThreshold = 50,\n  showClearConfirmation = true,\n  flaggedWords = [],\n  onClearHighlights,\n  analysisText = \"\",\n  showAnalysisOutput = false,\n  analysisResults = null,\n}: TextInputProps) {\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\n  const [isValid, setIsValid] = useState(true);\n  const [showConfirmDialog, setShowConfirmDialog] = useState<boolean>(false);\n  const [selectedWord, setSelectedWord] = useState<FlaggedWord | null>(null);\n\n  // Shared state for expanded reasoning items\n  const [expandedItems, setExpandedItems] = useState<Set<number>>(new Set());\n\n  // Panel width states for resizing\n  const [inputWidth, setInputWidth] = useState(50); // Left panel width\n  const [rightPanelWidth, setRightPanelWidth] = useState(50); // Right container width\n  const [analysisHeight, setAnalysisHeight] = useState(50); // Top right panel height\n  const [reasoningHeight, setReasoningHeight] = useState(50); // Bottom right panel height\n\n  const [isResizing, setIsResizing] = useState(false);\n  const [resizeType, setResizeType] = useState<\n    \"horizontal\" | \"vertical\" | null\n  >(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const rightContainerRef = useRef<HTMLDivElement>(null);\n\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const dialogRef = useRef<HTMLDivElement>(null);\n\n  // Auto-select first word when flagged words change\n  useEffect(() => {\n    if (flaggedWords.length > 0 && !selectedWord) {\n      setSelectedWord(flaggedWords[0] || null);\n    } else if (flaggedWords.length === 0) {\n      setSelectedWord(null);\n      setExpandedItems(new Set()); // Clear expanded items when no flagged words\n    }\n  }, [flaggedWords, selectedWord]);\n\n  // Function to toggle expanded state of reasoning items\n  const toggleExpandedItem = useCallback((index: number) => {\n    setExpandedItems((prev) => {\n      const newSet = new Set(prev);\n      if (newSet.has(index)) {\n        newSet.delete(index);\n      } else {\n        newSet.add(index);\n      }\n      return newSet;\n    });\n  }, []);\n\n  // Resize handling\n  const handleMouseDown = useCallback(\n    (type: \"horizontal\" | \"vertical\") => (e: MouseEvent<HTMLDivElement>) => {\n      e.preventDefault();\n      setIsResizing(true);\n      setResizeType(type);\n    },\n    []\n  );\n\n  const handleMouseMove = useCallback(\n    (e: globalThis.MouseEvent) => {\n      if (!isResizing || !resizeType) return;\n\n      if (resizeType === \"horizontal\" && containerRef.current) {\n        const containerRect = containerRef.current.getBoundingClientRect();\n        const containerWidth = containerRect.width;\n        const mouseX = e.clientX - containerRect.left;\n        const percentage = (mouseX / containerWidth) * 100;\n\n        const newInputWidth = Math.max(20, Math.min(80, percentage));\n        const newRightPanelWidth = 100 - newInputWidth;\n\n        setInputWidth(newInputWidth);\n        setRightPanelWidth(newRightPanelWidth);\n      } else if (resizeType === \"vertical\" && rightContainerRef.current) {\n        const containerRect = rightContainerRef.current.getBoundingClientRect();\n        const containerHeight = containerRect.height;\n        const mouseY = e.clientY - containerRect.top;\n        const percentage = (mouseY / containerHeight) * 100;\n\n        const newAnalysisHeight = Math.max(20, Math.min(80, percentage));\n        const newReasoningHeight = 100 - newAnalysisHeight;\n\n        setAnalysisHeight(newAnalysisHeight);\n        setReasoningHeight(newReasoningHeight);\n      }\n    },\n    [isResizing, resizeType]\n  );\n\n  const handleMouseUp = useCallback(() => {\n    setIsResizing(false);\n    setResizeType(null);\n  }, []);\n\n  useEffect(() => {\n    if (isResizing) {\n      const handleMove = (e: Event) => {\n        if (e instanceof globalThis.MouseEvent) {\n          handleMouseMove(e);\n        }\n      };\n      const handleUp = () => {\n        handleMouseUp();\n      };\n\n      document.addEventListener(\"mousemove\", handleMove);\n      document.addEventListener(\"mouseup\", handleUp);\n      return () => {\n        document.removeEventListener(\"mousemove\", handleMove);\n        document.removeEventListener(\"mouseup\", handleUp);\n      };\n    }\n  }, [isResizing, handleMouseMove, handleMouseUp]);\n\n  // Combine default rules with custom rules\n  const allRules = useMemo(() => {\n    const defaultRules: ValidationRule[] = [\n      {\n        type: \"required\",\n        message: \"Text is required\",\n        validator: (text: string) => text.trim().length > 0,\n      },\n      {\n        type: \"minLength\",\n        value: minLength,\n        message: `Text must be at least ${minLength} characters long`,\n        validator: (text: string) => text.trim().length >= minLength,\n      },\n      {\n        type: \"maxLength\",\n        value: maxLength,\n        message: `Text must not exceed ${maxLength} characters`,\n        validator: (text: string) => text.length <= maxLength,\n      },\n    ];\n\n    return [...defaultRules, ...validationRules];\n  }, [minLength, maxLength, validationRules]);\n\n  const validateText = useCallback(\n    (text: string): { isValid: boolean; errors: string[] } => {\n      const errors: string[] = [];\n\n      for (const rule of allRules) {\n        let isRuleValid = false;\n\n        switch (rule.type) {\n          case \"required\":\n            isRuleValid = text.trim().length > 0;\n            break;\n          case \"minLength\":\n            isRuleValid =\n              text.trim().length === 0 ||\n              text.trim().length >= (rule.value || minLength);\n            break;\n          case \"maxLength\":\n            isRuleValid = text.length <= (rule.value || maxLength);\n            break;\n          case \"custom\":\n            isRuleValid = rule.validator ? rule.validator(text) : true;\n            break;\n          default:\n            isRuleValid = true;\n        }\n\n        if (!isRuleValid) {\n          errors.push(rule.message);\n        }\n      }\n\n      return {\n        isValid: errors.length === 0,\n        errors,\n      };\n    },\n    [allRules, minLength, maxLength]\n  );\n\n  useEffect(() => {\n    if (validateOnChange) {\n      const { isValid: valid, errors } = validateText(value);\n      setIsValid(valid);\n      setValidationErrors(errors);\n    }\n  }, [value, validateOnChange, validateText]);\n\n  useEffect(() => {\n    if (onValidationChange && validateOnChange) {\n      onValidationChange(isValid, validationErrors);\n    }\n  }, [isValid, validationErrors, onValidationChange, validateOnChange]);\n\n  const handleTextChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    onChange(e.target.value);\n  };\n\n  const handleConfirmClear = useCallback(() => {\n    setShowConfirmDialog(false);\n    if (onClear) {\n      onClear();\n    }\n  }, [onClear]);\n\n  const handleCancelClear = useCallback(() => {\n    setShowConfirmDialog(false);\n  }, []);\n\n  const handleClearClick = () => {\n    if (showClearConfirmation && value.length >= confirmClearThreshold) {\n      setShowConfirmDialog(true);\n    } else {\n      if (onClear) {\n        onClear();\n      }\n    }\n  };\n\n  const handleAnalyzeClick = () => {\n    if (onAnalyze) {\n      onAnalyze();\n    }\n  };\n\n  const handleWordClick = useCallback((word: FlaggedWord) => {\n    setSelectedWord(word);\n  }, []);\n\n  useEffect(() => {\n    if (showConfirmDialog) {\n      const handleKeyDown = (e: globalThis.KeyboardEvent) => {\n        if (e.key === \"Escape\") {\n          handleCancelClear();\n        } else if (e.key === \"Enter\") {\n          handleConfirmClear();\n        }\n      };\n\n      const handleClickOutside = (e: globalThis.MouseEvent) => {\n        if (\n          dialogRef.current &&\n          !dialogRef.current.contains(e.target as Node)\n        ) {\n          handleCancelClear();\n        }\n      };\n\n      document.addEventListener(\"keydown\", handleKeyDown);\n      document.addEventListener(\"mousedown\", handleClickOutside);\n\n      return () => {\n        document.removeEventListener(\"keydown\", handleKeyDown);\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }\n    return undefined;\n  }, [showConfirmDialog, handleConfirmClear, handleCancelClear]);\n\n  const isAtLimit = value.length >= maxLength;\n  const isNearLimit = value.length >= maxLength * 0.8;\n  const characterCountColor = isAtLimit\n    ? \"text-red-500 font-semibold\"\n    : isNearLimit\n    ? \"text-amber-500 font-medium\"\n    : \"text-gray-500\";\n\n  return (\n    <div className={`h-full ${className}`}>\n      <div\n        ref={containerRef}\n        className=\"flex h-full\"\n        style={{ userSelect: isResizing ? \"none\" : \"auto\" }}\n      >\n        {/* Input Panel - Left Side */}\n        <div style={{ width: `${inputWidth}%` }} className=\"flex flex-col\">\n          <div className=\"flex-1 relative\">\n            <div className=\"absolute inset-0 bg-gray-50 z-0\"></div>\n\n            <textarea\n              ref={textareaRef}\n              id=\"text-input\"\n              value={value}\n              onChange={handleTextChange}\n              placeholder={placeholder}\n              maxLength={maxLength}\n              className=\"w-full h-full px-6 py-6 placeholder-gray-400 text-gray-900 focus:outline-none resize-none border-0 relative z-10 bg-transparent\"\n              disabled={disabled || isAnalyzing}\n            />\n          </div>\n\n          <div className=\"border-t border-gray-200 px-6 py-4 bg-white\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                {showClearButton && (\n                  <button\n                    onClick={handleClearClick}\n                    disabled={!value || disabled || isAnalyzing}\n                    className=\"px-4 py-2 text-sm font-medium text-gray-600 bg-gray-100 rounded-md hover:bg-gray-200 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                  >\n                    {clearButtonText}\n                  </button>\n                )}\n\n                {showAnalyzeButton && (\n                  <button\n                    onClick={handleAnalyzeClick}\n                    disabled={!value.trim() || disabled || isAnalyzing}\n                    className=\"px-6 py-2 text-sm font-medium text-white bg-red-500 rounded-md hover:bg-red-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                  >\n                    {isAnalyzing ? \"Analyzing...\" : analyzeButtonText}\n                  </button>\n                )}\n              </div>\n\n              {showCharacterCount && (\n                <div className={`text-sm ${characterCountColor}`}>\n                  {value.length} / {maxLength} characters\n                </div>\n              )}\n            </div>\n\n            {validationErrors.length > 0 && (\n              <div className=\"mt-2\">\n                {validationErrors.map((error, index) => (\n                  <p key={index} className=\"text-sm text-red-600\">\n                    {error}\n                  </p>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Horizontal Resize Handle */}\n        {showAnalysisOutput && (\n          <div\n            className=\"w-1 bg-gray-300 hover:bg-blue-500 cursor-col-resize transition-colors relative group\"\n            onMouseDown={handleMouseDown(\"horizontal\")}\n          >\n            <div className=\"absolute inset-y-0 -left-1 -right-1\" />\n            <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-1 h-8 bg-gray-400 group-hover:bg-blue-600 rounded-full opacity-0 group-hover:opacity-100 transition-opacity\" />\n          </div>\n        )}\n\n        {/* Right Panel Container - Stacked Vertically */}\n        {showAnalysisOutput && (\n          <div\n            style={{ width: `${rightPanelWidth}%` }}\n            className=\"flex flex-col\"\n          >\n            <div ref={rightContainerRef} className=\"flex flex-col h-full\">\n              {/* Analysis Output Panel - Top */}\n              <div style={{ height: `${analysisHeight}%` }} className=\"min-h-0\">\n                <AnalysisOutput\n                  text={analysisText}\n                  flaggedWords={flaggedWords}\n                  isAnalyzing={isAnalyzing}\n                  onWordClick={handleWordClick}\n                  analysisResults={analysisResults}\n                  onToggleReasoning={toggleExpandedItem}\n                />\n              </div>\n\n              {/* Vertical Resize Handle */}\n              {flaggedWords.length > 0 && (\n                <div\n                  className=\"h-1 bg-gray-300 hover:bg-blue-500 cursor-row-resize transition-colors relative group\"\n                  onMouseDown={handleMouseDown(\"vertical\")}\n                >\n                  <div className=\"absolute inset-x-0 -top-1 -bottom-1\" />\n                  <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-8 h-1 bg-gray-400 group-hover:bg-blue-600 rounded-full opacity-0 group-hover:opacity-100 transition-opacity\" />\n                </div>\n              )}\n\n              {/* Reasoning Panel - Bottom */}\n              {flaggedWords.length > 0 && (\n                <div\n                  style={{ height: `${reasoningHeight}%` }}\n                  className=\"min-h-0\"\n                >\n                  <ReasoningPanel\n                    selectedWord={selectedWord}\n                    flaggedWords={flaggedWords}\n                    onWordSelect={setSelectedWord}\n                    expandedItems={expandedItems}\n                    onToggleExpanded={toggleExpandedItem}\n                    isAnalyzing={isAnalyzing}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Clear confirmation dialog */}\n      {showConfirmDialog && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div\n            ref={dialogRef}\n            className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\"\n          >\n            <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n              Confirm Clear\n            </h3>\n            <p className=\"text-gray-600 mb-6\">\n              Are you sure you want to clear all text? This action cannot be\n              undone.\n            </p>\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={handleCancelClear}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleConfirmClear}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700\"\n              >\n                Clear Text\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2260, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/BiasDetectionApp.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { BiasAnalysisResponse, BiasSpan, AnalysisRequest } from \"@/types\";\nimport { analyzeText } from \"@/lib/api\";\nimport TextInput, { FlaggedWord } from \"@/components/TextInput\";\nimport { IssuesPanel } from \"@/components/IssuesPanel\";\nimport { useAuth } from \"@/components/AuthContext\";\n\ninterface BiasDetectionAppProps {\n  initialText?: string;\n  onBack?: () => void;\n}\n\nconst BiasDetectionApp: React.FC<BiasDetectionAppProps> = ({\n  initialText = \"\",\n  onBack,\n}) => {\n  const { user } = useAuth();\n  const [inputText, setInputText] = useState(initialText);\n  const [analysisText, setAnalysisText] = useState(\"\");\n  const [analysisResults, setAnalysisResults] =\n    useState<BiasAnalysisResponse | null>(null);\n  const [flaggedWords, setFlaggedWords] = useState<FlaggedWord[]>([]);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showAnalysisOutput, setShowAnalysisOutput] = useState(false);\n\n  // Update input text when initialText prop changes\n  useEffect(() => {\n    setInputText(initialText);\n  }, [initialText]);\n\n  // Convert BiasSpan to FlaggedWord format\n  const convertToFlaggedWords = useCallback(\n    (biasSpans: BiasSpan[]): FlaggedWord[] => {\n      return biasSpans.map((span) => ({\n        word: span.text,\n        startIndex: span.start_index,\n        endIndex: span.end_index,\n        category: span.category,\n        explanation: span.explanation,\n        confidence: 1.0,\n        suggestions: [\n          {\n            word: span.suggested_revision || span.text,\n            confidence: 1.0,\n            reason: span.explanation,\n          },\n        ],\n      }));\n    },\n    []\n  );\n\n  const handleAnalyze = useCallback(async () => {\n    if (!inputText.trim()) {\n      setError(\"Please enter some text to analyze\");\n      return;\n    }\n\n    setIsAnalyzing(true);\n    setError(null);\n    setShowAnalysisOutput(true);\n\n    try {\n      const request: AnalysisRequest = {\n        text: inputText.trim(),\n      };\n\n      const response = await analyzeText(request);\n      setAnalysisResults(response);\n      setAnalysisText(inputText); // Set the text that was analyzed\n\n      if (response.bias_spans && response.bias_spans.length > 0) {\n        const flagged = convertToFlaggedWords(response.bias_spans);\n        setFlaggedWords(flagged);\n      } else {\n        setFlaggedWords([]);\n      }\n    } catch (err) {\n      console.error(\"Analysis error:\", err);\n      setError(\n        err instanceof Error ? err.message : \"An error occurred during analysis\"\n      );\n      setAnalysisResults(null);\n      setFlaggedWords([]);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  }, [inputText, convertToFlaggedWords]);\n\n  const handleClear = useCallback(() => {\n    setInputText(\"\");\n    setAnalysisText(\"\");\n    setAnalysisResults(null);\n    setFlaggedWords([]);\n    setError(null);\n    setShowAnalysisOutput(false);\n  }, []);\n\n  const handleClearHighlights = useCallback(() => {\n    setFlaggedWords([]);\n    setAnalysisResults(null);\n  }, []);\n\n  const handleInputChange = useCallback((newText: string) => {\n    setInputText(newText);\n    setError(null);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 py-8\">\n        <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\n          {/* Header */}\n          <div className=\"bg-gradient-to-r from-red-500 to-pink-500 px-6 py-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-2xl font-bold text-white\">BiasGuard</h1>\n                <p className=\"text-red-100 mt-1\">\n                  Detect and understand potential bias in your text\n                </p>\n              </div>\n              {onBack && (\n                <button\n                  onClick={onBack}\n                  className=\"text-white hover:text-red-100 transition-colors\"\n                >\n                  <svg\n                    className=\"w-6 h-6\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"\n                    />\n                  </svg>\n                </button>\n              )}\n            </div>\n          </div>\n\n          {/* Error Message */}\n          {error && (\n            <div className=\"bg-red-50 border-l-4 border-red-400 p-4 m-4\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <svg\n                    className=\"h-5 w-5 text-red-400\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-red-700\">{error}</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Main Content */}\n          <div className=\"flex flex-col lg:flex-row\">\n            {/* Text Input Section */}\n            <div className=\"lg:w-full\">\n              <div className=\"h-96 lg:h-[600px]\">\n                <TextInput\n                  value={inputText}\n                  onChange={handleInputChange}\n                  onClear={handleClear}\n                  onAnalyze={handleAnalyze}\n                  placeholder=\"Enter or paste your text here to analyze for potential bias...\"\n                  isAnalyzing={isAnalyzing}\n                  error={error}\n                  maxLength={5000}\n                  showCharacterCount={true}\n                  showClearButton={true}\n                  showAnalyzeButton={true}\n                  analyzeButtonText=\"Analyze for Bias\"\n                  clearButtonText=\"Clear All\"\n                  flaggedWords={flaggedWords}\n                  onClearHighlights={handleClearHighlights}\n                  analysisText={analysisText}\n                  showAnalysisOutput={showAnalysisOutput}\n                  analysisResults={analysisResults}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BiasDetectionApp;\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AAEA;;;AAPA;;;;;AAcA,MAAM,mBAAoD,CAAC,EACzD,cAAc,EAAE,EAChB,MAAM,EACP;;IACC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,oIAAA,CAAA,UAAO,AAAD;IACvB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,iBAAiB,mBAAmB,GACzC,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA+B;IACxC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAClE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7D,kDAAkD;IAClD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,aAAa;QACf;qCAAG;QAAC;KAAY;IAEhB,yCAAyC;IACzC,MAAM,wBAAwB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+DACtC,CAAC;YACC,OAAO,UAAU,GAAG;uEAAC,CAAC,OAAS,CAAC;wBAC9B,MAAM,KAAK,IAAI;wBACf,YAAY,KAAK,WAAW;wBAC5B,UAAU,KAAK,SAAS;wBACxB,UAAU,KAAK,QAAQ;wBACvB,aAAa,KAAK,WAAW;wBAC7B,YAAY;wBACZ,aAAa;4BACX;gCACE,MAAM,KAAK,kBAAkB,IAAI,KAAK,IAAI;gCAC1C,YAAY;gCACZ,QAAQ,KAAK,WAAW;4BAC1B;yBACD;oBACH,CAAC;;QACH;8DACA,EAAE;IAGJ,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uDAAE;YAChC,IAAI,CAAC,UAAU,IAAI,IAAI;gBACrB,SAAS;gBACT;YACF;YAEA,eAAe;YACf,SAAS;YACT,sBAAsB;YAEtB,IAAI;gBACF,MAAM,UAA2B;oBAC/B,MAAM,UAAU,IAAI;gBACtB;gBAEA,MAAM,WAAW,MAAM,CAAA,GAAA,oHAAA,CAAA,cAAW,AAAD,EAAE;gBACnC,mBAAmB;gBACnB,gBAAgB,YAAY,iCAAiC;gBAE7D,IAAI,SAAS,UAAU,IAAI,SAAS,UAAU,CAAC,MAAM,GAAG,GAAG;oBACzD,MAAM,UAAU,sBAAsB,SAAS,UAAU;oBACzD,gBAAgB;gBAClB,OAAO;oBACL,gBAAgB,EAAE;gBACpB;YACF,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,mBAAmB;gBACjC,SACE,eAAe,QAAQ,IAAI,OAAO,GAAG;gBAEvC,mBAAmB;gBACnB,gBAAgB,EAAE;YACpB,SAAU;gBACR,eAAe;YACjB;QACF;sDAAG;QAAC;QAAW;KAAsB;IAErC,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;qDAAE;YAC9B,aAAa;YACb,gBAAgB;YAChB,mBAAmB;YACnB,gBAAgB,EAAE;YAClB,SAAS;YACT,sBAAsB;QACxB;oDAAG,EAAE;IAEL,MAAM,wBAAwB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+DAAE;YACxC,gBAAgB,EAAE;YAClB,mBAAmB;QACrB;8DAAG,EAAE;IAEL,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2DAAE,CAAC;YACrC,aAAa;YACb,SAAS;QACX;0DAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDAAgC;;;;;;sDAC9C,6LAAC;4CAAE,WAAU;sDAAoB;;;;;;;;;;;;gCAIlC,wBACC,6LAAC;oCACC,SAAS;oCACT,WAAU;8CAEV,cAAA,6LAAC;wCACC,WAAU;wCACV,MAAK;wCACL,QAAO;wCACP,SAAQ;kDAER,cAAA,6LAAC;4CACC,eAAc;4CACd,gBAAe;4CACf,aAAa;4CACb,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;oBASb,uBACC,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCACC,WAAU;wCACV,SAAQ;wCACR,MAAK;kDAEL,cAAA,6LAAC;4CACC,UAAS;4CACT,GAAE;4CACF,UAAS;;;;;;;;;;;;;;;;8CAIf,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAE,WAAU;kDAAwB;;;;;;;;;;;;;;;;;;;;;;kCAO7C,6LAAC;wBAAI,WAAU;kCAEb,cAAA,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,kIAAA,CAAA,UAAS;oCACR,OAAO;oCACP,UAAU;oCACV,SAAS;oCACT,WAAW;oCACX,aAAY;oCACZ,aAAa;oCACb,OAAO;oCACP,WAAW;oCACX,oBAAoB;oCACpB,iBAAiB;oCACjB,mBAAmB;oCACnB,mBAAkB;oCAClB,iBAAgB;oCAChB,cAAc;oCACd,mBAAmB;oCACnB,cAAc;oCACd,oBAAoB;oCACpB,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASnC;GA7LM;;QAIa,oIAAA,CAAA,UAAO;;;KAJpB;uCA+LS","debugId":null}},
    {"offset": {"line": 2583, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/Dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useAuth } from \"./AuthContext\";\nimport BiasDetectionApp from \"./BiasDetectionApp\";\nimport {\n  getSavedAnalyses,\n  deleteAnalysis as deleteAnalysisAPI,\n} from \"@/lib/api\";\n\ninterface SavedAnalysis {\n  id: number;\n  user_id: number;\n  text: string;\n  result: unknown;\n  title?: string;\n  created_at: string;\n}\n\nexport default function Dashboard() {\n  const { user, logout } = useAuth();\n  const [savedAnalyses, setSavedAnalyses] = useState<SavedAnalysis[]>([]);\n  const [showAnalyzer, setShowAnalyzer] = useState(false);\n  const [initialText, setInitialText] = useState<string>(\"\");\n\n  useEffect(() => {\n    // Load saved analyses from backend\n    loadSavedAnalyses();\n  }, [user?.id]);\n\n  const loadSavedAnalyses = async () => {\n    try {\n      const analyses = await getSavedAnalyses();\n      setSavedAnalyses(analyses);\n    } catch (error) {\n      console.error(\"Error loading saved analyses:\", error);\n    }\n  };\n\n  const deleteAnalysis = async (id: number) => {\n    try {\n      const success = await deleteAnalysisAPI(id);\n      if (success) {\n        setSavedAnalyses((prev) =>\n          prev.filter((analysis) => analysis.id !== id)\n        );\n      }\n    } catch (error) {\n      console.error(\"Error deleting analysis:\", error);\n    }\n  };\n\n  const handleAnalysisClick = (analysis: SavedAnalysis) => {\n    setInitialText(analysis.text);\n    setShowAnalyzer(true);\n  };\n\n  if (showAnalyzer) {\n    return (\n      <BiasDetectionApp\n        initialText={initialText}\n        onBack={() => {\n          setShowAnalyzer(false);\n          setInitialText(\"\");\n          loadSavedAnalyses(); // Refresh analyses when coming back\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-20\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-10 h-10 bg-red-500 rounded-lg flex items-center justify-center\">\n                  <svg\n                    className=\"w-6 h-6 text-white\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\"\n                    />\n                  </svg>\n                </div>\n                <div>\n                  <h1 className=\"text-2xl font-bold text-gray-800\">HateZero</h1>\n                  <p className=\"text-sm text-gray-600 font-medium\">\n                    AI-powered content analysis\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center gap-3\">\n                <button\n                  onClick={() => (window.location.href = \"/\")}\n                  className=\"text-gray-700 hover:text-gray-900 font-medium px-4 py-2 transition-colors\"\n                >\n                  Dashboard\n                </button>\n                <button\n                  onClick={logout}\n                  className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors\"\n                >\n                  Sign Out\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Dashboard</h1>\n          <p className=\"text-gray-600\">Manage your bias detection analyses</p>\n        </div>\n\n        {/* Action Button */}\n        <div className=\"mb-8\">\n          <button\n            onClick={() => setShowAnalyzer(true)}\n            className=\"bg-red-500 text-white px-6 py-3 rounded-lg hover:bg-red-600 transition-colors font-medium shadow-lg\"\n          >\n            New Analysis\n          </button>\n        </div>\n\n        {/* Saved Analyses */}\n        <div className=\"bg-white rounded-lg shadow\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h2 className=\"text-xl font-semibold text-gray-900\">\n              Saved Analyses\n            </h2>\n          </div>\n\n          {savedAnalyses.length === 0 ? (\n            <div className=\"px-6 py-12 text-center\">\n              <svg\n                className=\"w-12 h-12 text-gray-400 mx-auto mb-4\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                />\n              </svg>\n              <p className=\"text-gray-500 mb-4\">No analyses saved yet</p>\n              <button\n                onClick={() => setShowAnalyzer(true)}\n                className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors\"\n              >\n                Create Your First Analysis\n              </button>\n            </div>\n          ) : (\n            <div className=\"divide-y divide-gray-200\">\n              {savedAnalyses.map((analysis) => (\n                <div\n                  key={analysis.id}\n                  className=\"px-6 py-4 hover:bg-gray-50 cursor-pointer transition-colors\"\n                  onClick={() => handleAnalysisClick(analysis)}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1\">\n                      <h3 className=\"text-lg font-medium text-gray-900 mb-1\">\n                        {analysis.title || `Analysis ${analysis.id}`}\n                      </h3>\n                      <p className=\"text-gray-600 text-sm mb-2 line-clamp-2\">\n                        {analysis.text.length > 100\n                          ? `${analysis.text.substring(0, 100)}...`\n                          : analysis.text}\n                      </p>\n                      <div className=\"flex items-center gap-4 text-sm text-gray-500\">\n                        <span>\n                          {new Date(analysis.created_at).toLocaleDateString()}\n                        </span>\n                        <span>\n                          {new Date(analysis.created_at).toLocaleTimeString()}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2 ml-4\">\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          deleteAnalysis(analysis.id);\n                        }}\n                        className=\"text-red-600 hover:text-red-800 font-medium text-sm\"\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3009, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadikulsh/Documents/Hack404/frontend/react-app/src/components/LandingPage.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useAuth, AuthProvider } from './AuthContext';\nimport AuthForm from './AuthForm';\nimport Dashboard from './Dashboard';\n\nfunction MainContent() {\n  const { user, isLoading } = useAuth();\n  const [showAuthForm, setShowAuthForm] = useState(false);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-lg text-gray-600\">Loading...</div>\n      </div>\n    );\n  }\n\n  // If user is logged in, show dashboard\n  if (user) {\n    return <Dashboard />;\n  }\n\n  // Show landing page for non-authenticated users\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <header className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-20\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-10 h-10 bg-red-500 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                  </svg>\n                </div>\n                <div>\n                  <h1 className=\"text-2xl font-bold text-gray-800\">\n                    HateZero\n                  </h1>\n                  <p className=\"text-sm text-gray-600 font-medium\">\n                    AI-powered content analysis\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center space-x-4\">\n                <button \n                  onClick={() => setShowAuthForm(true)}\n                  className=\"text-gray-700 hover:text-gray-900 font-medium px-4 py-2 transition-colors\"\n                >\n                  Sign In\n                </button>\n                <button \n                  onClick={() => setShowAuthForm(true)}\n                  className=\"bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-colors font-medium\"\n                >\n                  Sign Up\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Hero Section */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-6xl mx-auto\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            {/* Left side - Text content */}\n            <div className=\"text-left\">\n              <h1 className=\"text-4xl sm:text-5xl font-bold text-gray-900 mb-6\">\n                Detect Bias and Hate Speech in Text\n              </h1>\n              <p className=\"text-xl text-gray-600 mb-8\">\n                Use advanced AI to analyze text for hate speech, bias, and harmful content. \n                Perfect for content moderation and research.\n              </p>\n\n              {/* Stats Section */}\n              <div className=\"grid grid-cols-2 gap-6 mb-8\">\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                  <div className=\"text-3xl font-bold text-red-500 mb-1\">95%</div>\n                  <div className=\"text-sm text-gray-600 font-medium\">Accuracy Rate</div>\n                </div>\n                <div className=\"text-center p-4 bg-white rounded-lg shadow-sm\">\n                  <div className=\"text-3xl font-bold text-red-500 mb-1\">&lt;4s</div>\n                  <div className=\"text-sm text-gray-600 font-medium\">Processing Time</div>\n                </div>\n              </div>\n\n              <button \n                onClick={() => setShowAuthForm(true)}\n                className=\"bg-red-500 text-white px-8 py-3 rounded-lg text-lg font-semibold hover:bg-red-600 transition-colors shadow-lg\"\n              >\n                Start Analyzing Text\n              </button>\n            </div>\n            \n            {/* Right side - Text input and analyze */}\n            <div className=\"bg-white rounded-xl shadow-xl p-6\">\n              <div className=\"flex items-center gap-3 mb-4\">\n                <div className=\"w-6 h-6 bg-red-500 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                  </svg>\n                </div>\n                <h3 className=\"text-lg font-semibold text-gray-900\">Try it out</h3>\n              </div>\n              <textarea\n                placeholder=\"Type or paste your text here to analyze for bias and hate speech...\"\n                className=\"w-full h-64 p-4 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-red-500 focus:border-red-500 outline-none placeholder-gray-500 text-gray-900 transition-all duration-200\"\n                maxLength={500}\n              />\n              <div className=\"mt-4 flex justify-end\">\n                <button\n                  onClick={() => setShowAuthForm(true)}\n                  className=\"bg-red-500 text-white px-6 py-2 rounded-lg hover:bg-red-600 transition-all duration-200 font-medium\"\n                >\n                  Analyze Text\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Auth Modal */}\n      {showAuthForm && (\n        <AuthForm onClose={() => setShowAuthForm(false)} />\n      )}\n    </div>\n  );\n}\n\nexport function LandingPage() {\n  return (\n    <AuthProvider>\n      <MainContent />\n    </AuthProvider>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}